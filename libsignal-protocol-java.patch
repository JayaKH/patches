From a38004acf2d11787d531b53acc476767f3313401 Mon Sep 17 00:00:00 2001
From: WhatsApp Security <security@whatsapp.com>
Date: Thu, 2 Mar 2017 09:44:01 -0800
Subject: [PATCH] Changes to libsignal-protocol-java from Open Whisper Systems

Copyright (C) 2017 WhatsApp Inc. All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
---
 .gitignore                                         |    3 +-
 .idea/codeStyleSettings.xml                        |  244 +
 android/build.gradle                               |   38 -
 java/build.gradle                                  |   43 +-
 .../libsignal/fingerprint/FingerprintProtos.java   |  513 +-
 .../libsignal/groups/FastRatchetGroupCipher.java   |  205 +
 .../groups/FastRatchetGroupSessionBuilder.java     |  104 +
 .../libsignal/groups/GroupCipher.java              |   12 +-
 .../groups/ratchet/FastRatchetSenderChainKey.java  |  175 +
 .../groups/state/FastRatchetSenderKeyRecord.java   |   82 +
 .../groups/state/FastRatchetSenderKeyState.java    |  112 +
 .../groups/state/FastRatchetSenderKeyStore.java    |   37 +
 .../libsignal/groups/state/SenderKeyState.java     |    9 +-
 .../libsignal/protocol/CiphertextMessage.java      |    9 +-
 .../FastRatchetSenderKeyDistributionMessage.java   |  114 +
 .../libsignal/protocol/SignalProtos.java           | 1683 +++---
 .../libsignal/state/StorageProtos.java             | 5371 ++++++++------------
 .../libsignal/util/FastRatchetUtil.java            |   79 +
 protobuf/FingerprintProtocol.proto                 |    1 +
 protobuf/LocalStorageProtocol.proto                |   11 +
 protobuf/WhisperTextProtocol.proto                 |    8 +
 .../groups/FastRatchetGroupCipherTest.java         |  587 +++
 .../libsignal/groups/GroupCipherTest.java          |   38 +-
 .../groups/InMemoryFastRatchetSenderKeyStore.java  |   33 +
 .../libsignal/util/FastRatchetUtilTest.java        |   60 +
 25 files changed, 5095 insertions(+), 4476 deletions(-)
 create mode 100644 .idea/codeStyleSettings.xml
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java
 create mode 100644 tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java
 create mode 100644 tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java
 create mode 100644 tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java

diff --git a/.gitignore b/.gitignore
index b7e3f28..3e03bfd 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,6 +2,7 @@ build
 /obj
 *.iml
 .gradle
-.idea
+/.idea/**
+!/.idea/codeStyleSettings.xml
 gradle.properties
 local.properties
diff --git a/.idea/codeStyleSettings.xml b/.idea/codeStyleSettings.xml
new file mode 100644
index 0000000..7b1ca24
--- /dev/null
+++ b/.idea/codeStyleSettings.xml
@@ -0,0 +1,244 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectCodeStyleSettingsManager">
+    <option name="PER_PROJECT_SETTINGS">
+      <value>
+        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="99" />
+        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="99" />
+        <option name="PACKAGES_TO_USE_IMPORT_ON_DEMAND">
+          <value />
+        </option>
+        <option name="IMPORT_LAYOUT_TABLE">
+          <value>
+            <package name="android" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="com" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="junit" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="net" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="org" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="java" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="javax" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="" withSubpackages="true" static="true" />
+            <emptyLine />
+          </value>
+        </option>
+        <option name="RIGHT_MARGIN" value="100" />
+        <option name="JD_P_AT_EMPTY_LINES" value="false" />
+        <AndroidXmlCodeStyleSettings>
+          <option name="USE_CUSTOM_SETTINGS" value="true" />
+        </AndroidXmlCodeStyleSettings>
+        <Objective-C-extensions>
+          <option name="GENERATE_INSTANCE_VARIABLES_FOR_PROPERTIES" value="ASK" />
+          <option name="RELEASE_STYLE" value="IVAR" />
+          <option name="TYPE_QUALIFIERS_PLACEMENT" value="BEFORE" />
+          <file>
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Import" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Macro" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Typedef" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Enum" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Constant" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Global" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Struct" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="FunctionPredecl" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Function" />
+          </file>
+          <class>
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Property" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Synthesize" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InitMethod" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="StaticMethod" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InstanceMethod" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="DeallocMethod" />
+          </class>
+          <extensions>
+            <pair source="cpp" header="h" />
+            <pair source="c" header="h" />
+          </extensions>
+        </Objective-C-extensions>
+        <XML>
+          <option name="XML_LEGACY_SETTINGS_IMPORTED" value="true" />
+        </XML>
+        <codeStyleSettings language="JAVA">
+          <option name="BRACE_STYLE" value="5" />
+          <option name="METHOD_BRACE_STYLE" value="5" />
+          <option name="ALIGN_MULTILINE_CHAINED_METHODS" value="true" />
+          <option name="ALIGN_MULTILINE_PARAMETERS_IN_CALLS" value="true" />
+          <option name="ALIGN_GROUP_FIELD_DECLARATIONS" value="true" />
+          <option name="ALIGN_CONSECUTIVE_VARIABLE_DECLARATIONS" value="true" />
+          <option name="SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE" value="true" />
+          <indentOptions>
+            <option name="INDENT_SIZE" value="2" />
+            <option name="CONTINUATION_INDENT_SIZE" value="4" />
+            <option name="TAB_SIZE" value="2" />
+          </indentOptions>
+        </codeStyleSettings>
+        <codeStyleSettings language="XML">
+          <option name="FORCE_REARRANGE_MODE" value="1" />
+          <indentOptions>
+            <option name="CONTINUATION_INDENT_SIZE" value="4" />
+          </indentOptions>
+          <arrangement>
+            <rules>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>xmlns:android</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>xmlns:.*</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:id</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:name</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>name</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>style</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:layout_width</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:layout_height</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:layout_.*</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:width</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:height</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*</NAME>
+                      <XML_NAMESPACE>.*</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+            </rules>
+          </arrangement>
+        </codeStyleSettings>
+      </value>
+    </option>
+    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/android/build.gradle b/android/build.gradle
index 2270358..a07fe05 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -54,44 +54,6 @@ signing {
     sign configurations.archives
 }
 
-uploadArchives {
-    configuration = configurations.archives
-    repositories.mavenDeployer {
-        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-        repository(url: sonatypeRepo) {
-            authentication(userName: whisperSonatypeUsername, password: whisperSonatypePassword)
-        }
-
-        pom.project {
-            name 'signal-protocol-android'
-            packaging 'aar'
-            description 'Signal Protocol cryptography library for Android'
-            url 'https://github.com/WhisperSystems/libsignal-android'
-
-            scm {
-                url 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                connection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                developerConnection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-            }
-
-            licenses {
-                license {
-                    name 'GPLv3'
-                    url 'https://www.gnu.org/licenses/gpl-3.0.txt'
-                    distribution 'repo'
-                }
-            }
-
-            developers {
-                developer {
-                    name 'Moxie Marlinspike'
-                }
-            }
-        }
-    }
-}
-
 task installArchives(type: Upload) {
     description "Installs the artifacts to the local Maven repository."
     configuration = configurations['archives']
diff --git a/java/build.gradle b/java/build.gradle
index 001c679..7023ecd 100644
--- a/java/build.gradle
+++ b/java/build.gradle
@@ -15,14 +15,15 @@ repositories {
 sourceSets {
     test {
         java {
-            srcDirs = ['src/test/java/', project(':tests').file('src/test/java')]
+            if (findProject(':tests'))
+                srcDirs = ['src/test/java/', project(':tests').file('src/test/java')]
         }
     }
 }
 
 dependencies {
     compile "org.whispersystems:curve25519-java:${curve25519_version}"
-    compile 'com.google.protobuf:protobuf-java:2.5.0'
+    compile 'com.google.protobuf:protobuf-java:2.6.1'
 
     testCompile ('junit:junit:3.8.2')
 }
@@ -42,44 +43,6 @@ signing {
     sign configurations.archives
 }
 
-uploadArchives {
-    configuration = configurations.archives
-    repositories.mavenDeployer {
-        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-        repository(url: sonatypeRepo) {
-            authentication(userName: whisperSonatypeUsername, password: whisperSonatypePassword)
-        }
-
-        pom.project {
-            name 'signal-protocol-java'
-            packaging 'jar'
-            description 'Signal Protocol cryptography library for Java'
-            url 'https://github.com/WhisperSystems/libsignal-android'
-
-            scm {
-                url 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                connection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                developerConnection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-            }
-
-            licenses {
-                license {
-                    name 'GPLv3'
-                    url 'https://www.gnu.org/licenses/gpl-3.0.txt'
-                    distribution 'repo'
-                }
-            }
-
-            developers {
-                developer {
-                    name 'Moxie Marlinspike'
-                }
-            }
-        }
-    }
-}
-
 task installArchives(type: Upload) {
     description "Installs the artifacts to the local Maven repository."
     configuration = configurations['archives']
diff --git a/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java b/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java
index 8c4c5dd..1b5435c 100644
--- a/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java
+++ b/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java
@@ -6,12 +6,12 @@ package org.whispersystems.libsignal.fingerprint;
 public final class FingerprintProtos {
   private FingerprintProtos() {}
   public static void registerAllExtensions(
-      com.google.protobuf.ExtensionRegistry registry) {
+      com.google.protobuf.ExtensionRegistryLite registry) {
   }
-  public interface FingerprintDataOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface FingerprintDataOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FingerprintData)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional bytes publicKey = 1;
     /**
      * <code>optional bytes publicKey = 1;</code>
      */
@@ -21,7 +21,6 @@ public final class FingerprintProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes identifier = 2;
     /**
      * <code>optional bytes identifier = 2;</code>
      */
@@ -35,14 +34,15 @@ public final class FingerprintProtos {
    * Protobuf type {@code textsecure.FingerprintData}
    */
   public static final class FingerprintData extends
-      com.google.protobuf.GeneratedMessage
-      implements FingerprintDataOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FingerprintData)
+      FingerprintDataOrBuilder {
     // Use FingerprintData.newBuilder() to construct.
-    private FingerprintData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private FingerprintData(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private FingerprintData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private FingerprintData(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final FingerprintData defaultInstance;
     public static FingerprintData getDefaultInstance() {
@@ -53,20 +53,18 @@ public final class FingerprintProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private FingerprintData(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -76,7 +74,7 @@ public final class FingerprintProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -100,22 +98,16 @@ public final class FingerprintProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<FingerprintData> PARSER =
         new com.google.protobuf.AbstractParser<FingerprintData>() {
       public FingerprintData parsePartialFrom(
@@ -132,7 +124,6 @@ public final class FingerprintProtos {
     }
 
     private int bitField0_;
-    // optional bytes publicKey = 1;
     public static final int PUBLICKEY_FIELD_NUMBER = 1;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -148,7 +139,6 @@ public final class FingerprintProtos {
       return publicKey_;
     }
 
-    // optional bytes identifier = 2;
     public static final int IDENTIFIER_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString identifier_;
     /**
@@ -171,7 +161,8 @@ public final class FingerprintProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -186,7 +177,7 @@ public final class FingerprintProtos {
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
         output.writeBytes(2, identifier_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -203,7 +194,7 @@ public final class FingerprintProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(2, identifier_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -275,43 +266,21 @@ public final class FingerprintProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.FingerprintData}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FingerprintData)
+        org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder {
       // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -330,11 +299,6 @@ public final class FingerprintProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_descriptor;
-      }
-
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getDefaultInstanceForType() {
         return org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
       }
@@ -360,19 +324,9 @@ public final class FingerprintProtos {
         }
         result.identifier_ = identifier_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData) {
-          return mergeFrom((org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData other) {
         if (other == org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) return this;
         if (other.hasPublicKey()) {
@@ -381,7 +335,8 @@ public final class FingerprintProtos {
         if (other.hasIdentifier()) {
           setIdentifier(other.getIdentifier());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -408,7 +363,6 @@ public final class FingerprintProtos {
       }
       private int bitField0_;
 
-      // optional bytes publicKey = 1;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 1;</code>
@@ -431,7 +385,7 @@ public final class FingerprintProtos {
   }
   bitField0_ |= 0x00000001;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -440,11 +394,10 @@ public final class FingerprintProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000001);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes identifier = 2;
       private com.google.protobuf.ByteString identifier_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes identifier = 2;</code>
@@ -467,7 +420,7 @@ public final class FingerprintProtos {
   }
   bitField0_ |= 0x00000002;
         identifier_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -476,7 +429,7 @@ public final class FingerprintProtos {
       public Builder clearIdentifier() {
         bitField0_ = (bitField0_ & ~0x00000002);
         identifier_ = getDefaultInstance().getIdentifier();
-        onChanged();
+        
         return this;
       }
 
@@ -491,10 +444,10 @@ public final class FingerprintProtos {
     // @@protoc_insertion_point(class_scope:textsecure.FingerprintData)
   }
 
-  public interface CombinedFingerprintOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface CombinedFingerprintOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.CombinedFingerprint)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 version = 1;
     /**
      * <code>optional uint32 version = 1;</code>
      */
@@ -504,7 +457,6 @@ public final class FingerprintProtos {
      */
     int getVersion();
 
-    // optional .textsecure.FingerprintData localFingerprint = 2;
     /**
      * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
      */
@@ -513,12 +465,7 @@ public final class FingerprintProtos {
      * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
      */
     org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint();
-    /**
-     * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-     */
-    org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder();
 
-    // optional .textsecure.FingerprintData remoteFingerprint = 3;
     /**
      * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
      */
@@ -527,23 +474,20 @@ public final class FingerprintProtos {
      * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
      */
     org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint();
-    /**
-     * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-     */
-    org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder();
   }
   /**
    * Protobuf type {@code textsecure.CombinedFingerprint}
    */
   public static final class CombinedFingerprint extends
-      com.google.protobuf.GeneratedMessage
-      implements CombinedFingerprintOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.CombinedFingerprint)
+      CombinedFingerprintOrBuilder {
     // Use CombinedFingerprint.newBuilder() to construct.
-    private CombinedFingerprint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private CombinedFingerprint(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private CombinedFingerprint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private CombinedFingerprint(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final CombinedFingerprint defaultInstance;
     public static CombinedFingerprint getDefaultInstance() {
@@ -554,20 +498,18 @@ public final class FingerprintProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private CombinedFingerprint(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -577,7 +519,7 @@ public final class FingerprintProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -622,22 +564,16 @@ public final class FingerprintProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<CombinedFingerprint> PARSER =
         new com.google.protobuf.AbstractParser<CombinedFingerprint>() {
       public CombinedFingerprint parsePartialFrom(
@@ -654,7 +590,6 @@ public final class FingerprintProtos {
     }
 
     private int bitField0_;
-    // optional uint32 version = 1;
     public static final int VERSION_FIELD_NUMBER = 1;
     private int version_;
     /**
@@ -670,7 +605,6 @@ public final class FingerprintProtos {
       return version_;
     }
 
-    // optional .textsecure.FingerprintData localFingerprint = 2;
     public static final int LOCALFINGERPRINT_FIELD_NUMBER = 2;
     private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData localFingerprint_;
     /**
@@ -685,14 +619,7 @@ public final class FingerprintProtos {
     public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint() {
       return localFingerprint_;
     }
-    /**
-     * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-     */
-    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder() {
-      return localFingerprint_;
-    }
 
-    // optional .textsecure.FingerprintData remoteFingerprint = 3;
     public static final int REMOTEFINGERPRINT_FIELD_NUMBER = 3;
     private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData remoteFingerprint_;
     /**
@@ -707,12 +634,6 @@ public final class FingerprintProtos {
     public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint() {
       return remoteFingerprint_;
     }
-    /**
-     * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-     */
-    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder() {
-      return remoteFingerprint_;
-    }
 
     private void initFields() {
       version_ = 0;
@@ -722,7 +643,8 @@ public final class FingerprintProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -740,7 +662,7 @@ public final class FingerprintProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeMessage(3, remoteFingerprint_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -761,7 +683,7 @@ public final class FingerprintProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(3, remoteFingerprint_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -833,45 +755,21 @@ public final class FingerprintProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.CombinedFingerprint}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprintOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.CombinedFingerprint)
+        org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprintOrBuilder {
       // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getLocalFingerprintFieldBuilder();
-          getRemoteFingerprintFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -881,17 +779,9 @@ public final class FingerprintProtos {
         super.clear();
         version_ = 0;
         bitField0_ = (bitField0_ & ~0x00000001);
-        if (localFingerprintBuilder_ == null) {
-          localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-        } else {
-          localFingerprintBuilder_.clear();
-        }
+        localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000002);
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-        } else {
-          remoteFingerprintBuilder_.clear();
-        }
+        remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000004);
         return this;
       }
@@ -900,11 +790,6 @@ public final class FingerprintProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_descriptor;
-      }
-
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint getDefaultInstanceForType() {
         return org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.getDefaultInstance();
       }
@@ -928,33 +813,15 @@ public final class FingerprintProtos {
         if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
           to_bitField0_ |= 0x00000002;
         }
-        if (localFingerprintBuilder_ == null) {
-          result.localFingerprint_ = localFingerprint_;
-        } else {
-          result.localFingerprint_ = localFingerprintBuilder_.build();
-        }
+        result.localFingerprint_ = localFingerprint_;
         if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
           to_bitField0_ |= 0x00000004;
         }
-        if (remoteFingerprintBuilder_ == null) {
-          result.remoteFingerprint_ = remoteFingerprint_;
-        } else {
-          result.remoteFingerprint_ = remoteFingerprintBuilder_.build();
-        }
+        result.remoteFingerprint_ = remoteFingerprint_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint) {
-          return mergeFrom((org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint other) {
         if (other == org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.getDefaultInstance()) return this;
         if (other.hasVersion()) {
@@ -966,7 +833,8 @@ public final class FingerprintProtos {
         if (other.hasRemoteFingerprint()) {
           mergeRemoteFingerprint(other.getRemoteFingerprint());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -993,7 +861,6 @@ public final class FingerprintProtos {
       }
       private int bitField0_;
 
-      // optional uint32 version = 1;
       private int version_ ;
       /**
        * <code>optional uint32 version = 1;</code>
@@ -1013,7 +880,7 @@ public final class FingerprintProtos {
       public Builder setVersion(int value) {
         bitField0_ |= 0x00000001;
         version_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1022,14 +889,11 @@ public final class FingerprintProtos {
       public Builder clearVersion() {
         bitField0_ = (bitField0_ & ~0x00000001);
         version_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional .textsecure.FingerprintData localFingerprint = 2;
       private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> localFingerprintBuilder_;
       /**
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
@@ -1040,25 +904,17 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint() {
-        if (localFingerprintBuilder_ == null) {
-          return localFingerprint_;
-        } else {
-          return localFingerprintBuilder_.getMessage();
-        }
+        return localFingerprint_;
       }
       /**
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public Builder setLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (localFingerprintBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          localFingerprint_ = value;
-          onChanged();
-        } else {
-          localFingerprintBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        localFingerprint_ = value;
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -1067,12 +923,8 @@ public final class FingerprintProtos {
        */
       public Builder setLocalFingerprint(
           org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder builderForValue) {
-        if (localFingerprintBuilder_ == null) {
-          localFingerprint_ = builderForValue.build();
-          onChanged();
-        } else {
-          localFingerprintBuilder_.setMessage(builderForValue.build());
-        }
+        localFingerprint_ = builderForValue.build();
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -1080,18 +932,14 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public Builder mergeLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (localFingerprintBuilder_ == null) {
-          if (((bitField0_ & 0x00000002) == 0x00000002) &&
-              localFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
-            localFingerprint_ =
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(localFingerprint_).mergeFrom(value).buildPartial();
-          } else {
-            localFingerprint_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000002) == 0x00000002) &&
+            localFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
+          localFingerprint_ =
+            org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(localFingerprint_).mergeFrom(value).buildPartial();
         } else {
-          localFingerprintBuilder_.mergeFrom(value);
+          localFingerprint_ = value;
         }
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -1099,54 +947,13 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public Builder clearLocalFingerprint() {
-        if (localFingerprintBuilder_ == null) {
-          localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-          onChanged();
-        } else {
-          localFingerprintBuilder_.clear();
-        }
+        localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000002);
         return this;
       }
-      /**
-       * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder getLocalFingerprintBuilder() {
-        bitField0_ |= 0x00000002;
-        onChanged();
-        return getLocalFingerprintFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder() {
-        if (localFingerprintBuilder_ != null) {
-          return localFingerprintBuilder_.getMessageOrBuilder();
-        } else {
-          return localFingerprint_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> 
-          getLocalFingerprintFieldBuilder() {
-        if (localFingerprintBuilder_ == null) {
-          localFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder>(
-                  localFingerprint_,
-                  getParentForChildren(),
-                  isClean());
-          localFingerprint_ = null;
-        }
-        return localFingerprintBuilder_;
-      }
 
-      // optional .textsecure.FingerprintData remoteFingerprint = 3;
       private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> remoteFingerprintBuilder_;
       /**
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
@@ -1157,25 +964,17 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint() {
-        if (remoteFingerprintBuilder_ == null) {
-          return remoteFingerprint_;
-        } else {
-          return remoteFingerprintBuilder_.getMessage();
-        }
+        return remoteFingerprint_;
       }
       /**
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public Builder setRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (remoteFingerprintBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          remoteFingerprint_ = value;
-          onChanged();
-        } else {
-          remoteFingerprintBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        remoteFingerprint_ = value;
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -1184,12 +983,8 @@ public final class FingerprintProtos {
        */
       public Builder setRemoteFingerprint(
           org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder builderForValue) {
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprint_ = builderForValue.build();
-          onChanged();
-        } else {
-          remoteFingerprintBuilder_.setMessage(builderForValue.build());
-        }
+        remoteFingerprint_ = builderForValue.build();
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -1197,18 +992,14 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public Builder mergeRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (remoteFingerprintBuilder_ == null) {
-          if (((bitField0_ & 0x00000004) == 0x00000004) &&
-              remoteFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
-            remoteFingerprint_ =
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(remoteFingerprint_).mergeFrom(value).buildPartial();
-          } else {
-            remoteFingerprint_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000004) == 0x00000004) &&
+            remoteFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
+          remoteFingerprint_ =
+            org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(remoteFingerprint_).mergeFrom(value).buildPartial();
         } else {
-          remoteFingerprintBuilder_.mergeFrom(value);
+          remoteFingerprint_ = value;
         }
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -1216,49 +1007,11 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public Builder clearRemoteFingerprint() {
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-          onChanged();
-        } else {
-          remoteFingerprintBuilder_.clear();
-        }
+        remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000004);
         return this;
       }
-      /**
-       * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder getRemoteFingerprintBuilder() {
-        bitField0_ |= 0x00000004;
-        onChanged();
-        return getRemoteFingerprintFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder() {
-        if (remoteFingerprintBuilder_ != null) {
-          return remoteFingerprintBuilder_.getMessageOrBuilder();
-        } else {
-          return remoteFingerprint_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> 
-          getRemoteFingerprintFieldBuilder() {
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder>(
-                  remoteFingerprint_,
-                  getParentForChildren(),
-                  isClean());
-          remoteFingerprint_ = null;
-        }
-        return remoteFingerprintBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.CombinedFingerprint)
     }
@@ -1271,58 +1024,8 @@ public final class FingerprintProtos {
     // @@protoc_insertion_point(class_scope:textsecure.CombinedFingerprint)
   }
 
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_FingerprintData_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_FingerprintData_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_CombinedFingerprint_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_CombinedFingerprint_fieldAccessorTable;
-
-  public static com.google.protobuf.Descriptors.FileDescriptor
-      getDescriptor() {
-    return descriptor;
-  }
-  private static com.google.protobuf.Descriptors.FileDescriptor
-      descriptor;
+
   static {
-    java.lang.String[] descriptorData = {
-      "\n\031FingerprintProtocol.proto\022\ntextsecure\"" +
-      "8\n\017FingerprintData\022\021\n\tpublicKey\030\001 \001(\014\022\022\n" +
-      "\nidentifier\030\002 \001(\014\"\225\001\n\023CombinedFingerprin" +
-      "t\022\017\n\007version\030\001 \001(\r\0225\n\020localFingerprint\030\002" +
-      " \001(\0132\033.textsecure.FingerprintData\0226\n\021rem" +
-      "oteFingerprint\030\003 \001(\0132\033.textsecure.Finger" +
-      "printDataB=\n(org.whispersystems.libsigna" +
-      "l.fingerprintB\021FingerprintProtos"
-    };
-    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
-      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
-        public com.google.protobuf.ExtensionRegistry assignDescriptors(
-            com.google.protobuf.Descriptors.FileDescriptor root) {
-          descriptor = root;
-          internal_static_textsecure_FingerprintData_descriptor =
-            getDescriptor().getMessageTypes().get(0);
-          internal_static_textsecure_FingerprintData_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_FingerprintData_descriptor,
-              new java.lang.String[] { "PublicKey", "Identifier", });
-          internal_static_textsecure_CombinedFingerprint_descriptor =
-            getDescriptor().getMessageTypes().get(1);
-          internal_static_textsecure_CombinedFingerprint_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_CombinedFingerprint_descriptor,
-              new java.lang.String[] { "Version", "LocalFingerprint", "RemoteFingerprint", });
-          return null;
-        }
-      };
-    com.google.protobuf.Descriptors.FileDescriptor
-      .internalBuildGeneratedFileFrom(descriptorData,
-        new com.google.protobuf.Descriptors.FileDescriptor[] {
-        }, assigner);
   }
 
   // @@protoc_insertion_point(outer_class_scope)
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java
new file mode 100644
index 0000000..ed621c8
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java
@@ -0,0 +1,205 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups;
+
+import org.whispersystems.libsignal.DecryptionCallback;
+import org.whispersystems.libsignal.DuplicateMessageException;
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.InvalidMessageException;
+import org.whispersystems.libsignal.LegacyMessageException;
+import org.whispersystems.libsignal.NoSessionException;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.groups.ratchet.SenderMessageKey;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyState;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyStore;
+import org.whispersystems.libsignal.protocol.SenderKeyMessage;
+
+import java.security.InvalidAlgorithmParameterException;
+import java.security.NoSuchAlgorithmException;
+
+import javax.crypto.BadPaddingException;
+import javax.crypto.Cipher;
+import javax.crypto.IllegalBlockSizeException;
+import javax.crypto.NoSuchPaddingException;
+import javax.crypto.spec.IvParameterSpec;
+import javax.crypto.spec.SecretKeySpec;
+
+/**
+ * The main entry point for Signal Protocol fast ratchet group encrypt/decrypt operations.
+ *
+ * Once a session has been established with {@link org.whispersystems.libsignal.groups.FastRatchetGroupSessionBuilder}
+ * and a {@link org.whispersystems.libsignal.protocol.SenderKeyDistributionMessage} has been
+ * distributed to each member of the group, this class can be used for all subsequent encrypt/decrypt
+ * operations within that session (ie: until group membership changes).
+ */
+public class FastRatchetGroupCipher {
+
+  static final Object LOCK = new Object();
+
+  private final FastRatchetSenderKeyStore senderKeyStore;
+  private final SenderKeyName             senderKeyId;
+
+  /**
+   * Creates a new instance of the fast ratchet group cipher.
+   *
+   * @param senderKeyStore Key store used for keeping track of sessions.
+   * @param senderKeyId ID for the sender key.
+   */
+  public FastRatchetGroupCipher(FastRatchetSenderKeyStore senderKeyStore, SenderKeyName senderKeyId) {
+    this.senderKeyStore     = senderKeyStore;
+    this.senderKeyId        = senderKeyId;
+  }
+
+  /**
+   * Encrypt a message.
+   *
+   * @param paddedPlaintext The plaintext message bytes, optionally padded.
+   * @return Ciphertext.
+   * @throws NoSessionException
+   */
+  public byte[] encrypt(byte[] paddedPlaintext) throws NoSessionException {
+    synchronized (LOCK) {
+      try {
+        FastRatchetSenderKeyRecord record         = senderKeyStore.loadFastRatchetSenderKey(senderKeyId);
+        FastRatchetSenderKeyState  senderKeyState = record.getSenderKeyState();
+        SenderMessageKey           senderKey      = senderKeyState.getSenderChainKey().getSenderMessageKey();
+        byte[]                     ciphertext     = getCipherText(senderKey.getIv(), senderKey.getCipherKey(), paddedPlaintext);
+
+        SenderKeyMessage senderKeyMessage = new SenderKeyMessage(senderKeyState.getKeyId(),
+                                                                 senderKey.getIteration(),
+                                                                 ciphertext,
+                                                                 senderKeyState.getSigningKeyPrivate());
+
+        senderKeyState.setSenderChainKey(senderKeyState.getSenderChainKey().getNext());
+
+        senderKeyStore.storeFastRatchetSenderKey(senderKeyId, record);
+
+        return senderKeyMessage.serialize();
+      } catch (InvalidKeyIdException e) {
+        throw new NoSessionException(e);
+      }
+    }
+  }
+
+  /**
+   * Decrypt a SenderKey group message.
+   *
+   * @param senderKeyMessageBytes The received ciphertext.
+   * @return Plaintext
+   * @throws LegacyMessageException
+   * @throws InvalidMessageException
+   * @throws DuplicateMessageException
+   */
+  public byte[] decrypt(byte[] senderKeyMessageBytes)
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    return decrypt(senderKeyMessageBytes, new NullDecryptionCallback());
+  }
+
+  /**
+   * Decrypt a SenderKey group message.
+   *
+   * @param senderKeyMessageBytes The received ciphertext.
+   * @param callback   A callback that is triggered after decryption is complete,
+   *                    but before the updated session state has been committed to the session
+   *                    DB.  This allows some implementations to store the committed plaintext
+   *                    to a DB first, in case they are concerned with a crash happening between
+   *                    the time the session state is updated but before they're able to store
+   *                    the plaintext to disk.
+   * @return Plaintext
+   * @throws LegacyMessageException
+   * @throws InvalidMessageException
+   * @throws DuplicateMessageException
+   */
+  public byte[] decrypt(byte[] senderKeyMessageBytes, DecryptionCallback callback)
+      throws LegacyMessageException, InvalidMessageException, DuplicateMessageException,
+             NoSessionException
+  {
+    synchronized (LOCK) {
+      try {
+        FastRatchetSenderKeyRecord record = senderKeyStore.loadFastRatchetSenderKey(senderKeyId);
+
+        if (record.isEmpty()) {
+          throw new NoSessionException("No sender key for: " + senderKeyId);
+        }
+
+        SenderKeyMessage          senderKeyMessage = new SenderKeyMessage(senderKeyMessageBytes);
+        FastRatchetSenderKeyState senderKeyState   = record.getSenderKeyState(senderKeyMessage.getKeyId());
+
+        senderKeyMessage.verifySignature(senderKeyState.getSigningKeyPublic());
+
+        SenderMessageKey senderKey = getSenderKey(senderKeyState, senderKeyMessage.getIteration());
+
+        byte[] plaintext = getPlainText(senderKey.getIv(), senderKey.getCipherKey(), senderKeyMessage.getCipherText());
+
+        callback.handlePlaintext(plaintext);
+
+        senderKeyStore.storeFastRatchetSenderKey(senderKeyId, record);
+
+        return plaintext;
+      } catch (org.whispersystems.libsignal.InvalidKeyException | InvalidKeyIdException e) {
+        throw new InvalidMessageException(e);
+      }
+    }
+  }
+
+  private SenderMessageKey getSenderKey(FastRatchetSenderKeyState senderKeyState, int iteration)
+      throws DuplicateMessageException, InvalidMessageException
+  {
+    FastRatchetSenderChainKey senderChainKey = senderKeyState.getSenderChainKey();
+
+    if (senderChainKey.getIteration() > iteration) {
+      throw new DuplicateMessageException("Received message with old counter: " +
+                                          senderChainKey.getIteration() + " , " + iteration);
+    } else if (senderChainKey.getIteration() < iteration) {
+      senderChainKey = senderChainKey.getNext(iteration - senderChainKey.getIteration());
+    }
+
+    senderKeyState.setSenderChainKey(senderChainKey.getNext());
+    return senderChainKey.getSenderMessageKey();
+  }
+
+  private byte[] getPlainText(byte[] iv, byte[] key, byte[] ciphertext)
+      throws InvalidMessageException
+  {
+    try {
+      IvParameterSpec ivParameterSpec = new IvParameterSpec(iv);
+      Cipher          cipher          = Cipher.getInstance("AES/CBC/PKCS5Padding");
+
+      cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, "AES"), ivParameterSpec);
+
+      return cipher.doFinal(ciphertext);
+    } catch (NoSuchAlgorithmException | NoSuchPaddingException | java.security.InvalidKeyException |
+             InvalidAlgorithmParameterException e)
+    {
+      throw new AssertionError(e);
+    } catch (IllegalBlockSizeException | BadPaddingException e) {
+      throw new InvalidMessageException(e);
+    }
+  }
+
+  private byte[] getCipherText(byte[] iv, byte[] key, byte[] plaintext) {
+    try {
+      IvParameterSpec ivParameterSpec = new IvParameterSpec(iv);
+      Cipher          cipher          = Cipher.getInstance("AES/CBC/PKCS5Padding");
+
+      cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, "AES"), ivParameterSpec);
+
+      return cipher.doFinal(plaintext);
+    } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidAlgorithmParameterException |
+             IllegalBlockSizeException | BadPaddingException | java.security.InvalidKeyException e)
+    {
+      throw new AssertionError(e);
+    }
+  }
+
+  private static class NullDecryptionCallback implements DecryptionCallback {
+    @Override
+    public void handlePlaintext(byte[] plaintext) {}
+  }
+
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java
new file mode 100644
index 0000000..866a98c
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java
@@ -0,0 +1,104 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups;
+
+import org.whispersystems.libsignal.InvalidKeyException;
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyState;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyStore;
+import org.whispersystems.libsignal.protocol.FastRatchetSenderKeyDistributionMessage;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+import org.whispersystems.libsignal.util.KeyHelper;
+
+/**
+ * FastRatchetGroupSessionBuilder is responsible for setting up group SenderKey encrypted sessions.
+ *
+ * Once a session has been established, {@link org.whispersystems.libsignal.groups.FastRatchetGroupCipher}
+ * can be used to encrypt/decrypt messages in that session.
+ * <p>
+ * The built sessions are unidirectional: they can be used either for sending or for receiving,
+ * but not both.
+ *
+ * Sessions are constructed per (groupId + senderId + deviceId) tuple.  Remote logical users
+ * are identified by their senderId, and each logical recipientId can have multiple physical
+ * devices.
+ */
+public class FastRatchetGroupSessionBuilder {
+
+  private final FastRatchetSenderKeyStore senderKeyStore;
+
+  public FastRatchetGroupSessionBuilder(FastRatchetSenderKeyStore senderKeyStore) {
+    this.senderKeyStore = senderKeyStore;
+  }
+
+  /**
+   * Construct a group session for receiving messages from senderKeyName.
+   *
+   * @param senderKeyName The (groupId, senderId, deviceId) tuple associated with the FastRatchetSenderKeyDistributionMessage.
+   * @param senderKeyDistributionMessage A received FastRatchetSenderKeyDistributionMessage.
+   */
+  public void process(SenderKeyName senderKeyName, FastRatchetSenderKeyDistributionMessage senderKeyDistributionMessage) {
+    synchronized (FastRatchetGroupCipher.LOCK) {
+      FastRatchetSenderKeyRecord senderKeyRecord = senderKeyStore.loadFastRatchetSenderKey(senderKeyName);
+      senderKeyRecord.addSenderKeyState(senderKeyDistributionMessage.getId(),
+                                        senderKeyDistributionMessage.getIteration(),
+                                        senderKeyDistributionMessage.getChainKeys(),
+                                        senderKeyDistributionMessage.getSignatureKey());
+      senderKeyStore.storeFastRatchetSenderKey(senderKeyName, senderKeyRecord);
+    }
+  }
+
+  /**
+   * Construct a group session for sending messages.
+   *
+   * @param senderKeyName The (groupId, senderId, deviceId) tuple.  In this case, 'senderId' should be the caller.
+   * @param scale Value from which the number of dimensions for the chain key ratchet is derived.
+   *              Valid values are from [0..5]. (Dimensions is 2^scale.)
+   * @return A SenderKeyDistributionMessage that is individually distributed to each member of the group.
+   */
+  public FastRatchetSenderKeyDistributionMessage create(SenderKeyName senderKeyName, int scale) {
+    if (scale < 0 || scale > 5) {
+      throw new IllegalArgumentException("scale must be between 0 and 5");
+    }
+
+    synchronized (FastRatchetGroupCipher.LOCK) {
+      try {
+        FastRatchetSenderKeyRecord senderKeyRecord = senderKeyStore.loadFastRatchetSenderKey(senderKeyName);
+
+        boolean createState = false;
+        if (senderKeyRecord.isEmpty()) {
+          createState = true;
+        } else {
+          FastRatchetSenderKeyState state = senderKeyRecord.getSenderKeyState();
+          if (FastRatchetUtil.scaleToDimensions(scale) != state.getSenderChainKey().getSeeds().length) {
+            createState = true;
+          }
+        }
+
+        if (createState) {
+          FastRatchetSenderChainKey initialChainKey = new FastRatchetSenderChainKey(KeyHelper.generateSenderKey(), scale);
+          senderKeyRecord.setSenderKeyState(KeyHelper.generateSenderKeyId(),
+                                            0,
+                                            initialChainKey.getSeeds(),
+                                            KeyHelper.generateSenderSigningKey());
+          senderKeyStore.storeFastRatchetSenderKey(senderKeyName, senderKeyRecord);
+        }
+
+        FastRatchetSenderKeyState state = senderKeyRecord.getSenderKeyState();
+
+        return new FastRatchetSenderKeyDistributionMessage(state.getKeyId(),
+                                                           state.getSenderChainKey().getIteration(),
+                                                           state.getSenderChainKey().getSeeds(),
+                                                           state.getSigningKeyPublic());
+
+      } catch (InvalidKeyIdException | InvalidKeyException e) {
+        throw new AssertionError(e);
+      }
+    }
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java b/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java
index d1d6bb6..687fd12 100644
--- a/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java
@@ -7,10 +7,12 @@ package org.whispersystems.libsignal.groups;
 
 import org.whispersystems.libsignal.DecryptionCallback;
 import org.whispersystems.libsignal.DuplicateMessageException;
+import org.whispersystems.libsignal.InvalidKeyException;
 import org.whispersystems.libsignal.InvalidKeyIdException;
 import org.whispersystems.libsignal.InvalidMessageException;
 import org.whispersystems.libsignal.LegacyMessageException;
 import org.whispersystems.libsignal.NoSessionException;
+import org.whispersystems.libsignal.ecc.ECPrivateKey;
 import org.whispersystems.libsignal.groups.ratchet.SenderChainKey;
 import org.whispersystems.libsignal.groups.ratchet.SenderMessageKey;
 import org.whispersystems.libsignal.groups.state.SenderKeyRecord;
@@ -56,19 +58,25 @@ public class GroupCipher {
    * @param paddedPlaintext The plaintext message bytes, optionally padded.
    * @return Ciphertext.
    * @throws NoSessionException
+   * @throws InvalidKeyException
    */
-  public byte[] encrypt(byte[] paddedPlaintext) throws NoSessionException {
+  public byte[] encrypt(byte[] paddedPlaintext) throws NoSessionException, InvalidKeyException {
     synchronized (LOCK) {
       try {
         SenderKeyRecord  record         = senderKeyStore.loadSenderKey(senderKeyId);
         SenderKeyState   senderKeyState = record.getSenderKeyState();
         SenderMessageKey senderKey      = senderKeyState.getSenderChainKey().getSenderMessageKey();
+        ECPrivateKey     signatureKey   = senderKeyState.getSigningKeyPrivate();
         byte[]           ciphertext     = getCipherText(senderKey.getIv(), senderKey.getCipherKey(), paddedPlaintext);
 
+        if (signatureKey == null) {
+          throw new InvalidKeyException("Session missing signature key!");
+        }
+
         SenderKeyMessage senderKeyMessage = new SenderKeyMessage(senderKeyState.getKeyId(),
                                                                  senderKey.getIteration(),
                                                                  ciphertext,
-                                                                 senderKeyState.getSigningKeyPrivate());
+                                                                 signatureKey);
 
         senderKeyState.setSenderChainKey(senderKeyState.getSenderChainKey().getNext());
 
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java b/java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java
new file mode 100644
index 0000000..138c58d
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java
@@ -0,0 +1,175 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.ratchet;
+
+import org.whispersystems.libsignal.state.StorageProtos;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+
+import java.security.InvalidKeyException;
+import java.security.NoSuchAlgorithmException;
+import java.util.List;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+
+/**
+ * Each SenderKey is a "chain" of keys, each derived from the previous.
+ *
+ * At any given point in time, the state of a SenderKey can be represented
+ * as the current chain key value, along with its iteration count.  From there,
+ * subsequent iterations can be derived, as well as individual message keys from
+ * each chain key.
+ */
+public class FastRatchetSenderChainKey {
+
+  private static final byte MESSAGE_KEY_SEED = (byte) 0x01;
+  private static final byte CHAIN_KEY_SEED   = (byte) 0x02;
+
+  private final int      iteration;
+  private final byte[][] chainKeys;
+
+  public FastRatchetSenderChainKey(byte[] baseChainKey, int scale) {
+    if (scale < 0 || scale > 5) {
+      throw new IllegalArgumentException("scale must be between 0 and 5");
+    }
+
+    int count = FastRatchetUtil.scaleToDimensions(scale);
+    this.iteration = 0;
+
+    this.chainKeys = new byte[count][];
+    this.chainKeys[0] = baseChainKey;
+
+    for (int i = 1; i < count; i++) {
+      this.chainKeys[i] = new byte[0];
+    }
+  }
+
+  public FastRatchetSenderChainKey(int iteration, byte[][] chainKeys) {
+    if (chainKeys.length == 0 || 32 % chainKeys.length != 0) {
+      throw new IllegalArgumentException("Invalid number of chain keys: " + chainKeys.length);
+    }
+
+    validateChainKeyParameters(iteration, chainKeys);
+
+    this.iteration = iteration;
+    this.chainKeys = chainKeys;
+  }
+
+  public FastRatchetSenderChainKey(List<StorageProtos.SenderKeyStateStructure.SenderChainKey> senderChainKeysList) {
+    if (senderChainKeysList.isEmpty() || 32 % senderChainKeysList.size() != 0) {
+      throw new IllegalArgumentException("Invalid number of chain keys: " + senderChainKeysList.size());
+    }
+
+    int   chainCount          = senderChainKeysList.size();
+    int[] iterationComponents = new int[chainCount];
+    this.chainKeys = new byte[chainCount][];
+
+    for (int i = 0; i < chainCount; i++) {
+      iterationComponents[i] = senderChainKeysList.get(i).getIteration();
+      this.chainKeys[i] = senderChainKeysList.get(i).getSeed().toByteArray();
+    }
+
+    this.iteration = FastRatchetUtil.composeChainIterations(iterationComponents);
+
+    validateChainKeyParameters(this.iteration, this.chainKeys);
+  }
+
+  private static void validateChainKeyParameters(int iteration, byte[][] chainKeys) {
+    if (iteration == 0 && chainKeys.length > 1 && chainKeys[1].length == 0) {
+      for (int i = 2; i < chainKeys.length; i++) {
+        if (chainKeys[i].length > 0) {
+          throw new IllegalArgumentException("Invalid chain key values for starting iteration");
+        }
+      }
+    } else {
+      for (int i = 0; i < chainKeys.length; i++) {
+        if (chainKeys[i].length == 0) {
+          throw new IllegalArgumentException("Invalid chain key values");
+        }
+      }
+    }
+  }
+
+  public int getIteration() {
+    return iteration;
+  }
+
+  public SenderMessageKey getSenderMessageKey() {
+    byte[][] chainKeysToUse = getDerivedSeeds();
+    return new SenderMessageKey(getIteration(), getDerivative(MESSAGE_KEY_SEED, chainKeysToUse[chainKeysToUse.length - 1]));
+  }
+
+  public FastRatchetSenderChainKey getNext() {
+    return getNext(1);
+  }
+
+  public FastRatchetSenderChainKey getNext(int count) {
+    if (count <= 0) {
+      throw new IllegalArgumentException("count must be a positive number: " + count);
+    }
+
+    int   nextIteration        = iteration + count;
+    int[] currentDecomposition = FastRatchetUtil.decomposeChainIterations(iteration, chainKeys.length);
+    int[] nextDecomposition    = FastRatchetUtil.decomposeChainIterations(nextIteration, chainKeys.length);
+
+    byte[][] chainKeysToUse = getDerivedSeeds();
+
+    ratchetChainKeys(currentDecomposition, nextDecomposition, chainKeysToUse);
+
+    return new FastRatchetSenderChainKey(nextIteration, chainKeysToUse);
+  }
+
+  private void ratchetChainKeys(int[] currentDecomposition, int[] nextDecomposition, byte[][] chains) {
+    for (int i = 0; i < chains.length; i++) {
+      while (nextDecomposition[i] > currentDecomposition[i]) {
+        if (i < chains.length - 1 && nextDecomposition[i] - 1 == currentDecomposition[i]) {
+          chains[i + 1] = getDerivative((byte) (CHAIN_KEY_SEED + i + 1), chains[i]);
+          currentDecomposition[i + 1] = 0;
+        }
+        chains[i] = getDerivative((byte) (CHAIN_KEY_SEED + i), chains[i]);
+        currentDecomposition[i]++;
+      }
+    }
+  }
+
+  public byte[][] getSeeds() {
+    return chainKeys;
+  }
+
+  /**
+   * This method is only exposed for testing.
+   */
+  public byte[][] getDerivedSeeds() {
+    byte[][] seeds = new byte[chainKeys.length][];
+
+    if (iteration == 0 && chainKeys.length > 1 && chainKeys[1].length == 0) {
+      for (int i = 0; i < chainKeys.length - 1; i++) {
+        byte[] currentKey = (i == 0) ? chainKeys[0] : seeds[i];
+        seeds[i + 1] = getDerivative((byte) (CHAIN_KEY_SEED + i + 1), currentKey);
+        seeds[i] = getDerivative((byte) (CHAIN_KEY_SEED + i), currentKey);
+      }
+    } else {
+      for (int i = 0; i < chainKeys.length; i++) {
+        seeds[i] = new byte[chainKeys[i].length];
+        System.arraycopy(chainKeys[i], 0, seeds[i], 0, chainKeys[i].length);
+      }
+    }
+
+    return seeds;
+  }
+
+  private byte[] getDerivative(byte seed, byte[] key) {
+    try {
+      Mac mac = Mac.getInstance("HmacSHA256");
+      mac.init(new SecretKeySpec(key, "HmacSHA256"));
+      mac.update(seed);
+      return mac.doFinal();
+    } catch (NoSuchAlgorithmException | InvalidKeyException e) {
+      throw new AssertionError(e);
+    }
+  }
+
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java
new file mode 100644
index 0000000..463bf7f
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java
@@ -0,0 +1,82 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.state;
+
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.ecc.ECKeyPair;
+import org.whispersystems.libsignal.ecc.ECPublicKey;
+import org.whispersystems.libsignal.state.StorageProtos;
+
+import java.io.IOException;
+import java.util.LinkedList;
+
+/**
+ * A durable representation of a set of FastRatchetSenderKeyStates for a specific
+ * SenderKeyName.
+ */
+public class FastRatchetSenderKeyRecord {
+
+  private static final int MAX_STATES = 5;
+
+  private LinkedList<FastRatchetSenderKeyState> senderKeyStates = new LinkedList<>();
+
+  public FastRatchetSenderKeyRecord() {}
+
+  public FastRatchetSenderKeyRecord(byte[] serialized) throws IOException {
+    StorageProtos.FastRatchetSenderKeyRecordStructure senderKeyRecordStructure =
+            StorageProtos.FastRatchetSenderKeyRecordStructure.parseFrom(serialized);
+
+    for (StorageProtos.FastRatchetSenderKeyStateStructure structure : senderKeyRecordStructure.getSenderKeyStatesList()) {
+      this.senderKeyStates.add(new FastRatchetSenderKeyState(structure));
+    }
+  }
+
+  public boolean isEmpty() {
+    return senderKeyStates.isEmpty();
+  }
+
+  public FastRatchetSenderKeyState getSenderKeyState() throws InvalidKeyIdException {
+    if (!senderKeyStates.isEmpty()) {
+      return senderKeyStates.get(0);
+    } else {
+      throw new InvalidKeyIdException("No key state in record!");
+    }
+  }
+
+  public FastRatchetSenderKeyState getSenderKeyState(int keyId) throws InvalidKeyIdException {
+    for (FastRatchetSenderKeyState state : senderKeyStates) {
+      if (state.getKeyId() == keyId) {
+        return state;
+      }
+    }
+
+    throw new InvalidKeyIdException("No keys for: " + keyId);
+  }
+
+  public void addSenderKeyState(int id, int iteration, byte[][] chainKeys, ECPublicKey signatureKey) {
+    senderKeyStates.addFirst(new FastRatchetSenderKeyState(id, iteration, chainKeys, signatureKey));
+
+    if (senderKeyStates.size() > MAX_STATES) {
+      senderKeyStates.removeLast();
+    }
+  }
+
+  public void setSenderKeyState(int id, int iteration, byte[][] chainKeys, ECKeyPair signatureKey) {
+    senderKeyStates.clear();
+    senderKeyStates.add(new FastRatchetSenderKeyState(id, iteration, chainKeys, signatureKey));
+  }
+
+  public byte[] serialize() {
+    StorageProtos.FastRatchetSenderKeyRecordStructure.Builder recordStructure =
+            StorageProtos.FastRatchetSenderKeyRecordStructure.newBuilder();
+
+    for (FastRatchetSenderKeyState senderKeyState : senderKeyStates) {
+      recordStructure.addSenderKeyStates(senderKeyState.getStructure());
+    }
+
+    return recordStructure.build().toByteArray();
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java
new file mode 100644
index 0000000..b2ba4c4
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java
@@ -0,0 +1,112 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.state;
+
+import com.google.protobuf.ByteString;
+
+import org.whispersystems.libsignal.InvalidKeyException;
+import org.whispersystems.libsignal.ecc.Curve;
+import org.whispersystems.libsignal.ecc.ECKeyPair;
+import org.whispersystems.libsignal.ecc.ECPrivateKey;
+import org.whispersystems.libsignal.ecc.ECPublicKey;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+import org.whispersystems.libsignal.util.guava.Optional;
+
+import org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure;
+import org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure;
+
+/**
+ * Represents the state of an individual SenderKey ratchet.
+ */
+public class FastRatchetSenderKeyState {
+
+  private FastRatchetSenderKeyStateStructure senderKeyStateStructure;
+
+  public FastRatchetSenderKeyState(int id, int iteration, byte[][] chainKeys, ECPublicKey signatureKey) {
+    this(id, iteration, chainKeys, signatureKey, Optional.<ECPrivateKey>absent());
+  }
+
+  public FastRatchetSenderKeyState(int id, int iteration, byte[][] chainKeys, ECKeyPair signatureKey) {
+    this(id, iteration, chainKeys, signatureKey.getPublicKey(), Optional.of(signatureKey.getPrivateKey()));
+  }
+
+  private FastRatchetSenderKeyState(int id, int iteration, byte[][] chainKeys,
+                                    ECPublicKey signatureKeyPublic,
+                                    Optional<ECPrivateKey> signatureKeyPrivate)
+  {
+    SenderKeyStateStructure.SenderSigningKey.Builder signingKeyStructure =
+        SenderKeyStateStructure.SenderSigningKey.newBuilder()
+                                                .setPublic(ByteString.copyFrom(signatureKeyPublic.serialize()));
+
+    if (signatureKeyPrivate.isPresent()) {
+      signingKeyStructure.setPrivate(ByteString.copyFrom(signatureKeyPrivate.get().serialize()));
+    }
+
+    FastRatchetSenderKeyStateStructure.Builder builder =
+        FastRatchetSenderKeyStateStructure.newBuilder()
+                                          .setSenderKeyId(id)
+                                          .setSenderSigningKey(signingKeyStructure);
+
+    int[] chainIterations = FastRatchetUtil.decomposeChainIterations(iteration, chainKeys.length);
+    for (int i = 0; i < chainKeys.length; i++) {
+      SenderKeyStateStructure.SenderChainKey senderChainKeyStructure =
+          SenderKeyStateStructure.SenderChainKey.newBuilder()
+                                                .setIteration(chainIterations[i])
+                                                .setSeed(ByteString.copyFrom(chainKeys[i]))
+                                                .build();
+      builder.addSenderChainKeys(senderChainKeyStructure);
+    }
+
+    this.senderKeyStateStructure = builder.build();
+  }
+
+  public FastRatchetSenderKeyState(FastRatchetSenderKeyStateStructure senderKeyStateStructure) {
+    this.senderKeyStateStructure = senderKeyStateStructure;
+  }
+
+  public int getKeyId() {
+    return senderKeyStateStructure.getSenderKeyId();
+  }
+
+  public FastRatchetSenderChainKey getSenderChainKey() {
+    return new FastRatchetSenderChainKey(senderKeyStateStructure.getSenderChainKeysList());
+  }
+
+  public void setSenderChainKey(FastRatchetSenderChainKey chainKey) {
+    byte[][] seeds          = chainKey.getSeeds();
+    int[]    seedIterations = FastRatchetUtil.decomposeChainIterations(chainKey.getIteration(), seeds.length);
+
+    FastRatchetSenderKeyStateStructure.Builder builder = senderKeyStateStructure.toBuilder()
+                                                                                .clearSenderChainKeys();
+
+    for (int i = 0; i < seeds.length; i++) {
+      SenderKeyStateStructure.SenderChainKey senderChainKeyStructure =
+          SenderKeyStateStructure.SenderChainKey.newBuilder()
+                                                .setIteration(seedIterations[i])
+                                                .setSeed(ByteString.copyFrom(seeds[i]))
+                                                .build();
+      builder.addSenderChainKeys(senderChainKeyStructure);
+    }
+
+    this.senderKeyStateStructure = builder.build();
+  }
+
+  public ECPublicKey getSigningKeyPublic() throws InvalidKeyException {
+    return Curve.decodePoint(senderKeyStateStructure.getSenderSigningKey()
+                                                    .getPublic()
+                                                    .toByteArray(), 0);
+  }
+
+  public ECPrivateKey getSigningKeyPrivate() {
+    return Curve.decodePrivatePoint(senderKeyStateStructure.getSenderSigningKey()
+                                                           .getPrivate().toByteArray());
+  }
+
+  public FastRatchetSenderKeyStateStructure getStructure() {
+    return senderKeyStateStructure;
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java
new file mode 100644
index 0000000..5031e9e
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java
@@ -0,0 +1,37 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.state;
+
+import org.whispersystems.libsignal.groups.SenderKeyName;
+
+public interface FastRatchetSenderKeyStore {
+
+  /**
+   * Commit to storage the {@link org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord}
+   * for a given (groupId + senderId + deviceId) tuple.
+   *
+   * @param senderKeyName the (groupId + senderId + deviceId) tuple.
+   * @param record the current FastRatchetSenderKeyRecord for the specified senderKeyName.
+   */
+  public void storeFastRatchetSenderKey(SenderKeyName senderKeyName, FastRatchetSenderKeyRecord record);
+
+  /**
+   * Returns a copy of the {@link org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord}
+   * corresponding to the (groupId + senderId + deviceId) tuple, or a new FastRatchetSenderKeyRecord if
+   * one does not currently exist.
+   * <p>
+   * It is important that implementations return a copy of the current durable information.  The
+   * returned FastRatchetSenderKeyRecord may be modified, but those changes should not have an
+   * effect on the durable session state (what is returned by subsequent calls to this method)
+   * without the store method being called here first.
+   *
+   * @param senderKeyName The (groupId + senderId + deviceId) tuple.
+   * @return a copy of the FastRatchetSenderKeyRecord corresponding to the (groupId + senderId + deviceId
+   *         tuple, or a new SenderKeyRecord if one does not currently exist.
+   */
+
+  public FastRatchetSenderKeyRecord loadFastRatchetSenderKey(SenderKeyName senderKeyName);
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java
index 5824d8b..30b980a 100644
--- a/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java
@@ -98,8 +98,13 @@ public class SenderKeyState {
   }
 
   public ECPrivateKey getSigningKeyPrivate() {
-    return Curve.decodePrivatePoint(senderKeyStateStructure.getSenderSigningKey()
-                                                           .getPrivate().toByteArray());
+    if (senderKeyStateStructure.hasSenderSigningKey() &&
+        senderKeyStateStructure.getSenderSigningKey().hasPrivate()) {
+      return Curve.decodePrivatePoint(senderKeyStateStructure.getSenderSigningKey()
+                                                             .getPrivate().toByteArray());
+    } else {
+      return null;
+    }
   }
 
   public boolean hasSenderMessageKey(int iteration) {
diff --git a/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java b/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java
index 4584261..59c9a10 100644
--- a/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java
+++ b/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java
@@ -10,10 +10,11 @@ public interface CiphertextMessage {
   public static final int UNSUPPORTED_VERSION = 1;
   public static final int CURRENT_VERSION     = 3;
 
-  public static final int WHISPER_TYPE                = 2;
-  public static final int PREKEY_TYPE                 = 3;
-  public static final int SENDERKEY_TYPE              = 4;
-  public static final int SENDERKEY_DISTRIBUTION_TYPE = 5;
+  public static final int WHISPER_TYPE                            = 2;
+  public static final int PREKEY_TYPE                             = 3;
+  public static final int SENDERKEY_TYPE                          = 4;
+  public static final int SENDERKEY_DISTRIBUTION_TYPE             = 5;
+  public static final int FASTRATCHET_SENDERKEY_DISTRIBUTION_TYPE = 6;
 
   // This should be the worst case (worse than V2).  So not always accurate, but good enough for padding.
   public static final int ENCRYPTED_MESSAGE_OVERHEAD = 53;
diff --git a/java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java b/java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java
new file mode 100644
index 0000000..35e6a3c
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java
@@ -0,0 +1,114 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.protocol;
+
+import com.google.protobuf.ByteString;
+import com.google.protobuf.InvalidProtocolBufferException;
+
+import org.whispersystems.libsignal.InvalidKeyException;
+import org.whispersystems.libsignal.InvalidMessageException;
+import org.whispersystems.libsignal.LegacyMessageException;
+import org.whispersystems.libsignal.ecc.Curve;
+import org.whispersystems.libsignal.ecc.ECPublicKey;
+import org.whispersystems.libsignal.util.ByteUtil;
+
+import java.util.List;
+
+public class FastRatchetSenderKeyDistributionMessage implements CiphertextMessage {
+
+  private final int         id;
+  private final int         iteration;
+  private final byte[][]    chainKeys;
+  private final ECPublicKey signatureKey;
+  private final byte[]      serialized;
+
+  public FastRatchetSenderKeyDistributionMessage(int id, int iteration, byte[][] chainKeys, ECPublicKey signatureKey) {
+    byte[] version = {ByteUtil.intsToByteHighAndLow(CURRENT_VERSION, CURRENT_VERSION)};
+
+    SignalProtos.FastRatchetSenderKeyDistributionMessage.Builder builder = SignalProtos.FastRatchetSenderKeyDistributionMessage.newBuilder()
+            .setId(id)
+            .setIteration(iteration)
+            .setSigningKey(ByteString.copyFrom(signatureKey.serialize()));
+
+    for (byte[] chainKey : chainKeys) {
+      builder.addChainKeys(ByteString.copyFrom(chainKey));
+    }
+
+    byte[] protobuf = builder.build().toByteArray();
+
+    this.id           = id;
+    this.iteration    = iteration;
+    this.chainKeys    = chainKeys;
+    this.signatureKey = signatureKey;
+    this.serialized   = ByteUtil.combine(version, protobuf);
+  }
+
+  public FastRatchetSenderKeyDistributionMessage(byte[] serialized) throws LegacyMessageException, InvalidMessageException {
+    try {
+      byte[][] messageParts = ByteUtil.split(serialized, 1, serialized.length - 1);
+      byte     version      = messageParts[0][0];
+      byte[]   message      = messageParts[1];
+
+      if (ByteUtil.highBitsToInt(version) < CiphertextMessage.CURRENT_VERSION) {
+        throw new LegacyMessageException("Legacy message: " + ByteUtil.highBitsToInt(version));
+      }
+
+      if (ByteUtil.highBitsToInt(version) > CURRENT_VERSION) {
+        throw new InvalidMessageException("Unknown version: " + ByteUtil.highBitsToInt(version));
+      }
+
+      SignalProtos.FastRatchetSenderKeyDistributionMessage distributionMessage = SignalProtos.FastRatchetSenderKeyDistributionMessage.parseFrom(message);
+
+      if (!distributionMessage.hasId()        ||
+              !distributionMessage.hasIteration() ||
+              distributionMessage.getChainKeysCount() <= 0 ||
+              !distributionMessage.hasSigningKey())
+      {
+        throw new InvalidMessageException("Incomplete message.");
+      }
+
+      this.serialized   = serialized;
+      this.id           = distributionMessage.getId();
+      this.iteration    = distributionMessage.getIteration();
+      this.signatureKey = Curve.decodePoint(distributionMessage.getSigningKey().toByteArray(), 0);
+
+      List<ByteString> chainKeyList = distributionMessage.getChainKeysList();
+      this.chainKeys = new byte[chainKeyList.size()][];
+      for (int i = 0; i < this.chainKeys.length; i++) {
+        this.chainKeys[i] = chainKeyList.get(i).toByteArray();
+      }
+
+    } catch (InvalidProtocolBufferException | InvalidKeyException e) {
+      throw new InvalidMessageException(e);
+    }
+  }
+
+  @Override
+  public byte[] serialize() {
+    return serialized;
+  }
+
+  @Override
+  public int getType() {
+    return FASTRATCHET_SENDERKEY_DISTRIBUTION_TYPE;
+  }
+
+  public int getIteration() {
+    return iteration;
+  }
+
+  public byte[][] getChainKeys() {
+    return chainKeys;
+  }
+
+  public ECPublicKey getSignatureKey() {
+    return signatureKey;
+  }
+
+  public int getId() {
+    return id;
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java b/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java
index 82e1140..36e73d5 100644
--- a/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java
+++ b/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java
@@ -6,12 +6,12 @@ package org.whispersystems.libsignal.protocol;
 public final class SignalProtos {
   private SignalProtos() {}
   public static void registerAllExtensions(
-      com.google.protobuf.ExtensionRegistry registry) {
+      com.google.protobuf.ExtensionRegistryLite registry) {
   }
-  public interface SignalMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SignalMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SignalMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional bytes ratchetKey = 1;
     /**
      * <code>optional bytes ratchetKey = 1;</code>
      */
@@ -21,7 +21,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getRatchetKey();
 
-    // optional uint32 counter = 2;
     /**
      * <code>optional uint32 counter = 2;</code>
      */
@@ -31,7 +30,6 @@ public final class SignalProtos {
      */
     int getCounter();
 
-    // optional uint32 previousCounter = 3;
     /**
      * <code>optional uint32 previousCounter = 3;</code>
      */
@@ -41,7 +39,6 @@ public final class SignalProtos {
      */
     int getPreviousCounter();
 
-    // optional bytes ciphertext = 4;
     /**
      * <code>optional bytes ciphertext = 4;</code>
      */
@@ -55,14 +52,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.SignalMessage}
    */
   public static final class SignalMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements SignalMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SignalMessage)
+      SignalMessageOrBuilder {
     // Use SignalMessage.newBuilder() to construct.
-    private SignalMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SignalMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SignalMessage defaultInstance;
     public static SignalMessage getDefaultInstance() {
@@ -73,20 +71,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SignalMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -96,7 +92,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -130,22 +126,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SignalMessage> PARSER =
         new com.google.protobuf.AbstractParser<SignalMessage>() {
       public SignalMessage parsePartialFrom(
@@ -162,7 +152,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional bytes ratchetKey = 1;
     public static final int RATCHETKEY_FIELD_NUMBER = 1;
     private com.google.protobuf.ByteString ratchetKey_;
     /**
@@ -178,7 +167,6 @@ public final class SignalProtos {
       return ratchetKey_;
     }
 
-    // optional uint32 counter = 2;
     public static final int COUNTER_FIELD_NUMBER = 2;
     private int counter_;
     /**
@@ -194,7 +182,6 @@ public final class SignalProtos {
       return counter_;
     }
 
-    // optional uint32 previousCounter = 3;
     public static final int PREVIOUSCOUNTER_FIELD_NUMBER = 3;
     private int previousCounter_;
     /**
@@ -210,7 +197,6 @@ public final class SignalProtos {
       return previousCounter_;
     }
 
-    // optional bytes ciphertext = 4;
     public static final int CIPHERTEXT_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString ciphertext_;
     /**
@@ -235,7 +221,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -256,7 +243,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000008) == 0x00000008)) {
         output.writeBytes(4, ciphertext_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -281,7 +268,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(4, ciphertext_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -353,43 +340,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SignalMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.SignalMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SignalMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.SignalMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -412,11 +377,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.getDefaultInstance();
       }
@@ -450,19 +410,9 @@ public final class SignalProtos {
         }
         result.ciphertext_ = ciphertext_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.getDefaultInstance()) return this;
         if (other.hasRatchetKey()) {
@@ -477,7 +427,8 @@ public final class SignalProtos {
         if (other.hasCiphertext()) {
           setCiphertext(other.getCiphertext());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -504,7 +455,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional bytes ratchetKey = 1;
       private com.google.protobuf.ByteString ratchetKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ratchetKey = 1;</code>
@@ -527,7 +477,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000001;
         ratchetKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -536,11 +486,10 @@ public final class SignalProtos {
       public Builder clearRatchetKey() {
         bitField0_ = (bitField0_ & ~0x00000001);
         ratchetKey_ = getDefaultInstance().getRatchetKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 counter = 2;
       private int counter_ ;
       /**
        * <code>optional uint32 counter = 2;</code>
@@ -560,7 +509,7 @@ public final class SignalProtos {
       public Builder setCounter(int value) {
         bitField0_ |= 0x00000002;
         counter_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -569,11 +518,10 @@ public final class SignalProtos {
       public Builder clearCounter() {
         bitField0_ = (bitField0_ & ~0x00000002);
         counter_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 previousCounter = 3;
       private int previousCounter_ ;
       /**
        * <code>optional uint32 previousCounter = 3;</code>
@@ -593,7 +541,7 @@ public final class SignalProtos {
       public Builder setPreviousCounter(int value) {
         bitField0_ |= 0x00000004;
         previousCounter_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -602,11 +550,10 @@ public final class SignalProtos {
       public Builder clearPreviousCounter() {
         bitField0_ = (bitField0_ & ~0x00000004);
         previousCounter_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes ciphertext = 4;
       private com.google.protobuf.ByteString ciphertext_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ciphertext = 4;</code>
@@ -629,7 +576,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         ciphertext_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -638,7 +585,7 @@ public final class SignalProtos {
       public Builder clearCiphertext() {
         bitField0_ = (bitField0_ & ~0x00000008);
         ciphertext_ = getDefaultInstance().getCiphertext();
-        onChanged();
+        
         return this;
       }
 
@@ -653,10 +600,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SignalMessage)
   }
 
-  public interface PreKeySignalMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface PreKeySignalMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.PreKeySignalMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 registrationId = 5;
     /**
      * <code>optional uint32 registrationId = 5;</code>
      */
@@ -666,7 +613,6 @@ public final class SignalProtos {
      */
     int getRegistrationId();
 
-    // optional uint32 preKeyId = 1;
     /**
      * <code>optional uint32 preKeyId = 1;</code>
      */
@@ -676,7 +622,6 @@ public final class SignalProtos {
      */
     int getPreKeyId();
 
-    // optional uint32 signedPreKeyId = 6;
     /**
      * <code>optional uint32 signedPreKeyId = 6;</code>
      */
@@ -686,7 +631,6 @@ public final class SignalProtos {
      */
     int getSignedPreKeyId();
 
-    // optional bytes baseKey = 2;
     /**
      * <code>optional bytes baseKey = 2;</code>
      */
@@ -696,7 +640,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getBaseKey();
 
-    // optional bytes identityKey = 3;
     /**
      * <code>optional bytes identityKey = 3;</code>
      */
@@ -706,12 +649,11 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getIdentityKey();
 
-    // optional bytes message = 4;
     /**
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     boolean hasMessage();
@@ -719,7 +661,7 @@ public final class SignalProtos {
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     com.google.protobuf.ByteString getMessage();
@@ -728,14 +670,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.PreKeySignalMessage}
    */
   public static final class PreKeySignalMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements PreKeySignalMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.PreKeySignalMessage)
+      PreKeySignalMessageOrBuilder {
     // Use PreKeySignalMessage.newBuilder() to construct.
-    private PreKeySignalMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private PreKeySignalMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private PreKeySignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private PreKeySignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final PreKeySignalMessage defaultInstance;
     public static PreKeySignalMessage getDefaultInstance() {
@@ -746,20 +689,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private PreKeySignalMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -769,7 +710,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -813,22 +754,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<PreKeySignalMessage> PARSER =
         new com.google.protobuf.AbstractParser<PreKeySignalMessage>() {
       public PreKeySignalMessage parsePartialFrom(
@@ -845,7 +780,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 registrationId = 5;
     public static final int REGISTRATIONID_FIELD_NUMBER = 5;
     private int registrationId_;
     /**
@@ -861,7 +795,6 @@ public final class SignalProtos {
       return registrationId_;
     }
 
-    // optional uint32 preKeyId = 1;
     public static final int PREKEYID_FIELD_NUMBER = 1;
     private int preKeyId_;
     /**
@@ -877,7 +810,6 @@ public final class SignalProtos {
       return preKeyId_;
     }
 
-    // optional uint32 signedPreKeyId = 6;
     public static final int SIGNEDPREKEYID_FIELD_NUMBER = 6;
     private int signedPreKeyId_;
     /**
@@ -893,7 +825,6 @@ public final class SignalProtos {
       return signedPreKeyId_;
     }
 
-    // optional bytes baseKey = 2;
     public static final int BASEKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString baseKey_;
     /**
@@ -909,7 +840,6 @@ public final class SignalProtos {
       return baseKey_;
     }
 
-    // optional bytes identityKey = 3;
     public static final int IDENTITYKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString identityKey_;
     /**
@@ -925,14 +855,13 @@ public final class SignalProtos {
       return identityKey_;
     }
 
-    // optional bytes message = 4;
     public static final int MESSAGE_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString message_;
     /**
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     public boolean hasMessage() {
@@ -942,7 +871,7 @@ public final class SignalProtos {
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     public com.google.protobuf.ByteString getMessage() {
@@ -960,7 +889,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -987,7 +917,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeUInt32(6, signedPreKeyId_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -1020,7 +950,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeUInt32Size(6, signedPreKeyId_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -1092,43 +1022,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.PreKeySignalMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.PreKeySignalMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -1155,11 +1063,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.getDefaultInstance();
       }
@@ -1201,19 +1104,9 @@ public final class SignalProtos {
         }
         result.message_ = message_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.getDefaultInstance()) return this;
         if (other.hasRegistrationId()) {
@@ -1234,7 +1127,8 @@ public final class SignalProtos {
         if (other.hasMessage()) {
           setMessage(other.getMessage());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -1261,7 +1155,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 registrationId = 5;
       private int registrationId_ ;
       /**
        * <code>optional uint32 registrationId = 5;</code>
@@ -1281,7 +1174,7 @@ public final class SignalProtos {
       public Builder setRegistrationId(int value) {
         bitField0_ |= 0x00000001;
         registrationId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1290,11 +1183,10 @@ public final class SignalProtos {
       public Builder clearRegistrationId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         registrationId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 preKeyId = 1;
       private int preKeyId_ ;
       /**
        * <code>optional uint32 preKeyId = 1;</code>
@@ -1314,7 +1206,7 @@ public final class SignalProtos {
       public Builder setPreKeyId(int value) {
         bitField0_ |= 0x00000002;
         preKeyId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1323,11 +1215,10 @@ public final class SignalProtos {
       public Builder clearPreKeyId() {
         bitField0_ = (bitField0_ & ~0x00000002);
         preKeyId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 signedPreKeyId = 6;
       private int signedPreKeyId_ ;
       /**
        * <code>optional uint32 signedPreKeyId = 6;</code>
@@ -1347,7 +1238,7 @@ public final class SignalProtos {
       public Builder setSignedPreKeyId(int value) {
         bitField0_ |= 0x00000004;
         signedPreKeyId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1356,11 +1247,10 @@ public final class SignalProtos {
       public Builder clearSignedPreKeyId() {
         bitField0_ = (bitField0_ & ~0x00000004);
         signedPreKeyId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes baseKey = 2;
       private com.google.protobuf.ByteString baseKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes baseKey = 2;</code>
@@ -1383,7 +1273,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         baseKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1392,11 +1282,10 @@ public final class SignalProtos {
       public Builder clearBaseKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         baseKey_ = getDefaultInstance().getBaseKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes identityKey = 3;
       private com.google.protobuf.ByteString identityKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes identityKey = 3;</code>
@@ -1419,7 +1308,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000010;
         identityKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1428,17 +1317,16 @@ public final class SignalProtos {
       public Builder clearIdentityKey() {
         bitField0_ = (bitField0_ & ~0x00000010);
         identityKey_ = getDefaultInstance().getIdentityKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes message = 4;
       private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public boolean hasMessage() {
@@ -1448,7 +1336,7 @@ public final class SignalProtos {
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public com.google.protobuf.ByteString getMessage() {
@@ -1458,7 +1346,7 @@ public final class SignalProtos {
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public Builder setMessage(com.google.protobuf.ByteString value) {
@@ -1467,20 +1355,20 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000020;
         message_ = value;
-        onChanged();
+        
         return this;
       }
       /**
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public Builder clearMessage() {
         bitField0_ = (bitField0_ & ~0x00000020);
         message_ = getDefaultInstance().getMessage();
-        onChanged();
+        
         return this;
       }
 
@@ -1495,10 +1383,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.PreKeySignalMessage)
   }
 
-  public interface KeyExchangeMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface KeyExchangeMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.KeyExchangeMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -1508,7 +1396,6 @@ public final class SignalProtos {
      */
     int getId();
 
-    // optional bytes baseKey = 2;
     /**
      * <code>optional bytes baseKey = 2;</code>
      */
@@ -1518,7 +1405,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getBaseKey();
 
-    // optional bytes ratchetKey = 3;
     /**
      * <code>optional bytes ratchetKey = 3;</code>
      */
@@ -1528,7 +1414,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getRatchetKey();
 
-    // optional bytes identityKey = 4;
     /**
      * <code>optional bytes identityKey = 4;</code>
      */
@@ -1538,7 +1423,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getIdentityKey();
 
-    // optional bytes baseKeySignature = 5;
     /**
      * <code>optional bytes baseKeySignature = 5;</code>
      */
@@ -1552,14 +1436,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.KeyExchangeMessage}
    */
   public static final class KeyExchangeMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements KeyExchangeMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.KeyExchangeMessage)
+      KeyExchangeMessageOrBuilder {
     // Use KeyExchangeMessage.newBuilder() to construct.
-    private KeyExchangeMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private KeyExchangeMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private KeyExchangeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private KeyExchangeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final KeyExchangeMessage defaultInstance;
     public static KeyExchangeMessage getDefaultInstance() {
@@ -1570,20 +1455,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private KeyExchangeMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -1593,7 +1476,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -1632,22 +1515,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<KeyExchangeMessage> PARSER =
         new com.google.protobuf.AbstractParser<KeyExchangeMessage>() {
       public KeyExchangeMessage parsePartialFrom(
@@ -1664,7 +1541,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -1680,7 +1556,6 @@ public final class SignalProtos {
       return id_;
     }
 
-    // optional bytes baseKey = 2;
     public static final int BASEKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString baseKey_;
     /**
@@ -1696,7 +1571,6 @@ public final class SignalProtos {
       return baseKey_;
     }
 
-    // optional bytes ratchetKey = 3;
     public static final int RATCHETKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString ratchetKey_;
     /**
@@ -1712,7 +1586,6 @@ public final class SignalProtos {
       return ratchetKey_;
     }
 
-    // optional bytes identityKey = 4;
     public static final int IDENTITYKEY_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString identityKey_;
     /**
@@ -1728,7 +1601,6 @@ public final class SignalProtos {
       return identityKey_;
     }
 
-    // optional bytes baseKeySignature = 5;
     public static final int BASEKEYSIGNATURE_FIELD_NUMBER = 5;
     private com.google.protobuf.ByteString baseKeySignature_;
     /**
@@ -1754,7 +1626,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -1778,7 +1651,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000010) == 0x00000010)) {
         output.writeBytes(5, baseKeySignature_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -1807,7 +1680,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(5, baseKeySignature_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -1879,43 +1752,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.KeyExchangeMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.KeyExchangeMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -1940,11 +1791,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.getDefaultInstance();
       }
@@ -1982,19 +1828,9 @@ public final class SignalProtos {
         }
         result.baseKeySignature_ = baseKeySignature_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -2012,7 +1848,8 @@ public final class SignalProtos {
         if (other.hasBaseKeySignature()) {
           setBaseKeySignature(other.getBaseKeySignature());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -2039,7 +1876,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -2059,7 +1895,7 @@ public final class SignalProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2068,11 +1904,10 @@ public final class SignalProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes baseKey = 2;
       private com.google.protobuf.ByteString baseKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes baseKey = 2;</code>
@@ -2095,7 +1930,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000002;
         baseKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2104,11 +1939,10 @@ public final class SignalProtos {
       public Builder clearBaseKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         baseKey_ = getDefaultInstance().getBaseKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes ratchetKey = 3;
       private com.google.protobuf.ByteString ratchetKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ratchetKey = 3;</code>
@@ -2131,7 +1965,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000004;
         ratchetKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2140,11 +1974,10 @@ public final class SignalProtos {
       public Builder clearRatchetKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         ratchetKey_ = getDefaultInstance().getRatchetKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes identityKey = 4;
       private com.google.protobuf.ByteString identityKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes identityKey = 4;</code>
@@ -2167,7 +2000,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         identityKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2176,11 +2009,10 @@ public final class SignalProtos {
       public Builder clearIdentityKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         identityKey_ = getDefaultInstance().getIdentityKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes baseKeySignature = 5;
       private com.google.protobuf.ByteString baseKeySignature_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes baseKeySignature = 5;</code>
@@ -2203,7 +2035,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000010;
         baseKeySignature_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2212,7 +2044,7 @@ public final class SignalProtos {
       public Builder clearBaseKeySignature() {
         bitField0_ = (bitField0_ & ~0x00000010);
         baseKeySignature_ = getDefaultInstance().getBaseKeySignature();
-        onChanged();
+        
         return this;
       }
 
@@ -2227,10 +2059,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.KeyExchangeMessage)
   }
 
-  public interface SenderKeyMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -2240,7 +2072,6 @@ public final class SignalProtos {
      */
     int getId();
 
-    // optional uint32 iteration = 2;
     /**
      * <code>optional uint32 iteration = 2;</code>
      */
@@ -2250,7 +2081,6 @@ public final class SignalProtos {
      */
     int getIteration();
 
-    // optional bytes ciphertext = 3;
     /**
      * <code>optional bytes ciphertext = 3;</code>
      */
@@ -2264,14 +2094,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.SenderKeyMessage}
    */
   public static final class SenderKeyMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyMessage)
+      SenderKeyMessageOrBuilder {
     // Use SenderKeyMessage.newBuilder() to construct.
-    private SenderKeyMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyMessage defaultInstance;
     public static SenderKeyMessage getDefaultInstance() {
@@ -2282,20 +2113,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -2305,7 +2134,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -2334,22 +2163,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyMessage> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyMessage>() {
       public SenderKeyMessage parsePartialFrom(
@@ -2366,7 +2189,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -2382,7 +2204,6 @@ public final class SignalProtos {
       return id_;
     }
 
-    // optional uint32 iteration = 2;
     public static final int ITERATION_FIELD_NUMBER = 2;
     private int iteration_;
     /**
@@ -2398,7 +2219,6 @@ public final class SignalProtos {
       return iteration_;
     }
 
-    // optional bytes ciphertext = 3;
     public static final int CIPHERTEXT_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString ciphertext_;
     /**
@@ -2422,7 +2242,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -2440,7 +2261,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeBytes(3, ciphertext_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -2461,7 +2282,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(3, ciphertext_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -2533,43 +2354,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -2590,11 +2389,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.getDefaultInstance();
       }
@@ -2624,19 +2418,9 @@ public final class SignalProtos {
         }
         result.ciphertext_ = ciphertext_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -2648,7 +2432,8 @@ public final class SignalProtos {
         if (other.hasCiphertext()) {
           setCiphertext(other.getCiphertext());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -2675,7 +2460,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -2695,7 +2479,7 @@ public final class SignalProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2704,11 +2488,10 @@ public final class SignalProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 iteration = 2;
       private int iteration_ ;
       /**
        * <code>optional uint32 iteration = 2;</code>
@@ -2728,7 +2511,7 @@ public final class SignalProtos {
       public Builder setIteration(int value) {
         bitField0_ |= 0x00000002;
         iteration_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2737,11 +2520,10 @@ public final class SignalProtos {
       public Builder clearIteration() {
         bitField0_ = (bitField0_ & ~0x00000002);
         iteration_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes ciphertext = 3;
       private com.google.protobuf.ByteString ciphertext_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ciphertext = 3;</code>
@@ -2764,7 +2546,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000004;
         ciphertext_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2773,7 +2555,7 @@ public final class SignalProtos {
       public Builder clearCiphertext() {
         bitField0_ = (bitField0_ & ~0x00000004);
         ciphertext_ = getDefaultInstance().getCiphertext();
-        onChanged();
+        
         return this;
       }
 
@@ -2788,10 +2570,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyMessage)
   }
 
-  public interface SenderKeyDistributionMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyDistributionMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyDistributionMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -2801,7 +2583,6 @@ public final class SignalProtos {
      */
     int getId();
 
-    // optional uint32 iteration = 2;
     /**
      * <code>optional uint32 iteration = 2;</code>
      */
@@ -2811,7 +2592,6 @@ public final class SignalProtos {
      */
     int getIteration();
 
-    // optional bytes chainKey = 3;
     /**
      * <code>optional bytes chainKey = 3;</code>
      */
@@ -2821,7 +2601,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getChainKey();
 
-    // optional bytes signingKey = 4;
     /**
      * <code>optional bytes signingKey = 4;</code>
      */
@@ -2835,14 +2614,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.SenderKeyDistributionMessage}
    */
   public static final class SenderKeyDistributionMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyDistributionMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyDistributionMessage)
+      SenderKeyDistributionMessageOrBuilder {
     // Use SenderKeyDistributionMessage.newBuilder() to construct.
-    private SenderKeyDistributionMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyDistributionMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyDistributionMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyDistributionMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyDistributionMessage defaultInstance;
     public static SenderKeyDistributionMessage getDefaultInstance() {
@@ -2853,20 +2633,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyDistributionMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -2876,7 +2654,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -2910,22 +2688,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyDistributionMessage> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyDistributionMessage>() {
       public SenderKeyDistributionMessage parsePartialFrom(
@@ -2942,7 +2714,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -2958,7 +2729,6 @@ public final class SignalProtos {
       return id_;
     }
 
-    // optional uint32 iteration = 2;
     public static final int ITERATION_FIELD_NUMBER = 2;
     private int iteration_;
     /**
@@ -2974,7 +2744,6 @@ public final class SignalProtos {
       return iteration_;
     }
 
-    // optional bytes chainKey = 3;
     public static final int CHAINKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString chainKey_;
     /**
@@ -2990,7 +2759,6 @@ public final class SignalProtos {
       return chainKey_;
     }
 
-    // optional bytes signingKey = 4;
     public static final int SIGNINGKEY_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString signingKey_;
     /**
@@ -3015,7 +2783,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -3036,7 +2805,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000008) == 0x00000008)) {
         output.writeBytes(4, signingKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -3061,7 +2830,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(4, signingKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -3133,43 +2902,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyDistributionMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyDistributionMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -3192,11 +2939,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.getDefaultInstance();
       }
@@ -3230,19 +2972,9 @@ public final class SignalProtos {
         }
         result.signingKey_ = signingKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -3257,7 +2989,8 @@ public final class SignalProtos {
         if (other.hasSigningKey()) {
           setSigningKey(other.getSigningKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -3284,7 +3017,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -3304,7 +3036,7 @@ public final class SignalProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3313,11 +3045,10 @@ public final class SignalProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 iteration = 2;
       private int iteration_ ;
       /**
        * <code>optional uint32 iteration = 2;</code>
@@ -3337,7 +3068,7 @@ public final class SignalProtos {
       public Builder setIteration(int value) {
         bitField0_ |= 0x00000002;
         iteration_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3346,11 +3077,10 @@ public final class SignalProtos {
       public Builder clearIteration() {
         bitField0_ = (bitField0_ & ~0x00000002);
         iteration_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes chainKey = 3;
       private com.google.protobuf.ByteString chainKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes chainKey = 3;</code>
@@ -3373,7 +3103,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000004;
         chainKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3382,11 +3112,10 @@ public final class SignalProtos {
       public Builder clearChainKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         chainKey_ = getDefaultInstance().getChainKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes signingKey = 4;
       private com.google.protobuf.ByteString signingKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes signingKey = 4;</code>
@@ -3409,7 +3138,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         signingKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3418,7 +3147,7 @@ public final class SignalProtos {
       public Builder clearSigningKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         signingKey_ = getDefaultInstance().getSigningKey();
-        onChanged();
+        
         return this;
       }
 
@@ -3433,65 +3162,85 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyDistributionMessage)
   }
 
-  public interface DeviceConsistencyCodeMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface FastRatchetSenderKeyDistributionMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FastRatchetSenderKeyDistributionMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 generation = 1;
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    boolean hasGeneration();
+    boolean hasId();
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    int getGeneration();
+    int getId();
 
-    // optional bytes signature = 2;
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    boolean hasSignature();
+    boolean hasIteration();
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    com.google.protobuf.ByteString getSignature();
+    int getIteration();
+
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    java.util.List<com.google.protobuf.ByteString> getChainKeysList();
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    int getChainKeysCount();
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    com.google.protobuf.ByteString getChainKeys(int index);
+
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    boolean hasSigningKey();
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    com.google.protobuf.ByteString getSigningKey();
   }
   /**
-   * Protobuf type {@code textsecure.DeviceConsistencyCodeMessage}
+   * Protobuf type {@code textsecure.FastRatchetSenderKeyDistributionMessage}
    */
-  public static final class DeviceConsistencyCodeMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements DeviceConsistencyCodeMessageOrBuilder {
-    // Use DeviceConsistencyCodeMessage.newBuilder() to construct.
-    private DeviceConsistencyCodeMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+  public static final class FastRatchetSenderKeyDistributionMessage extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FastRatchetSenderKeyDistributionMessage)
+      FastRatchetSenderKeyDistributionMessageOrBuilder {
+    // Use FastRatchetSenderKeyDistributionMessage.newBuilder() to construct.
+    private FastRatchetSenderKeyDistributionMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private DeviceConsistencyCodeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private FastRatchetSenderKeyDistributionMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
-    private static final DeviceConsistencyCodeMessage defaultInstance;
-    public static DeviceConsistencyCodeMessage getDefaultInstance() {
+    private static final FastRatchetSenderKeyDistributionMessage defaultInstance;
+    public static FastRatchetSenderKeyDistributionMessage getDefaultInstance() {
       return defaultInstance;
     }
 
-    public DeviceConsistencyCodeMessage getDefaultInstanceForType() {
+    public FastRatchetSenderKeyDistributionMessage getDefaultInstanceForType() {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
-    private DeviceConsistencyCodeMessage(
+    private final com.google.protobuf.ByteString unknownFields;
+    private FastRatchetSenderKeyDistributionMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -3501,7 +3250,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -3509,12 +3258,25 @@ public final class SignalProtos {
             }
             case 8: {
               bitField0_ |= 0x00000001;
-              generation_ = input.readUInt32();
+              id_ = input.readUInt32();
               break;
             }
-            case 18: {
+            case 16: {
               bitField0_ |= 0x00000002;
-              signature_ = input.readBytes();
+              iteration_ = input.readUInt32();
+              break;
+            }
+            case 26: {
+              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
+                chainKeys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
+                mutable_bitField0_ |= 0x00000004;
+              }
+              chainKeys_.add(input.readBytes());
+              break;
+            }
+            case 34: {
+              bitField0_ |= 0x00000004;
+              signingKey_ = input.readBytes();
               break;
             }
           }
@@ -3525,78 +3287,113 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
+          chainKeys_ = java.util.Collections.unmodifiableList(chainKeys_);
+        }
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.Builder.class);
-    }
-
-    public static com.google.protobuf.Parser<DeviceConsistencyCodeMessage> PARSER =
-        new com.google.protobuf.AbstractParser<DeviceConsistencyCodeMessage>() {
-      public DeviceConsistencyCodeMessage parsePartialFrom(
+    public static com.google.protobuf.Parser<FastRatchetSenderKeyDistributionMessage> PARSER =
+        new com.google.protobuf.AbstractParser<FastRatchetSenderKeyDistributionMessage>() {
+      public FastRatchetSenderKeyDistributionMessage parsePartialFrom(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
-        return new DeviceConsistencyCodeMessage(input, extensionRegistry);
+        return new FastRatchetSenderKeyDistributionMessage(input, extensionRegistry);
       }
     };
 
     @java.lang.Override
-    public com.google.protobuf.Parser<DeviceConsistencyCodeMessage> getParserForType() {
+    public com.google.protobuf.Parser<FastRatchetSenderKeyDistributionMessage> getParserForType() {
       return PARSER;
     }
 
     private int bitField0_;
-    // optional uint32 generation = 1;
-    public static final int GENERATION_FIELD_NUMBER = 1;
-    private int generation_;
+    public static final int ID_FIELD_NUMBER = 1;
+    private int id_;
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    public boolean hasGeneration() {
+    public boolean hasId() {
       return ((bitField0_ & 0x00000001) == 0x00000001);
     }
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    public int getGeneration() {
-      return generation_;
+    public int getId() {
+      return id_;
     }
 
-    // optional bytes signature = 2;
-    public static final int SIGNATURE_FIELD_NUMBER = 2;
-    private com.google.protobuf.ByteString signature_;
+    public static final int ITERATION_FIELD_NUMBER = 2;
+    private int iteration_;
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    public boolean hasSignature() {
+    public boolean hasIteration() {
       return ((bitField0_ & 0x00000002) == 0x00000002);
     }
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    public com.google.protobuf.ByteString getSignature() {
-      return signature_;
+    public int getIteration() {
+      return iteration_;
+    }
+
+    public static final int CHAINKEYS_FIELD_NUMBER = 3;
+    private java.util.List<com.google.protobuf.ByteString> chainKeys_;
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    public java.util.List<com.google.protobuf.ByteString>
+        getChainKeysList() {
+      return chainKeys_;
+    }
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    public int getChainKeysCount() {
+      return chainKeys_.size();
+    }
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    public com.google.protobuf.ByteString getChainKeys(int index) {
+      return chainKeys_.get(index);
+    }
+
+    public static final int SIGNINGKEY_FIELD_NUMBER = 4;
+    private com.google.protobuf.ByteString signingKey_;
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    public boolean hasSigningKey() {
+      return ((bitField0_ & 0x00000004) == 0x00000004);
+    }
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    public com.google.protobuf.ByteString getSigningKey() {
+      return signingKey_;
     }
 
     private void initFields() {
-      generation_ = 0;
-      signature_ = com.google.protobuf.ByteString.EMPTY;
+      id_ = 0;
+      iteration_ = 0;
+      chainKeys_ = java.util.Collections.emptyList();
+      signingKey_ = com.google.protobuf.ByteString.EMPTY;
     }
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -3606,12 +3403,18 @@ public final class SignalProtos {
                         throws java.io.IOException {
       getSerializedSize();
       if (((bitField0_ & 0x00000001) == 0x00000001)) {
-        output.writeUInt32(1, generation_);
+        output.writeUInt32(1, id_);
       }
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
-        output.writeBytes(2, signature_);
+        output.writeUInt32(2, iteration_);
+      }
+      for (int i = 0; i < chainKeys_.size(); i++) {
+        output.writeBytes(3, chainKeys_.get(i));
+      }
+      if (((bitField0_ & 0x00000004) == 0x00000004)) {
+        output.writeBytes(4, signingKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -3622,15 +3425,591 @@ public final class SignalProtos {
       size = 0;
       if (((bitField0_ & 0x00000001) == 0x00000001)) {
         size += com.google.protobuf.CodedOutputStream
-          .computeUInt32Size(1, generation_);
+          .computeUInt32Size(1, id_);
       }
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
         size += com.google.protobuf.CodedOutputStream
-          .computeBytesSize(2, signature_);
+          .computeUInt32Size(2, iteration_);
       }
-      size += getUnknownFields().getSerializedSize();
-      memoizedSerializedSize = size;
-      return size;
+      {
+        int dataSize = 0;
+        for (int i = 0; i < chainKeys_.size(); i++) {
+          dataSize += com.google.protobuf.CodedOutputStream
+            .computeBytesSizeNoTag(chainKeys_.get(i));
+        }
+        size += dataSize;
+        size += 1 * getChainKeysList().size();
+      }
+      if (((bitField0_ & 0x00000004) == 0x00000004)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeBytesSize(4, signingKey_);
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
+    }
+
+    private static final long serialVersionUID = 0L;
+    @java.lang.Override
+    protected java.lang.Object writeReplace()
+        throws java.io.ObjectStreamException {
+      return super.writeReplace();
+    }
+
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.ByteString data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.ByteString data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(byte[] data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        byte[] data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseDelimitedFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseDelimitedFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.CodedInputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+
+    public static Builder newBuilder() { return Builder.create(); }
+    public Builder newBuilderForType() { return newBuilder(); }
+    public static Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage prototype) {
+      return newBuilder().mergeFrom(prototype);
+    }
+    public Builder toBuilder() { return newBuilder(this); }
+
+    /**
+     * Protobuf type {@code textsecure.FastRatchetSenderKeyDistributionMessage}
+     */
+    public static final class Builder extends
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FastRatchetSenderKeyDistributionMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessageOrBuilder {
+      // Construct using org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage.newBuilder()
+      private Builder() {
+        maybeForceBuilderInitialization();
+      }
+
+      private void maybeForceBuilderInitialization() {
+      }
+      private static Builder create() {
+        return new Builder();
+      }
+
+      public Builder clear() {
+        super.clear();
+        id_ = 0;
+        bitField0_ = (bitField0_ & ~0x00000001);
+        iteration_ = 0;
+        bitField0_ = (bitField0_ & ~0x00000002);
+        chainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000004);
+        signingKey_ = com.google.protobuf.ByteString.EMPTY;
+        bitField0_ = (bitField0_ & ~0x00000008);
+        return this;
+      }
+
+      public Builder clone() {
+        return create().mergeFrom(buildPartial());
+      }
+
+      public org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage getDefaultInstanceForType() {
+        return org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage.getDefaultInstance();
+      }
+
+      public org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage build() {
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage result = buildPartial();
+        if (!result.isInitialized()) {
+          throw newUninitializedMessageException(result);
+        }
+        return result;
+      }
+
+      public org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage buildPartial() {
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage result = new org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage(this);
+        int from_bitField0_ = bitField0_;
+        int to_bitField0_ = 0;
+        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
+          to_bitField0_ |= 0x00000001;
+        }
+        result.id_ = id_;
+        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
+          to_bitField0_ |= 0x00000002;
+        }
+        result.iteration_ = iteration_;
+        if (((bitField0_ & 0x00000004) == 0x00000004)) {
+          chainKeys_ = java.util.Collections.unmodifiableList(chainKeys_);
+          bitField0_ = (bitField0_ & ~0x00000004);
+        }
+        result.chainKeys_ = chainKeys_;
+        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
+          to_bitField0_ |= 0x00000004;
+        }
+        result.signingKey_ = signingKey_;
+        result.bitField0_ = to_bitField0_;
+        return result;
+      }
+
+      public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage other) {
+        if (other == org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage.getDefaultInstance()) return this;
+        if (other.hasId()) {
+          setId(other.getId());
+        }
+        if (other.hasIteration()) {
+          setIteration(other.getIteration());
+        }
+        if (!other.chainKeys_.isEmpty()) {
+          if (chainKeys_.isEmpty()) {
+            chainKeys_ = other.chainKeys_;
+            bitField0_ = (bitField0_ & ~0x00000004);
+          } else {
+            ensureChainKeysIsMutable();
+            chainKeys_.addAll(other.chainKeys_);
+          }
+          
+        }
+        if (other.hasSigningKey()) {
+          setSigningKey(other.getSigningKey());
+        }
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
+        return this;
+      }
+
+      public final boolean isInitialized() {
+        return true;
+      }
+
+      public Builder mergeFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parsedMessage = null;
+        try {
+          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          parsedMessage = (org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage) e.getUnfinishedMessage();
+          throw e;
+        } finally {
+          if (parsedMessage != null) {
+            mergeFrom(parsedMessage);
+          }
+        }
+        return this;
+      }
+      private int bitField0_;
+
+      private int id_ ;
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public boolean hasId() {
+        return ((bitField0_ & 0x00000001) == 0x00000001);
+      }
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public int getId() {
+        return id_;
+      }
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public Builder setId(int value) {
+        bitField0_ |= 0x00000001;
+        id_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public Builder clearId() {
+        bitField0_ = (bitField0_ & ~0x00000001);
+        id_ = 0;
+        
+        return this;
+      }
+
+      private int iteration_ ;
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public boolean hasIteration() {
+        return ((bitField0_ & 0x00000002) == 0x00000002);
+      }
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public int getIteration() {
+        return iteration_;
+      }
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public Builder setIteration(int value) {
+        bitField0_ |= 0x00000002;
+        iteration_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public Builder clearIteration() {
+        bitField0_ = (bitField0_ & ~0x00000002);
+        iteration_ = 0;
+        
+        return this;
+      }
+
+      private java.util.List<com.google.protobuf.ByteString> chainKeys_ = java.util.Collections.emptyList();
+      private void ensureChainKeysIsMutable() {
+        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
+          chainKeys_ = new java.util.ArrayList<com.google.protobuf.ByteString>(chainKeys_);
+          bitField0_ |= 0x00000004;
+         }
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public java.util.List<com.google.protobuf.ByteString>
+          getChainKeysList() {
+        return java.util.Collections.unmodifiableList(chainKeys_);
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public int getChainKeysCount() {
+        return chainKeys_.size();
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public com.google.protobuf.ByteString getChainKeys(int index) {
+        return chainKeys_.get(index);
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder setChainKeys(
+          int index, com.google.protobuf.ByteString value) {
+        if (value == null) {
+    throw new NullPointerException();
+  }
+  ensureChainKeysIsMutable();
+        chainKeys_.set(index, value);
+        
+        return this;
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder addChainKeys(com.google.protobuf.ByteString value) {
+        if (value == null) {
+    throw new NullPointerException();
+  }
+  ensureChainKeysIsMutable();
+        chainKeys_.add(value);
+        
+        return this;
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder addAllChainKeys(
+          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
+        ensureChainKeysIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, chainKeys_);
+        
+        return this;
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder clearChainKeys() {
+        chainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000004);
+        
+        return this;
+      }
+
+      private com.google.protobuf.ByteString signingKey_ = com.google.protobuf.ByteString.EMPTY;
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public boolean hasSigningKey() {
+        return ((bitField0_ & 0x00000008) == 0x00000008);
+      }
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public com.google.protobuf.ByteString getSigningKey() {
+        return signingKey_;
+      }
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public Builder setSigningKey(com.google.protobuf.ByteString value) {
+        if (value == null) {
+    throw new NullPointerException();
+  }
+  bitField0_ |= 0x00000008;
+        signingKey_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public Builder clearSigningKey() {
+        bitField0_ = (bitField0_ & ~0x00000008);
+        signingKey_ = getDefaultInstance().getSigningKey();
+        
+        return this;
+      }
+
+      // @@protoc_insertion_point(builder_scope:textsecure.FastRatchetSenderKeyDistributionMessage)
+    }
+
+    static {
+      defaultInstance = new FastRatchetSenderKeyDistributionMessage(true);
+      defaultInstance.initFields();
+    }
+
+    // @@protoc_insertion_point(class_scope:textsecure.FastRatchetSenderKeyDistributionMessage)
+  }
+
+  public interface DeviceConsistencyCodeMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.DeviceConsistencyCodeMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
+
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    boolean hasGeneration();
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    int getGeneration();
+
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    boolean hasSignature();
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    com.google.protobuf.ByteString getSignature();
+  }
+  /**
+   * Protobuf type {@code textsecure.DeviceConsistencyCodeMessage}
+   */
+  public static final class DeviceConsistencyCodeMessage extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.DeviceConsistencyCodeMessage)
+      DeviceConsistencyCodeMessageOrBuilder {
+    // Use DeviceConsistencyCodeMessage.newBuilder() to construct.
+    private DeviceConsistencyCodeMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
+      super(builder);
+      this.unknownFields = builder.getUnknownFields();
+    }
+    private DeviceConsistencyCodeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
+
+    private static final DeviceConsistencyCodeMessage defaultInstance;
+    public static DeviceConsistencyCodeMessage getDefaultInstance() {
+      return defaultInstance;
+    }
+
+    public DeviceConsistencyCodeMessage getDefaultInstanceForType() {
+      return defaultInstance;
+    }
+
+    private final com.google.protobuf.ByteString unknownFields;
+    private DeviceConsistencyCodeMessage(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      initFields();
+      int mutable_bitField0_ = 0;
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
+      try {
+        boolean done = false;
+        while (!done) {
+          int tag = input.readTag();
+          switch (tag) {
+            case 0:
+              done = true;
+              break;
+            default: {
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
+                                     extensionRegistry, tag)) {
+                done = true;
+              }
+              break;
+            }
+            case 8: {
+              bitField0_ |= 0x00000001;
+              generation_ = input.readUInt32();
+              break;
+            }
+            case 18: {
+              bitField0_ |= 0x00000002;
+              signature_ = input.readBytes();
+              break;
+            }
+          }
+        }
+      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+        throw e.setUnfinishedMessage(this);
+      } catch (java.io.IOException e) {
+        throw new com.google.protobuf.InvalidProtocolBufferException(
+            e.getMessage()).setUnfinishedMessage(this);
+      } finally {
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
+    }
+    public static com.google.protobuf.Parser<DeviceConsistencyCodeMessage> PARSER =
+        new com.google.protobuf.AbstractParser<DeviceConsistencyCodeMessage>() {
+      public DeviceConsistencyCodeMessage parsePartialFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return new DeviceConsistencyCodeMessage(input, extensionRegistry);
+      }
+    };
+
+    @java.lang.Override
+    public com.google.protobuf.Parser<DeviceConsistencyCodeMessage> getParserForType() {
+      return PARSER;
+    }
+
+    private int bitField0_;
+    public static final int GENERATION_FIELD_NUMBER = 1;
+    private int generation_;
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    public boolean hasGeneration() {
+      return ((bitField0_ & 0x00000001) == 0x00000001);
+    }
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    public int getGeneration() {
+      return generation_;
+    }
+
+    public static final int SIGNATURE_FIELD_NUMBER = 2;
+    private com.google.protobuf.ByteString signature_;
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    public boolean hasSignature() {
+      return ((bitField0_ & 0x00000002) == 0x00000002);
+    }
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    public com.google.protobuf.ByteString getSignature() {
+      return signature_;
+    }
+
+    private void initFields() {
+      generation_ = 0;
+      signature_ = com.google.protobuf.ByteString.EMPTY;
+    }
+    private byte memoizedIsInitialized = -1;
+    public final boolean isInitialized() {
+      byte isInitialized = memoizedIsInitialized;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
+
+      memoizedIsInitialized = 1;
+      return true;
+    }
+
+    public void writeTo(com.google.protobuf.CodedOutputStream output)
+                        throws java.io.IOException {
+      getSerializedSize();
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        output.writeUInt32(1, generation_);
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        output.writeBytes(2, signature_);
+      }
+      output.writeRawBytes(unknownFields);
+    }
+
+    private int memoizedSerializedSize = -1;
+    public int getSerializedSize() {
+      int size = memoizedSerializedSize;
+      if (size != -1) return size;
+
+      size = 0;
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeUInt32Size(1, generation_);
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeBytesSize(2, signature_);
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
     }
 
     private static final long serialVersionUID = 0L;
@@ -3700,43 +4079,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.DeviceConsistencyCodeMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.DeviceConsistencyCodeMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -3755,11 +4112,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.getDefaultInstance();
       }
@@ -3785,19 +4137,9 @@ public final class SignalProtos {
         }
         result.signature_ = signature_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.getDefaultInstance()) return this;
         if (other.hasGeneration()) {
@@ -3806,7 +4148,8 @@ public final class SignalProtos {
         if (other.hasSignature()) {
           setSignature(other.getSignature());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -3833,7 +4176,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 generation = 1;
       private int generation_ ;
       /**
        * <code>optional uint32 generation = 1;</code>
@@ -3853,7 +4195,7 @@ public final class SignalProtos {
       public Builder setGeneration(int value) {
         bitField0_ |= 0x00000001;
         generation_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3862,11 +4204,10 @@ public final class SignalProtos {
       public Builder clearGeneration() {
         bitField0_ = (bitField0_ & ~0x00000001);
         generation_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes signature = 2;
       private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes signature = 2;</code>
@@ -3889,7 +4230,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000002;
         signature_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3898,7 +4239,7 @@ public final class SignalProtos {
       public Builder clearSignature() {
         bitField0_ = (bitField0_ & ~0x00000002);
         signature_ = getDefaultInstance().getSignature();
-        onChanged();
+        
         return this;
       }
 
@@ -3913,112 +4254,8 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.DeviceConsistencyCodeMessage)
   }
 
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SignalMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SignalMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_PreKeySignalMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_KeyExchangeMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable;
-
-  public static com.google.protobuf.Descriptors.FileDescriptor
-      getDescriptor() {
-    return descriptor;
-  }
-  private static com.google.protobuf.Descriptors.FileDescriptor
-      descriptor;
+
   static {
-    java.lang.String[] descriptorData = {
-      "\n\031WhisperTextProtocol.proto\022\ntextsecure\"" +
-      "a\n\rSignalMessage\022\022\n\nratchetKey\030\001 \001(\014\022\017\n\007" +
-      "counter\030\002 \001(\r\022\027\n\017previousCounter\030\003 \001(\r\022\022" +
-      "\n\nciphertext\030\004 \001(\014\"\216\001\n\023PreKeySignalMessa" +
-      "ge\022\026\n\016registrationId\030\005 \001(\r\022\020\n\010preKeyId\030\001" +
-      " \001(\r\022\026\n\016signedPreKeyId\030\006 \001(\r\022\017\n\007baseKey\030" +
-      "\002 \001(\014\022\023\n\013identityKey\030\003 \001(\014\022\017\n\007message\030\004 " +
-      "\001(\014\"t\n\022KeyExchangeMessage\022\n\n\002id\030\001 \001(\r\022\017\n" +
-      "\007baseKey\030\002 \001(\014\022\022\n\nratchetKey\030\003 \001(\014\022\023\n\013id" +
-      "entityKey\030\004 \001(\014\022\030\n\020baseKeySignature\030\005 \001(",
-      "\014\"E\n\020SenderKeyMessage\022\n\n\002id\030\001 \001(\r\022\021\n\tite" +
-      "ration\030\002 \001(\r\022\022\n\nciphertext\030\003 \001(\014\"c\n\034Send" +
-      "erKeyDistributionMessage\022\n\n\002id\030\001 \001(\r\022\021\n\t" +
-      "iteration\030\002 \001(\r\022\020\n\010chainKey\030\003 \001(\014\022\022\n\nsig" +
-      "ningKey\030\004 \001(\014\"E\n\034DeviceConsistencyCodeMe" +
-      "ssage\022\022\n\ngeneration\030\001 \001(\r\022\021\n\tsignature\030\002" +
-      " \001(\014B5\n%org.whispersystems.libsignal.pro" +
-      "tocolB\014SignalProtos"
-    };
-    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
-      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
-        public com.google.protobuf.ExtensionRegistry assignDescriptors(
-            com.google.protobuf.Descriptors.FileDescriptor root) {
-          descriptor = root;
-          internal_static_textsecure_SignalMessage_descriptor =
-            getDescriptor().getMessageTypes().get(0);
-          internal_static_textsecure_SignalMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SignalMessage_descriptor,
-              new java.lang.String[] { "RatchetKey", "Counter", "PreviousCounter", "Ciphertext", });
-          internal_static_textsecure_PreKeySignalMessage_descriptor =
-            getDescriptor().getMessageTypes().get(1);
-          internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_PreKeySignalMessage_descriptor,
-              new java.lang.String[] { "RegistrationId", "PreKeyId", "SignedPreKeyId", "BaseKey", "IdentityKey", "Message", });
-          internal_static_textsecure_KeyExchangeMessage_descriptor =
-            getDescriptor().getMessageTypes().get(2);
-          internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_KeyExchangeMessage_descriptor,
-              new java.lang.String[] { "Id", "BaseKey", "RatchetKey", "IdentityKey", "BaseKeySignature", });
-          internal_static_textsecure_SenderKeyMessage_descriptor =
-            getDescriptor().getMessageTypes().get(3);
-          internal_static_textsecure_SenderKeyMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyMessage_descriptor,
-              new java.lang.String[] { "Id", "Iteration", "Ciphertext", });
-          internal_static_textsecure_SenderKeyDistributionMessage_descriptor =
-            getDescriptor().getMessageTypes().get(4);
-          internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyDistributionMessage_descriptor,
-              new java.lang.String[] { "Id", "Iteration", "ChainKey", "SigningKey", });
-          internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor =
-            getDescriptor().getMessageTypes().get(5);
-          internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor,
-              new java.lang.String[] { "Generation", "Signature", });
-          return null;
-        }
-      };
-    com.google.protobuf.Descriptors.FileDescriptor
-      .internalBuildGeneratedFileFrom(descriptorData,
-        new com.google.protobuf.Descriptors.FileDescriptor[] {
-        }, assigner);
   }
 
   // @@protoc_insertion_point(outer_class_scope)
diff --git a/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java b/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java
index 6fceb8f..13fb49c 100644
--- a/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java
+++ b/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java
@@ -6,12 +6,12 @@ package org.whispersystems.libsignal.state;
 public final class StorageProtos {
   private StorageProtos() {}
   public static void registerAllExtensions(
-      com.google.protobuf.ExtensionRegistry registry) {
+      com.google.protobuf.ExtensionRegistryLite registry) {
   }
-  public interface SessionStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SessionStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 sessionVersion = 1;
     /**
      * <code>optional uint32 sessionVersion = 1;</code>
      */
@@ -21,7 +21,6 @@ public final class StorageProtos {
      */
     int getSessionVersion();
 
-    // optional bytes localIdentityPublic = 2;
     /**
      * <code>optional bytes localIdentityPublic = 2;</code>
      */
@@ -31,7 +30,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getLocalIdentityPublic();
 
-    // optional bytes remoteIdentityPublic = 3;
     /**
      * <code>optional bytes remoteIdentityPublic = 3;</code>
      */
@@ -41,7 +39,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getRemoteIdentityPublic();
 
-    // optional bytes rootKey = 4;
     /**
      * <code>optional bytes rootKey = 4;</code>
      */
@@ -51,7 +48,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getRootKey();
 
-    // optional uint32 previousCounter = 5;
     /**
      * <code>optional uint32 previousCounter = 5;</code>
      */
@@ -61,7 +57,6 @@ public final class StorageProtos {
      */
     int getPreviousCounter();
 
-    // optional .textsecure.SessionStructure.Chain senderChain = 6;
     /**
      * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
      */
@@ -70,12 +65,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getSenderChain();
-    /**
-     * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getSenderChainOrBuilder();
 
-    // repeated .textsecure.SessionStructure.Chain receiverChains = 7;
     /**
      * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
      */
@@ -89,18 +79,7 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
      */
     int getReceiverChainsCount();
-    /**
-     * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-        getReceiverChainsOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getReceiverChainsOrBuilder(
-        int index);
 
-    // optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;
     /**
      * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
      */
@@ -109,12 +88,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getPendingKeyExchange();
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder getPendingKeyExchangeOrBuilder();
 
-    // optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;
     /**
      * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
      */
@@ -123,12 +97,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getPendingPreKey();
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder getPendingPreKeyOrBuilder();
 
-    // optional uint32 remoteRegistrationId = 10;
     /**
      * <code>optional uint32 remoteRegistrationId = 10;</code>
      */
@@ -138,7 +107,6 @@ public final class StorageProtos {
      */
     int getRemoteRegistrationId();
 
-    // optional uint32 localRegistrationId = 11;
     /**
      * <code>optional uint32 localRegistrationId = 11;</code>
      */
@@ -148,7 +116,6 @@ public final class StorageProtos {
      */
     int getLocalRegistrationId();
 
-    // optional bool needsRefresh = 12;
     /**
      * <code>optional bool needsRefresh = 12;</code>
      */
@@ -158,7 +125,6 @@ public final class StorageProtos {
      */
     boolean getNeedsRefresh();
 
-    // optional bytes aliceBaseKey = 13;
     /**
      * <code>optional bytes aliceBaseKey = 13;</code>
      */
@@ -172,14 +138,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.SessionStructure}
    */
   public static final class SessionStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SessionStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SessionStructure)
+      SessionStructureOrBuilder {
     // Use SessionStructure.newBuilder() to construct.
-    private SessionStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SessionStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SessionStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SessionStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SessionStructure defaultInstance;
     public static SessionStructure getDefaultInstance() {
@@ -190,20 +157,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SessionStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -213,7 +178,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -322,22 +287,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
           receiverChains_ = java.util.Collections.unmodifiableList(receiverChains_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SessionStructure> PARSER =
         new com.google.protobuf.AbstractParser<SessionStructure>() {
       public SessionStructure parsePartialFrom(
@@ -353,10 +312,10 @@ public final class StorageProtos {
       return PARSER;
     }
 
-    public interface ChainOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface ChainOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.Chain)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional bytes senderRatchetKey = 1;
       /**
        * <code>optional bytes senderRatchetKey = 1;</code>
        */
@@ -366,7 +325,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getSenderRatchetKey();
 
-      // optional bytes senderRatchetKeyPrivate = 2;
       /**
        * <code>optional bytes senderRatchetKeyPrivate = 2;</code>
        */
@@ -376,7 +334,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getSenderRatchetKeyPrivate();
 
-      // optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;
       /**
        * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
        */
@@ -385,12 +342,7 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
        */
       org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getChainKey();
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-       */
-      org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder getChainKeyOrBuilder();
 
-      // repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;
       /**
        * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
        */
@@ -404,29 +356,20 @@ public final class StorageProtos {
        * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
        */
       int getMessageKeysCount();
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-       */
-      java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> 
-          getMessageKeysOrBuilderList();
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-       */
-      org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder getMessageKeysOrBuilder(
-          int index);
     }
     /**
      * Protobuf type {@code textsecure.SessionStructure.Chain}
      */
     public static final class Chain extends
-        com.google.protobuf.GeneratedMessage
-        implements ChainOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.Chain)
+        ChainOrBuilder {
       // Use Chain.newBuilder() to construct.
-      private Chain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private Chain(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private Chain(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private Chain(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final Chain defaultInstance;
       public static Chain getDefaultInstance() {
@@ -437,20 +380,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private Chain(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -460,7 +401,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -508,22 +449,16 @@ public final class StorageProtos {
           if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
             messageKeys_ = java.util.Collections.unmodifiableList(messageKeys_);
           }
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<Chain> PARSER =
           new com.google.protobuf.AbstractParser<Chain>() {
         public Chain parsePartialFrom(
@@ -539,10 +474,10 @@ public final class StorageProtos {
         return PARSER;
       }
 
-      public interface ChainKeyOrBuilder
-          extends com.google.protobuf.MessageOrBuilder {
+      public interface ChainKeyOrBuilder extends
+          // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.Chain.ChainKey)
+          com.google.protobuf.MessageLiteOrBuilder {
 
-        // optional uint32 index = 1;
         /**
          * <code>optional uint32 index = 1;</code>
          */
@@ -552,7 +487,6 @@ public final class StorageProtos {
          */
         int getIndex();
 
-        // optional bytes key = 2;
         /**
          * <code>optional bytes key = 2;</code>
          */
@@ -566,14 +500,15 @@ public final class StorageProtos {
        * Protobuf type {@code textsecure.SessionStructure.Chain.ChainKey}
        */
       public static final class ChainKey extends
-          com.google.protobuf.GeneratedMessage
-          implements ChainKeyOrBuilder {
+          com.google.protobuf.GeneratedMessageLite implements
+          // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.Chain.ChainKey)
+          ChainKeyOrBuilder {
         // Use ChainKey.newBuilder() to construct.
-        private ChainKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+        private ChainKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
           super(builder);
           this.unknownFields = builder.getUnknownFields();
         }
-        private ChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+        private ChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
         private static final ChainKey defaultInstance;
         public static ChainKey getDefaultInstance() {
@@ -584,20 +519,18 @@ public final class StorageProtos {
           return defaultInstance;
         }
 
-        private final com.google.protobuf.UnknownFieldSet unknownFields;
-        @java.lang.Override
-        public final com.google.protobuf.UnknownFieldSet
-            getUnknownFields() {
-          return this.unknownFields;
-        }
+        private final com.google.protobuf.ByteString unknownFields;
         private ChainKey(
             com.google.protobuf.CodedInputStream input,
             com.google.protobuf.ExtensionRegistryLite extensionRegistry)
             throws com.google.protobuf.InvalidProtocolBufferException {
           initFields();
           int mutable_bitField0_ = 0;
-          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-              com.google.protobuf.UnknownFieldSet.newBuilder();
+          com.google.protobuf.ByteString.Output unknownFieldsOutput =
+              com.google.protobuf.ByteString.newOutput();
+          com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+              com.google.protobuf.CodedOutputStream.newInstance(
+                  unknownFieldsOutput);
           try {
             boolean done = false;
             while (!done) {
@@ -607,7 +540,7 @@ public final class StorageProtos {
                   done = true;
                   break;
                 default: {
-                  if (!parseUnknownField(input, unknownFields,
+                  if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                          extensionRegistry, tag)) {
                     done = true;
                   }
@@ -631,22 +564,16 @@ public final class StorageProtos {
             throw new com.google.protobuf.InvalidProtocolBufferException(
                 e.getMessage()).setUnfinishedMessage(this);
           } finally {
-            this.unknownFields = unknownFields.build();
+            try {
+              unknownFieldsCodedOutput.flush();
+            } catch (java.io.IOException e) {
+            // Should not happen
+            } finally {
+              unknownFields = unknownFieldsOutput.toByteString();
+            }
             makeExtensionsImmutable();
           }
         }
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder.class);
-        }
-
         public static com.google.protobuf.Parser<ChainKey> PARSER =
             new com.google.protobuf.AbstractParser<ChainKey>() {
           public ChainKey parsePartialFrom(
@@ -663,7 +590,6 @@ public final class StorageProtos {
         }
 
         private int bitField0_;
-        // optional uint32 index = 1;
         public static final int INDEX_FIELD_NUMBER = 1;
         private int index_;
         /**
@@ -679,7 +605,6 @@ public final class StorageProtos {
           return index_;
         }
 
-        // optional bytes key = 2;
         public static final int KEY_FIELD_NUMBER = 2;
         private com.google.protobuf.ByteString key_;
         /**
@@ -702,7 +627,8 @@ public final class StorageProtos {
         private byte memoizedIsInitialized = -1;
         public final boolean isInitialized() {
           byte isInitialized = memoizedIsInitialized;
-          if (isInitialized != -1) return isInitialized == 1;
+          if (isInitialized == 1) return true;
+          if (isInitialized == 0) return false;
 
           memoizedIsInitialized = 1;
           return true;
@@ -717,7 +643,7 @@ public final class StorageProtos {
           if (((bitField0_ & 0x00000002) == 0x00000002)) {
             output.writeBytes(2, key_);
           }
-          getUnknownFields().writeTo(output);
+          output.writeRawBytes(unknownFields);
         }
 
         private int memoizedSerializedSize = -1;
@@ -734,7 +660,7 @@ public final class StorageProtos {
             size += com.google.protobuf.CodedOutputStream
               .computeBytesSize(2, key_);
           }
-          size += getUnknownFields().getSerializedSize();
+          size += unknownFields.size();
           memoizedSerializedSize = size;
           return size;
         }
@@ -806,43 +732,21 @@ public final class StorageProtos {
         }
         public Builder toBuilder() { return newBuilder(this); }
 
-        @java.lang.Override
-        protected Builder newBuilderForType(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          Builder builder = new Builder(parent);
-          return builder;
-        }
         /**
          * Protobuf type {@code textsecure.SessionStructure.Chain.ChainKey}
          */
         public static final class Builder extends
-            com.google.protobuf.GeneratedMessage.Builder<Builder>
-           implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder {
-          public static final com.google.protobuf.Descriptors.Descriptor
-              getDescriptor() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-          }
-
-          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-              internalGetFieldAccessorTable() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable
-                .ensureFieldAccessorsInitialized(
-                    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder.class);
-          }
-
+            com.google.protobuf.GeneratedMessageLite.Builder<
+              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, Builder>
+            implements
+            // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.Chain.ChainKey)
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder {
           // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.newBuilder()
           private Builder() {
             maybeForceBuilderInitialization();
           }
 
-          private Builder(
-              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-            super(parent);
-            maybeForceBuilderInitialization();
-          }
           private void maybeForceBuilderInitialization() {
-            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-            }
           }
           private static Builder create() {
             return new Builder();
@@ -861,11 +765,6 @@ public final class StorageProtos {
             return create().mergeFrom(buildPartial());
           }
 
-          public com.google.protobuf.Descriptors.Descriptor
-              getDescriptorForType() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-          }
-
           public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getDefaultInstanceForType() {
             return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
           }
@@ -891,19 +790,9 @@ public final class StorageProtos {
             }
             result.key_ = key_;
             result.bitField0_ = to_bitField0_;
-            onBuilt();
             return result;
           }
 
-          public Builder mergeFrom(com.google.protobuf.Message other) {
-            if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey) {
-              return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey)other);
-            } else {
-              super.mergeFrom(other);
-              return this;
-            }
-          }
-
           public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey other) {
             if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance()) return this;
             if (other.hasIndex()) {
@@ -912,7 +801,8 @@ public final class StorageProtos {
             if (other.hasKey()) {
               setKey(other.getKey());
             }
-            this.mergeUnknownFields(other.getUnknownFields());
+            setUnknownFields(
+                getUnknownFields().concat(other.unknownFields));
             return this;
           }
 
@@ -939,7 +829,6 @@ public final class StorageProtos {
           }
           private int bitField0_;
 
-          // optional uint32 index = 1;
           private int index_ ;
           /**
            * <code>optional uint32 index = 1;</code>
@@ -959,7 +848,7 @@ public final class StorageProtos {
           public Builder setIndex(int value) {
             bitField0_ |= 0x00000001;
             index_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -968,11 +857,10 @@ public final class StorageProtos {
           public Builder clearIndex() {
             bitField0_ = (bitField0_ & ~0x00000001);
             index_ = 0;
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes key = 2;
           private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes key = 2;</code>
@@ -995,7 +883,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
             key_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1004,7 +892,7 @@ public final class StorageProtos {
           public Builder clearKey() {
             bitField0_ = (bitField0_ & ~0x00000002);
             key_ = getDefaultInstance().getKey();
-            onChanged();
+            
             return this;
           }
 
@@ -1019,10 +907,10 @@ public final class StorageProtos {
         // @@protoc_insertion_point(class_scope:textsecure.SessionStructure.Chain.ChainKey)
       }
 
-      public interface MessageKeyOrBuilder
-          extends com.google.protobuf.MessageOrBuilder {
+      public interface MessageKeyOrBuilder extends
+          // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.Chain.MessageKey)
+          com.google.protobuf.MessageLiteOrBuilder {
 
-        // optional uint32 index = 1;
         /**
          * <code>optional uint32 index = 1;</code>
          */
@@ -1032,7 +920,6 @@ public final class StorageProtos {
          */
         int getIndex();
 
-        // optional bytes cipherKey = 2;
         /**
          * <code>optional bytes cipherKey = 2;</code>
          */
@@ -1042,7 +929,6 @@ public final class StorageProtos {
          */
         com.google.protobuf.ByteString getCipherKey();
 
-        // optional bytes macKey = 3;
         /**
          * <code>optional bytes macKey = 3;</code>
          */
@@ -1052,7 +938,6 @@ public final class StorageProtos {
          */
         com.google.protobuf.ByteString getMacKey();
 
-        // optional bytes iv = 4;
         /**
          * <code>optional bytes iv = 4;</code>
          */
@@ -1066,14 +951,15 @@ public final class StorageProtos {
        * Protobuf type {@code textsecure.SessionStructure.Chain.MessageKey}
        */
       public static final class MessageKey extends
-          com.google.protobuf.GeneratedMessage
-          implements MessageKeyOrBuilder {
+          com.google.protobuf.GeneratedMessageLite implements
+          // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.Chain.MessageKey)
+          MessageKeyOrBuilder {
         // Use MessageKey.newBuilder() to construct.
-        private MessageKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+        private MessageKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
           super(builder);
           this.unknownFields = builder.getUnknownFields();
         }
-        private MessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+        private MessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
         private static final MessageKey defaultInstance;
         public static MessageKey getDefaultInstance() {
@@ -1084,20 +970,18 @@ public final class StorageProtos {
           return defaultInstance;
         }
 
-        private final com.google.protobuf.UnknownFieldSet unknownFields;
-        @java.lang.Override
-        public final com.google.protobuf.UnknownFieldSet
-            getUnknownFields() {
-          return this.unknownFields;
-        }
+        private final com.google.protobuf.ByteString unknownFields;
         private MessageKey(
             com.google.protobuf.CodedInputStream input,
             com.google.protobuf.ExtensionRegistryLite extensionRegistry)
             throws com.google.protobuf.InvalidProtocolBufferException {
           initFields();
           int mutable_bitField0_ = 0;
-          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-              com.google.protobuf.UnknownFieldSet.newBuilder();
+          com.google.protobuf.ByteString.Output unknownFieldsOutput =
+              com.google.protobuf.ByteString.newOutput();
+          com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+              com.google.protobuf.CodedOutputStream.newInstance(
+                  unknownFieldsOutput);
           try {
             boolean done = false;
             while (!done) {
@@ -1107,7 +991,7 @@ public final class StorageProtos {
                   done = true;
                   break;
                 default: {
-                  if (!parseUnknownField(input, unknownFields,
+                  if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                          extensionRegistry, tag)) {
                     done = true;
                   }
@@ -1141,22 +1025,16 @@ public final class StorageProtos {
             throw new com.google.protobuf.InvalidProtocolBufferException(
                 e.getMessage()).setUnfinishedMessage(this);
           } finally {
-            this.unknownFields = unknownFields.build();
+            try {
+              unknownFieldsCodedOutput.flush();
+            } catch (java.io.IOException e) {
+            // Should not happen
+            } finally {
+              unknownFields = unknownFieldsOutput.toByteString();
+            }
             makeExtensionsImmutable();
           }
         }
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder.class);
-        }
-
         public static com.google.protobuf.Parser<MessageKey> PARSER =
             new com.google.protobuf.AbstractParser<MessageKey>() {
           public MessageKey parsePartialFrom(
@@ -1173,7 +1051,6 @@ public final class StorageProtos {
         }
 
         private int bitField0_;
-        // optional uint32 index = 1;
         public static final int INDEX_FIELD_NUMBER = 1;
         private int index_;
         /**
@@ -1189,7 +1066,6 @@ public final class StorageProtos {
           return index_;
         }
 
-        // optional bytes cipherKey = 2;
         public static final int CIPHERKEY_FIELD_NUMBER = 2;
         private com.google.protobuf.ByteString cipherKey_;
         /**
@@ -1205,7 +1081,6 @@ public final class StorageProtos {
           return cipherKey_;
         }
 
-        // optional bytes macKey = 3;
         public static final int MACKEY_FIELD_NUMBER = 3;
         private com.google.protobuf.ByteString macKey_;
         /**
@@ -1221,7 +1096,6 @@ public final class StorageProtos {
           return macKey_;
         }
 
-        // optional bytes iv = 4;
         public static final int IV_FIELD_NUMBER = 4;
         private com.google.protobuf.ByteString iv_;
         /**
@@ -1246,7 +1120,8 @@ public final class StorageProtos {
         private byte memoizedIsInitialized = -1;
         public final boolean isInitialized() {
           byte isInitialized = memoizedIsInitialized;
-          if (isInitialized != -1) return isInitialized == 1;
+          if (isInitialized == 1) return true;
+          if (isInitialized == 0) return false;
 
           memoizedIsInitialized = 1;
           return true;
@@ -1267,7 +1142,7 @@ public final class StorageProtos {
           if (((bitField0_ & 0x00000008) == 0x00000008)) {
             output.writeBytes(4, iv_);
           }
-          getUnknownFields().writeTo(output);
+          output.writeRawBytes(unknownFields);
         }
 
         private int memoizedSerializedSize = -1;
@@ -1292,7 +1167,7 @@ public final class StorageProtos {
             size += com.google.protobuf.CodedOutputStream
               .computeBytesSize(4, iv_);
           }
-          size += getUnknownFields().getSerializedSize();
+          size += unknownFields.size();
           memoizedSerializedSize = size;
           return size;
         }
@@ -1364,43 +1239,21 @@ public final class StorageProtos {
         }
         public Builder toBuilder() { return newBuilder(this); }
 
-        @java.lang.Override
-        protected Builder newBuilderForType(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          Builder builder = new Builder(parent);
-          return builder;
-        }
         /**
          * Protobuf type {@code textsecure.SessionStructure.Chain.MessageKey}
          */
         public static final class Builder extends
-            com.google.protobuf.GeneratedMessage.Builder<Builder>
-           implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder {
-          public static final com.google.protobuf.Descriptors.Descriptor
-              getDescriptor() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-          }
-
-          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-              internalGetFieldAccessorTable() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable
-                .ensureFieldAccessorsInitialized(
-                    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder.class);
-          }
-
+            com.google.protobuf.GeneratedMessageLite.Builder<
+              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, Builder>
+            implements
+            // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.Chain.MessageKey)
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder {
           // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.newBuilder()
           private Builder() {
             maybeForceBuilderInitialization();
           }
 
-          private Builder(
-              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-            super(parent);
-            maybeForceBuilderInitialization();
-          }
           private void maybeForceBuilderInitialization() {
-            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-            }
           }
           private static Builder create() {
             return new Builder();
@@ -1423,11 +1276,6 @@ public final class StorageProtos {
             return create().mergeFrom(buildPartial());
           }
 
-          public com.google.protobuf.Descriptors.Descriptor
-              getDescriptorForType() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-          }
-
           public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey getDefaultInstanceForType() {
             return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance();
           }
@@ -1461,19 +1309,9 @@ public final class StorageProtos {
             }
             result.iv_ = iv_;
             result.bitField0_ = to_bitField0_;
-            onBuilt();
             return result;
           }
 
-          public Builder mergeFrom(com.google.protobuf.Message other) {
-            if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey) {
-              return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey)other);
-            } else {
-              super.mergeFrom(other);
-              return this;
-            }
-          }
-
           public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey other) {
             if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance()) return this;
             if (other.hasIndex()) {
@@ -1488,7 +1326,8 @@ public final class StorageProtos {
             if (other.hasIv()) {
               setIv(other.getIv());
             }
-            this.mergeUnknownFields(other.getUnknownFields());
+            setUnknownFields(
+                getUnknownFields().concat(other.unknownFields));
             return this;
           }
 
@@ -1515,7 +1354,6 @@ public final class StorageProtos {
           }
           private int bitField0_;
 
-          // optional uint32 index = 1;
           private int index_ ;
           /**
            * <code>optional uint32 index = 1;</code>
@@ -1535,7 +1373,7 @@ public final class StorageProtos {
           public Builder setIndex(int value) {
             bitField0_ |= 0x00000001;
             index_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1544,11 +1382,10 @@ public final class StorageProtos {
           public Builder clearIndex() {
             bitField0_ = (bitField0_ & ~0x00000001);
             index_ = 0;
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes cipherKey = 2;
           private com.google.protobuf.ByteString cipherKey_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes cipherKey = 2;</code>
@@ -1571,7 +1408,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
             cipherKey_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1580,11 +1417,10 @@ public final class StorageProtos {
           public Builder clearCipherKey() {
             bitField0_ = (bitField0_ & ~0x00000002);
             cipherKey_ = getDefaultInstance().getCipherKey();
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes macKey = 3;
           private com.google.protobuf.ByteString macKey_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes macKey = 3;</code>
@@ -1607,7 +1443,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
             macKey_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1616,11 +1452,10 @@ public final class StorageProtos {
           public Builder clearMacKey() {
             bitField0_ = (bitField0_ & ~0x00000004);
             macKey_ = getDefaultInstance().getMacKey();
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes iv = 4;
           private com.google.protobuf.ByteString iv_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes iv = 4;</code>
@@ -1643,7 +1478,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
             iv_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1652,7 +1487,7 @@ public final class StorageProtos {
           public Builder clearIv() {
             bitField0_ = (bitField0_ & ~0x00000008);
             iv_ = getDefaultInstance().getIv();
-            onChanged();
+            
             return this;
           }
 
@@ -1668,7 +1503,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional bytes senderRatchetKey = 1;
       public static final int SENDERRATCHETKEY_FIELD_NUMBER = 1;
       private com.google.protobuf.ByteString senderRatchetKey_;
       /**
@@ -1684,7 +1518,6 @@ public final class StorageProtos {
         return senderRatchetKey_;
       }
 
-      // optional bytes senderRatchetKeyPrivate = 2;
       public static final int SENDERRATCHETKEYPRIVATE_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString senderRatchetKeyPrivate_;
       /**
@@ -1700,7 +1533,6 @@ public final class StorageProtos {
         return senderRatchetKeyPrivate_;
       }
 
-      // optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;
       public static final int CHAINKEY_FIELD_NUMBER = 3;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey chainKey_;
       /**
@@ -1715,14 +1547,7 @@ public final class StorageProtos {
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getChainKey() {
         return chainKey_;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder getChainKeyOrBuilder() {
-        return chainKey_;
-      }
 
-      // repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;
       public static final int MESSAGEKEYS_FIELD_NUMBER = 4;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> messageKeys_;
       /**
@@ -1767,7 +1592,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -1788,7 +1614,7 @@ public final class StorageProtos {
         for (int i = 0; i < messageKeys_.size(); i++) {
           output.writeMessage(4, messageKeys_.get(i));
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -1813,7 +1639,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeMessageSize(4, messageKeys_.get(i));
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -1885,45 +1711,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SessionStructure.Chain}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.Chain)
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-            getChainKeyFieldBuilder();
-            getMessageKeysFieldBuilder();
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -1935,18 +1737,10 @@ public final class StorageProtos {
           bitField0_ = (bitField0_ & ~0x00000001);
           senderRatchetKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
           bitField0_ = (bitField0_ & ~0x00000002);
-          if (chainKeyBuilder_ == null) {
-            chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
-          } else {
-            chainKeyBuilder_.clear();
-          }
+          chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
           bitField0_ = (bitField0_ & ~0x00000004);
-          if (messageKeysBuilder_ == null) {
-            messageKeys_ = java.util.Collections.emptyList();
-            bitField0_ = (bitField0_ & ~0x00000008);
-          } else {
-            messageKeysBuilder_.clear();
-          }
+          messageKeys_ = java.util.Collections.emptyList();
+          bitField0_ = (bitField0_ & ~0x00000008);
           return this;
         }
 
@@ -1954,11 +1748,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
         }
@@ -1986,34 +1775,16 @@ public final class StorageProtos {
           if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
             to_bitField0_ |= 0x00000004;
           }
-          if (chainKeyBuilder_ == null) {
-            result.chainKey_ = chainKey_;
-          } else {
-            result.chainKey_ = chainKeyBuilder_.build();
-          }
-          if (messageKeysBuilder_ == null) {
-            if (((bitField0_ & 0x00000008) == 0x00000008)) {
-              messageKeys_ = java.util.Collections.unmodifiableList(messageKeys_);
-              bitField0_ = (bitField0_ & ~0x00000008);
-            }
-            result.messageKeys_ = messageKeys_;
-          } else {
-            result.messageKeys_ = messageKeysBuilder_.build();
+          result.chainKey_ = chainKey_;
+          if (((bitField0_ & 0x00000008) == 0x00000008)) {
+            messageKeys_ = java.util.Collections.unmodifiableList(messageKeys_);
+            bitField0_ = (bitField0_ & ~0x00000008);
           }
+          result.messageKeys_ = messageKeys_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance()) return this;
           if (other.hasSenderRatchetKey()) {
@@ -2025,33 +1796,18 @@ public final class StorageProtos {
           if (other.hasChainKey()) {
             mergeChainKey(other.getChainKey());
           }
-          if (messageKeysBuilder_ == null) {
-            if (!other.messageKeys_.isEmpty()) {
-              if (messageKeys_.isEmpty()) {
-                messageKeys_ = other.messageKeys_;
-                bitField0_ = (bitField0_ & ~0x00000008);
-              } else {
-                ensureMessageKeysIsMutable();
-                messageKeys_.addAll(other.messageKeys_);
-              }
-              onChanged();
-            }
-          } else {
-            if (!other.messageKeys_.isEmpty()) {
-              if (messageKeysBuilder_.isEmpty()) {
-                messageKeysBuilder_.dispose();
-                messageKeysBuilder_ = null;
-                messageKeys_ = other.messageKeys_;
-                bitField0_ = (bitField0_ & ~0x00000008);
-                messageKeysBuilder_ = 
-                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                     getMessageKeysFieldBuilder() : null;
-              } else {
-                messageKeysBuilder_.addAllMessages(other.messageKeys_);
-              }
+          if (!other.messageKeys_.isEmpty()) {
+            if (messageKeys_.isEmpty()) {
+              messageKeys_ = other.messageKeys_;
+              bitField0_ = (bitField0_ & ~0x00000008);
+            } else {
+              ensureMessageKeysIsMutable();
+              messageKeys_.addAll(other.messageKeys_);
             }
+            
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -2078,7 +1834,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional bytes senderRatchetKey = 1;
         private com.google.protobuf.ByteString senderRatchetKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes senderRatchetKey = 1;</code>
@@ -2101,7 +1856,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000001;
           senderRatchetKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -2110,11 +1865,10 @@ public final class StorageProtos {
         public Builder clearSenderRatchetKey() {
           bitField0_ = (bitField0_ & ~0x00000001);
           senderRatchetKey_ = getDefaultInstance().getSenderRatchetKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes senderRatchetKeyPrivate = 2;
         private com.google.protobuf.ByteString senderRatchetKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes senderRatchetKeyPrivate = 2;</code>
@@ -2137,7 +1891,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           senderRatchetKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -2146,14 +1900,11 @@ public final class StorageProtos {
         public Builder clearSenderRatchetKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000002);
           senderRatchetKeyPrivate_ = getDefaultInstance().getSenderRatchetKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
-        // optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;
         private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
-        private com.google.protobuf.SingleFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder> chainKeyBuilder_;
         /**
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
@@ -2164,25 +1915,17 @@ public final class StorageProtos {
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getChainKey() {
-          if (chainKeyBuilder_ == null) {
-            return chainKey_;
-          } else {
-            return chainKeyBuilder_.getMessage();
-          }
+          return chainKey_;
         }
         /**
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public Builder setChainKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey value) {
-          if (chainKeyBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            chainKey_ = value;
-            onChanged();
-          } else {
-            chainKeyBuilder_.setMessage(value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          chainKey_ = value;
+
           bitField0_ |= 0x00000004;
           return this;
         }
@@ -2191,12 +1934,8 @@ public final class StorageProtos {
          */
         public Builder setChainKey(
             org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder builderForValue) {
-          if (chainKeyBuilder_ == null) {
-            chainKey_ = builderForValue.build();
-            onChanged();
-          } else {
-            chainKeyBuilder_.setMessage(builderForValue.build());
-          }
+          chainKey_ = builderForValue.build();
+
           bitField0_ |= 0x00000004;
           return this;
         }
@@ -2204,18 +1943,14 @@ public final class StorageProtos {
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public Builder mergeChainKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey value) {
-          if (chainKeyBuilder_ == null) {
-            if (((bitField0_ & 0x00000004) == 0x00000004) &&
-                chainKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance()) {
-              chainKey_ =
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.newBuilder(chainKey_).mergeFrom(value).buildPartial();
-            } else {
-              chainKey_ = value;
-            }
-            onChanged();
+          if (((bitField0_ & 0x00000004) == 0x00000004) &&
+              chainKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance()) {
+            chainKey_ =
+              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.newBuilder(chainKey_).mergeFrom(value).buildPartial();
           } else {
-            chainKeyBuilder_.mergeFrom(value);
+            chainKey_ = value;
           }
+
           bitField0_ |= 0x00000004;
           return this;
         }
@@ -2223,51 +1958,12 @@ public final class StorageProtos {
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public Builder clearChainKey() {
-          if (chainKeyBuilder_ == null) {
-            chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
-            onChanged();
-          } else {
-            chainKeyBuilder_.clear();
-          }
+          chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
+
           bitField0_ = (bitField0_ & ~0x00000004);
           return this;
         }
-        /**
-         * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder getChainKeyBuilder() {
-          bitField0_ |= 0x00000004;
-          onChanged();
-          return getChainKeyFieldBuilder().getBuilder();
-        }
-        /**
-         * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder getChainKeyOrBuilder() {
-          if (chainKeyBuilder_ != null) {
-            return chainKeyBuilder_.getMessageOrBuilder();
-          } else {
-            return chainKey_;
-          }
-        }
-        /**
-         * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-         */
-        private com.google.protobuf.SingleFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder> 
-            getChainKeyFieldBuilder() {
-          if (chainKeyBuilder_ == null) {
-            chainKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder>(
-                    chainKey_,
-                    getParentForChildren(),
-                    isClean());
-            chainKey_ = null;
-          }
-          return chainKeyBuilder_;
-        }
 
-        // repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;
         private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> messageKeys_ =
           java.util.Collections.emptyList();
         private void ensureMessageKeysIsMutable() {
@@ -2277,54 +1973,35 @@ public final class StorageProtos {
            }
         }
 
-        private com.google.protobuf.RepeatedFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> messageKeysBuilder_;
-
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> getMessageKeysList() {
-          if (messageKeysBuilder_ == null) {
-            return java.util.Collections.unmodifiableList(messageKeys_);
-          } else {
-            return messageKeysBuilder_.getMessageList();
-          }
+          return java.util.Collections.unmodifiableList(messageKeys_);
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public int getMessageKeysCount() {
-          if (messageKeysBuilder_ == null) {
-            return messageKeys_.size();
-          } else {
-            return messageKeysBuilder_.getCount();
-          }
+          return messageKeys_.size();
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey getMessageKeys(int index) {
-          if (messageKeysBuilder_ == null) {
-            return messageKeys_.get(index);
-          } else {
-            return messageKeysBuilder_.getMessage(index);
-          }
+          return messageKeys_.get(index);
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder setMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey value) {
-          if (messageKeysBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            ensureMessageKeysIsMutable();
-            messageKeys_.set(index, value);
-            onChanged();
-          } else {
-            messageKeysBuilder_.setMessage(index, value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          ensureMessageKeysIsMutable();
+          messageKeys_.set(index, value);
+
           return this;
         }
         /**
@@ -2332,29 +2009,21 @@ public final class StorageProtos {
          */
         public Builder setMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder builderForValue) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.set(index, builderForValue.build());
-            onChanged();
-          } else {
-            messageKeysBuilder_.setMessage(index, builderForValue.build());
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.set(index, builderForValue.build());
+
           return this;
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder addMessageKeys(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey value) {
-          if (messageKeysBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(value);
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(value);
+
           return this;
         }
         /**
@@ -2362,16 +2031,12 @@ public final class StorageProtos {
          */
         public Builder addMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey value) {
-          if (messageKeysBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(index, value);
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(index, value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(index, value);
+
           return this;
         }
         /**
@@ -2379,13 +2044,9 @@ public final class StorageProtos {
          */
         public Builder addMessageKeys(
             org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder builderForValue) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(builderForValue.build());
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(builderForValue.build());
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(builderForValue.build());
+
           return this;
         }
         /**
@@ -2393,13 +2054,9 @@ public final class StorageProtos {
          */
         public Builder addMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder builderForValue) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(index, builderForValue.build());
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(index, builderForValue.build());
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(index, builderForValue.build());
+
           return this;
         }
         /**
@@ -2407,105 +2064,30 @@ public final class StorageProtos {
          */
         public Builder addAllMessageKeys(
             java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> values) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            super.addAll(values, messageKeys_);
-            onChanged();
-          } else {
-            messageKeysBuilder_.addAllMessages(values);
-          }
+          ensureMessageKeysIsMutable();
+          com.google.protobuf.AbstractMessageLite.Builder.addAll(
+              values, messageKeys_);
+
           return this;
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder clearMessageKeys() {
-          if (messageKeysBuilder_ == null) {
-            messageKeys_ = java.util.Collections.emptyList();
-            bitField0_ = (bitField0_ & ~0x00000008);
-            onChanged();
-          } else {
-            messageKeysBuilder_.clear();
-          }
+          messageKeys_ = java.util.Collections.emptyList();
+          bitField0_ = (bitField0_ & ~0x00000008);
+
           return this;
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder removeMessageKeys(int index) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.remove(index);
-            onChanged();
-          } else {
-            messageKeysBuilder_.remove(index);
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.remove(index);
+
           return this;
         }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder getMessageKeysBuilder(
-            int index) {
-          return getMessageKeysFieldBuilder().getBuilder(index);
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder getMessageKeysOrBuilder(
-            int index) {
-          if (messageKeysBuilder_ == null) {
-            return messageKeys_.get(index);  } else {
-            return messageKeysBuilder_.getMessageOrBuilder(index);
-          }
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> 
-             getMessageKeysOrBuilderList() {
-          if (messageKeysBuilder_ != null) {
-            return messageKeysBuilder_.getMessageOrBuilderList();
-          } else {
-            return java.util.Collections.unmodifiableList(messageKeys_);
-          }
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder addMessageKeysBuilder() {
-          return getMessageKeysFieldBuilder().addBuilder(
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance());
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder addMessageKeysBuilder(
-            int index) {
-          return getMessageKeysFieldBuilder().addBuilder(
-              index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance());
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder> 
-             getMessageKeysBuilderList() {
-          return getMessageKeysFieldBuilder().getBuilderList();
-        }
-        private com.google.protobuf.RepeatedFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> 
-            getMessageKeysFieldBuilder() {
-          if (messageKeysBuilder_ == null) {
-            messageKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder>(
-                    messageKeys_,
-                    ((bitField0_ & 0x00000008) == 0x00000008),
-                    getParentForChildren(),
-                    isClean());
-            messageKeys_ = null;
-          }
-          return messageKeysBuilder_;
-        }
 
         // @@protoc_insertion_point(builder_scope:textsecure.SessionStructure.Chain)
       }
@@ -2518,10 +2100,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SessionStructure.Chain)
     }
 
-    public interface PendingKeyExchangeOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface PendingKeyExchangeOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.PendingKeyExchange)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 sequence = 1;
       /**
        * <code>optional uint32 sequence = 1;</code>
        */
@@ -2531,7 +2113,6 @@ public final class StorageProtos {
        */
       int getSequence();
 
-      // optional bytes localBaseKey = 2;
       /**
        * <code>optional bytes localBaseKey = 2;</code>
        */
@@ -2541,7 +2122,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalBaseKey();
 
-      // optional bytes localBaseKeyPrivate = 3;
       /**
        * <code>optional bytes localBaseKeyPrivate = 3;</code>
        */
@@ -2551,7 +2131,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalBaseKeyPrivate();
 
-      // optional bytes localRatchetKey = 4;
       /**
        * <code>optional bytes localRatchetKey = 4;</code>
        */
@@ -2561,7 +2140,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalRatchetKey();
 
-      // optional bytes localRatchetKeyPrivate = 5;
       /**
        * <code>optional bytes localRatchetKeyPrivate = 5;</code>
        */
@@ -2571,7 +2149,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalRatchetKeyPrivate();
 
-      // optional bytes localIdentityKey = 7;
       /**
        * <code>optional bytes localIdentityKey = 7;</code>
        */
@@ -2581,7 +2158,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalIdentityKey();
 
-      // optional bytes localIdentityKeyPrivate = 8;
       /**
        * <code>optional bytes localIdentityKeyPrivate = 8;</code>
        */
@@ -2595,14 +2171,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SessionStructure.PendingKeyExchange}
      */
     public static final class PendingKeyExchange extends
-        com.google.protobuf.GeneratedMessage
-        implements PendingKeyExchangeOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.PendingKeyExchange)
+        PendingKeyExchangeOrBuilder {
       // Use PendingKeyExchange.newBuilder() to construct.
-      private PendingKeyExchange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private PendingKeyExchange(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private PendingKeyExchange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private PendingKeyExchange(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final PendingKeyExchange defaultInstance;
       public static PendingKeyExchange getDefaultInstance() {
@@ -2613,20 +2190,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private PendingKeyExchange(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -2636,7 +2211,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -2685,22 +2260,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<PendingKeyExchange> PARSER =
           new com.google.protobuf.AbstractParser<PendingKeyExchange>() {
         public PendingKeyExchange parsePartialFrom(
@@ -2717,7 +2286,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 sequence = 1;
       public static final int SEQUENCE_FIELD_NUMBER = 1;
       private int sequence_;
       /**
@@ -2733,7 +2301,6 @@ public final class StorageProtos {
         return sequence_;
       }
 
-      // optional bytes localBaseKey = 2;
       public static final int LOCALBASEKEY_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString localBaseKey_;
       /**
@@ -2749,7 +2316,6 @@ public final class StorageProtos {
         return localBaseKey_;
       }
 
-      // optional bytes localBaseKeyPrivate = 3;
       public static final int LOCALBASEKEYPRIVATE_FIELD_NUMBER = 3;
       private com.google.protobuf.ByteString localBaseKeyPrivate_;
       /**
@@ -2765,7 +2331,6 @@ public final class StorageProtos {
         return localBaseKeyPrivate_;
       }
 
-      // optional bytes localRatchetKey = 4;
       public static final int LOCALRATCHETKEY_FIELD_NUMBER = 4;
       private com.google.protobuf.ByteString localRatchetKey_;
       /**
@@ -2781,7 +2346,6 @@ public final class StorageProtos {
         return localRatchetKey_;
       }
 
-      // optional bytes localRatchetKeyPrivate = 5;
       public static final int LOCALRATCHETKEYPRIVATE_FIELD_NUMBER = 5;
       private com.google.protobuf.ByteString localRatchetKeyPrivate_;
       /**
@@ -2797,7 +2361,6 @@ public final class StorageProtos {
         return localRatchetKeyPrivate_;
       }
 
-      // optional bytes localIdentityKey = 7;
       public static final int LOCALIDENTITYKEY_FIELD_NUMBER = 7;
       private com.google.protobuf.ByteString localIdentityKey_;
       /**
@@ -2813,7 +2376,6 @@ public final class StorageProtos {
         return localIdentityKey_;
       }
 
-      // optional bytes localIdentityKeyPrivate = 8;
       public static final int LOCALIDENTITYKEYPRIVATE_FIELD_NUMBER = 8;
       private com.google.protobuf.ByteString localIdentityKeyPrivate_;
       /**
@@ -2841,7 +2403,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -2871,7 +2434,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000040) == 0x00000040)) {
           output.writeBytes(8, localIdentityKeyPrivate_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -2908,7 +2471,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(8, localIdentityKeyPrivate_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -2980,43 +2543,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SessionStructure.PendingKeyExchange}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.PendingKeyExchange)
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -3045,11 +2586,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
         }
@@ -3095,19 +2631,9 @@ public final class StorageProtos {
           }
           result.localIdentityKeyPrivate_ = localIdentityKeyPrivate_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance()) return this;
           if (other.hasSequence()) {
@@ -3131,7 +2657,8 @@ public final class StorageProtos {
           if (other.hasLocalIdentityKeyPrivate()) {
             setLocalIdentityKeyPrivate(other.getLocalIdentityKeyPrivate());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -3158,7 +2685,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 sequence = 1;
         private int sequence_ ;
         /**
          * <code>optional uint32 sequence = 1;</code>
@@ -3178,7 +2704,7 @@ public final class StorageProtos {
         public Builder setSequence(int value) {
           bitField0_ |= 0x00000001;
           sequence_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3187,11 +2713,10 @@ public final class StorageProtos {
         public Builder clearSequence() {
           bitField0_ = (bitField0_ & ~0x00000001);
           sequence_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localBaseKey = 2;
         private com.google.protobuf.ByteString localBaseKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localBaseKey = 2;</code>
@@ -3214,7 +2739,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           localBaseKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3223,11 +2748,10 @@ public final class StorageProtos {
         public Builder clearLocalBaseKey() {
           bitField0_ = (bitField0_ & ~0x00000002);
           localBaseKey_ = getDefaultInstance().getLocalBaseKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localBaseKeyPrivate = 3;
         private com.google.protobuf.ByteString localBaseKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localBaseKeyPrivate = 3;</code>
@@ -3250,7 +2774,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
           localBaseKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3259,11 +2783,10 @@ public final class StorageProtos {
         public Builder clearLocalBaseKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000004);
           localBaseKeyPrivate_ = getDefaultInstance().getLocalBaseKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localRatchetKey = 4;
         private com.google.protobuf.ByteString localRatchetKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localRatchetKey = 4;</code>
@@ -3286,7 +2809,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
           localRatchetKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3295,11 +2818,10 @@ public final class StorageProtos {
         public Builder clearLocalRatchetKey() {
           bitField0_ = (bitField0_ & ~0x00000008);
           localRatchetKey_ = getDefaultInstance().getLocalRatchetKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localRatchetKeyPrivate = 5;
         private com.google.protobuf.ByteString localRatchetKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localRatchetKeyPrivate = 5;</code>
@@ -3322,7 +2844,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000010;
           localRatchetKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3331,11 +2853,10 @@ public final class StorageProtos {
         public Builder clearLocalRatchetKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000010);
           localRatchetKeyPrivate_ = getDefaultInstance().getLocalRatchetKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localIdentityKey = 7;
         private com.google.protobuf.ByteString localIdentityKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localIdentityKey = 7;</code>
@@ -3358,7 +2879,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000020;
           localIdentityKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3367,11 +2888,10 @@ public final class StorageProtos {
         public Builder clearLocalIdentityKey() {
           bitField0_ = (bitField0_ & ~0x00000020);
           localIdentityKey_ = getDefaultInstance().getLocalIdentityKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localIdentityKeyPrivate = 8;
         private com.google.protobuf.ByteString localIdentityKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localIdentityKeyPrivate = 8;</code>
@@ -3394,7 +2914,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000040;
           localIdentityKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3403,7 +2923,7 @@ public final class StorageProtos {
         public Builder clearLocalIdentityKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000040);
           localIdentityKeyPrivate_ = getDefaultInstance().getLocalIdentityKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
@@ -3418,10 +2938,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SessionStructure.PendingKeyExchange)
     }
 
-    public interface PendingPreKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface PendingPreKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.PendingPreKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 preKeyId = 1;
       /**
        * <code>optional uint32 preKeyId = 1;</code>
        */
@@ -3431,7 +2951,6 @@ public final class StorageProtos {
        */
       int getPreKeyId();
 
-      // optional int32 signedPreKeyId = 3;
       /**
        * <code>optional int32 signedPreKeyId = 3;</code>
        */
@@ -3441,7 +2960,6 @@ public final class StorageProtos {
        */
       int getSignedPreKeyId();
 
-      // optional bytes baseKey = 2;
       /**
        * <code>optional bytes baseKey = 2;</code>
        */
@@ -3455,14 +2973,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SessionStructure.PendingPreKey}
      */
     public static final class PendingPreKey extends
-        com.google.protobuf.GeneratedMessage
-        implements PendingPreKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.PendingPreKey)
+        PendingPreKeyOrBuilder {
       // Use PendingPreKey.newBuilder() to construct.
-      private PendingPreKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private PendingPreKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private PendingPreKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private PendingPreKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final PendingPreKey defaultInstance;
       public static PendingPreKey getDefaultInstance() {
@@ -3473,20 +2992,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private PendingPreKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -3496,7 +3013,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -3525,22 +3042,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<PendingPreKey> PARSER =
           new com.google.protobuf.AbstractParser<PendingPreKey>() {
         public PendingPreKey parsePartialFrom(
@@ -3557,7 +3068,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 preKeyId = 1;
       public static final int PREKEYID_FIELD_NUMBER = 1;
       private int preKeyId_;
       /**
@@ -3573,7 +3083,6 @@ public final class StorageProtos {
         return preKeyId_;
       }
 
-      // optional int32 signedPreKeyId = 3;
       public static final int SIGNEDPREKEYID_FIELD_NUMBER = 3;
       private int signedPreKeyId_;
       /**
@@ -3589,7 +3098,6 @@ public final class StorageProtos {
         return signedPreKeyId_;
       }
 
-      // optional bytes baseKey = 2;
       public static final int BASEKEY_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString baseKey_;
       /**
@@ -3613,7 +3121,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -3631,7 +3140,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeInt32(3, signedPreKeyId_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -3652,7 +3161,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeInt32Size(3, signedPreKeyId_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -3724,43 +3233,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SessionStructure.PendingPreKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.PendingPreKey)
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -3781,11 +3268,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
         }
@@ -3815,19 +3297,9 @@ public final class StorageProtos {
           }
           result.baseKey_ = baseKey_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance()) return this;
           if (other.hasPreKeyId()) {
@@ -3839,7 +3311,8 @@ public final class StorageProtos {
           if (other.hasBaseKey()) {
             setBaseKey(other.getBaseKey());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -3866,7 +3339,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 preKeyId = 1;
         private int preKeyId_ ;
         /**
          * <code>optional uint32 preKeyId = 1;</code>
@@ -3886,7 +3358,7 @@ public final class StorageProtos {
         public Builder setPreKeyId(int value) {
           bitField0_ |= 0x00000001;
           preKeyId_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3895,11 +3367,10 @@ public final class StorageProtos {
         public Builder clearPreKeyId() {
           bitField0_ = (bitField0_ & ~0x00000001);
           preKeyId_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional int32 signedPreKeyId = 3;
         private int signedPreKeyId_ ;
         /**
          * <code>optional int32 signedPreKeyId = 3;</code>
@@ -3919,7 +3390,7 @@ public final class StorageProtos {
         public Builder setSignedPreKeyId(int value) {
           bitField0_ |= 0x00000002;
           signedPreKeyId_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3928,11 +3399,10 @@ public final class StorageProtos {
         public Builder clearSignedPreKeyId() {
           bitField0_ = (bitField0_ & ~0x00000002);
           signedPreKeyId_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes baseKey = 2;
         private com.google.protobuf.ByteString baseKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes baseKey = 2;</code>
@@ -3955,7 +3425,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
           baseKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3964,7 +3434,7 @@ public final class StorageProtos {
         public Builder clearBaseKey() {
           bitField0_ = (bitField0_ & ~0x00000004);
           baseKey_ = getDefaultInstance().getBaseKey();
-          onChanged();
+          
           return this;
         }
 
@@ -3980,7 +3450,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 sessionVersion = 1;
     public static final int SESSIONVERSION_FIELD_NUMBER = 1;
     private int sessionVersion_;
     /**
@@ -3996,7 +3465,6 @@ public final class StorageProtos {
       return sessionVersion_;
     }
 
-    // optional bytes localIdentityPublic = 2;
     public static final int LOCALIDENTITYPUBLIC_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString localIdentityPublic_;
     /**
@@ -4012,7 +3480,6 @@ public final class StorageProtos {
       return localIdentityPublic_;
     }
 
-    // optional bytes remoteIdentityPublic = 3;
     public static final int REMOTEIDENTITYPUBLIC_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString remoteIdentityPublic_;
     /**
@@ -4028,7 +3495,6 @@ public final class StorageProtos {
       return remoteIdentityPublic_;
     }
 
-    // optional bytes rootKey = 4;
     public static final int ROOTKEY_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString rootKey_;
     /**
@@ -4044,7 +3510,6 @@ public final class StorageProtos {
       return rootKey_;
     }
 
-    // optional uint32 previousCounter = 5;
     public static final int PREVIOUSCOUNTER_FIELD_NUMBER = 5;
     private int previousCounter_;
     /**
@@ -4060,7 +3525,6 @@ public final class StorageProtos {
       return previousCounter_;
     }
 
-    // optional .textsecure.SessionStructure.Chain senderChain = 6;
     public static final int SENDERCHAIN_FIELD_NUMBER = 6;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain senderChain_;
     /**
@@ -4075,14 +3539,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getSenderChain() {
       return senderChain_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getSenderChainOrBuilder() {
-      return senderChain_;
-    }
 
-    // repeated .textsecure.SessionStructure.Chain receiverChains = 7;
     public static final int RECEIVERCHAINS_FIELD_NUMBER = 7;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> receiverChains_;
     /**
@@ -4118,7 +3575,6 @@ public final class StorageProtos {
       return receiverChains_.get(index);
     }
 
-    // optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;
     public static final int PENDINGKEYEXCHANGE_FIELD_NUMBER = 8;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange pendingKeyExchange_;
     /**
@@ -4133,14 +3589,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getPendingKeyExchange() {
       return pendingKeyExchange_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder getPendingKeyExchangeOrBuilder() {
-      return pendingKeyExchange_;
-    }
 
-    // optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;
     public static final int PENDINGPREKEY_FIELD_NUMBER = 9;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey pendingPreKey_;
     /**
@@ -4155,14 +3604,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getPendingPreKey() {
       return pendingPreKey_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder getPendingPreKeyOrBuilder() {
-      return pendingPreKey_;
-    }
 
-    // optional uint32 remoteRegistrationId = 10;
     public static final int REMOTEREGISTRATIONID_FIELD_NUMBER = 10;
     private int remoteRegistrationId_;
     /**
@@ -4178,7 +3620,6 @@ public final class StorageProtos {
       return remoteRegistrationId_;
     }
 
-    // optional uint32 localRegistrationId = 11;
     public static final int LOCALREGISTRATIONID_FIELD_NUMBER = 11;
     private int localRegistrationId_;
     /**
@@ -4194,7 +3635,6 @@ public final class StorageProtos {
       return localRegistrationId_;
     }
 
-    // optional bool needsRefresh = 12;
     public static final int NEEDSREFRESH_FIELD_NUMBER = 12;
     private boolean needsRefresh_;
     /**
@@ -4210,7 +3650,6 @@ public final class StorageProtos {
       return needsRefresh_;
     }
 
-    // optional bytes aliceBaseKey = 13;
     public static final int ALICEBASEKEY_FIELD_NUMBER = 13;
     private com.google.protobuf.ByteString aliceBaseKey_;
     /**
@@ -4244,7 +3683,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -4292,7 +3732,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000800) == 0x00000800)) {
         output.writeBytes(13, aliceBaseKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -4353,7 +3793,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(13, aliceBaseKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -4425,47 +3865,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SessionStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getSenderChainFieldBuilder();
-          getReceiverChainsFieldBuilder();
-          getPendingKeyExchangeFieldBuilder();
-          getPendingPreKeyFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -4483,29 +3897,13 @@ public final class StorageProtos {
         bitField0_ = (bitField0_ & ~0x00000008);
         previousCounter_ = 0;
         bitField0_ = (bitField0_ & ~0x00000010);
-        if (senderChainBuilder_ == null) {
-          senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
-        } else {
-          senderChainBuilder_.clear();
-        }
+        senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000020);
-        if (receiverChainsBuilder_ == null) {
-          receiverChains_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000040);
-        } else {
-          receiverChainsBuilder_.clear();
-        }
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
-        } else {
-          pendingKeyExchangeBuilder_.clear();
-        }
+        receiverChains_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000040);
+        pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000080);
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
-        } else {
-          pendingPreKeyBuilder_.clear();
-        }
+        pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000100);
         remoteRegistrationId_ = 0;
         bitField0_ = (bitField0_ & ~0x00000200);
@@ -4522,11 +3920,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
       }
@@ -4566,36 +3959,20 @@ public final class StorageProtos {
         if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
           to_bitField0_ |= 0x00000020;
         }
-        if (senderChainBuilder_ == null) {
-          result.senderChain_ = senderChain_;
-        } else {
-          result.senderChain_ = senderChainBuilder_.build();
-        }
-        if (receiverChainsBuilder_ == null) {
-          if (((bitField0_ & 0x00000040) == 0x00000040)) {
-            receiverChains_ = java.util.Collections.unmodifiableList(receiverChains_);
-            bitField0_ = (bitField0_ & ~0x00000040);
-          }
-          result.receiverChains_ = receiverChains_;
-        } else {
-          result.receiverChains_ = receiverChainsBuilder_.build();
+        result.senderChain_ = senderChain_;
+        if (((bitField0_ & 0x00000040) == 0x00000040)) {
+          receiverChains_ = java.util.Collections.unmodifiableList(receiverChains_);
+          bitField0_ = (bitField0_ & ~0x00000040);
         }
+        result.receiverChains_ = receiverChains_;
         if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
           to_bitField0_ |= 0x00000040;
         }
-        if (pendingKeyExchangeBuilder_ == null) {
-          result.pendingKeyExchange_ = pendingKeyExchange_;
-        } else {
-          result.pendingKeyExchange_ = pendingKeyExchangeBuilder_.build();
-        }
+        result.pendingKeyExchange_ = pendingKeyExchange_;
         if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
           to_bitField0_ |= 0x00000080;
         }
-        if (pendingPreKeyBuilder_ == null) {
-          result.pendingPreKey_ = pendingPreKey_;
-        } else {
-          result.pendingPreKey_ = pendingPreKeyBuilder_.build();
-        }
+        result.pendingPreKey_ = pendingPreKey_;
         if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
           to_bitField0_ |= 0x00000100;
         }
@@ -4613,19 +3990,9 @@ public final class StorageProtos {
         }
         result.aliceBaseKey_ = aliceBaseKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance()) return this;
         if (other.hasSessionVersion()) {
@@ -4646,31 +4013,15 @@ public final class StorageProtos {
         if (other.hasSenderChain()) {
           mergeSenderChain(other.getSenderChain());
         }
-        if (receiverChainsBuilder_ == null) {
-          if (!other.receiverChains_.isEmpty()) {
-            if (receiverChains_.isEmpty()) {
-              receiverChains_ = other.receiverChains_;
-              bitField0_ = (bitField0_ & ~0x00000040);
-            } else {
-              ensureReceiverChainsIsMutable();
-              receiverChains_.addAll(other.receiverChains_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.receiverChains_.isEmpty()) {
-            if (receiverChainsBuilder_.isEmpty()) {
-              receiverChainsBuilder_.dispose();
-              receiverChainsBuilder_ = null;
-              receiverChains_ = other.receiverChains_;
-              bitField0_ = (bitField0_ & ~0x00000040);
-              receiverChainsBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getReceiverChainsFieldBuilder() : null;
-            } else {
-              receiverChainsBuilder_.addAllMessages(other.receiverChains_);
-            }
+        if (!other.receiverChains_.isEmpty()) {
+          if (receiverChains_.isEmpty()) {
+            receiverChains_ = other.receiverChains_;
+            bitField0_ = (bitField0_ & ~0x00000040);
+          } else {
+            ensureReceiverChainsIsMutable();
+            receiverChains_.addAll(other.receiverChains_);
           }
+          
         }
         if (other.hasPendingKeyExchange()) {
           mergePendingKeyExchange(other.getPendingKeyExchange());
@@ -4690,7 +4041,8 @@ public final class StorageProtos {
         if (other.hasAliceBaseKey()) {
           setAliceBaseKey(other.getAliceBaseKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -4717,7 +4069,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 sessionVersion = 1;
       private int sessionVersion_ ;
       /**
        * <code>optional uint32 sessionVersion = 1;</code>
@@ -4737,7 +4088,7 @@ public final class StorageProtos {
       public Builder setSessionVersion(int value) {
         bitField0_ |= 0x00000001;
         sessionVersion_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4746,11 +4097,10 @@ public final class StorageProtos {
       public Builder clearSessionVersion() {
         bitField0_ = (bitField0_ & ~0x00000001);
         sessionVersion_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes localIdentityPublic = 2;
       private com.google.protobuf.ByteString localIdentityPublic_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes localIdentityPublic = 2;</code>
@@ -4773,7 +4123,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         localIdentityPublic_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4782,11 +4132,10 @@ public final class StorageProtos {
       public Builder clearLocalIdentityPublic() {
         bitField0_ = (bitField0_ & ~0x00000002);
         localIdentityPublic_ = getDefaultInstance().getLocalIdentityPublic();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes remoteIdentityPublic = 3;
       private com.google.protobuf.ByteString remoteIdentityPublic_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes remoteIdentityPublic = 3;</code>
@@ -4809,7 +4158,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
         remoteIdentityPublic_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4818,11 +4167,10 @@ public final class StorageProtos {
       public Builder clearRemoteIdentityPublic() {
         bitField0_ = (bitField0_ & ~0x00000004);
         remoteIdentityPublic_ = getDefaultInstance().getRemoteIdentityPublic();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes rootKey = 4;
       private com.google.protobuf.ByteString rootKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes rootKey = 4;</code>
@@ -4845,7 +4193,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
         rootKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4854,11 +4202,10 @@ public final class StorageProtos {
       public Builder clearRootKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         rootKey_ = getDefaultInstance().getRootKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 previousCounter = 5;
       private int previousCounter_ ;
       /**
        * <code>optional uint32 previousCounter = 5;</code>
@@ -4878,7 +4225,7 @@ public final class StorageProtos {
       public Builder setPreviousCounter(int value) {
         bitField0_ |= 0x00000010;
         previousCounter_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4887,14 +4234,11 @@ public final class StorageProtos {
       public Builder clearPreviousCounter() {
         bitField0_ = (bitField0_ & ~0x00000010);
         previousCounter_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional .textsecure.SessionStructure.Chain senderChain = 6;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> senderChainBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
@@ -4905,25 +4249,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getSenderChain() {
-        if (senderChainBuilder_ == null) {
-          return senderChain_;
-        } else {
-          return senderChainBuilder_.getMessage();
-        }
+        return senderChain_;
       }
       /**
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public Builder setSenderChain(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (senderChainBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          senderChain_ = value;
-          onChanged();
-        } else {
-          senderChainBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        senderChain_ = value;
+
         bitField0_ |= 0x00000020;
         return this;
       }
@@ -4932,12 +4268,8 @@ public final class StorageProtos {
        */
       public Builder setSenderChain(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (senderChainBuilder_ == null) {
-          senderChain_ = builderForValue.build();
-          onChanged();
-        } else {
-          senderChainBuilder_.setMessage(builderForValue.build());
-        }
+        senderChain_ = builderForValue.build();
+
         bitField0_ |= 0x00000020;
         return this;
       }
@@ -4945,18 +4277,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public Builder mergeSenderChain(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (senderChainBuilder_ == null) {
-          if (((bitField0_ & 0x00000020) == 0x00000020) &&
-              senderChain_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance()) {
-            senderChain_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.newBuilder(senderChain_).mergeFrom(value).buildPartial();
-          } else {
-            senderChain_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000020) == 0x00000020) &&
+            senderChain_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance()) {
+          senderChain_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.newBuilder(senderChain_).mergeFrom(value).buildPartial();
         } else {
-          senderChainBuilder_.mergeFrom(value);
+          senderChain_ = value;
         }
+
         bitField0_ |= 0x00000020;
         return this;
       }
@@ -4964,51 +4292,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public Builder clearSenderChain() {
-        if (senderChainBuilder_ == null) {
-          senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
-          onChanged();
-        } else {
-          senderChainBuilder_.clear();
-        }
+        senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000020);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder getSenderChainBuilder() {
-        bitField0_ |= 0x00000020;
-        onChanged();
-        return getSenderChainFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getSenderChainOrBuilder() {
-        if (senderChainBuilder_ != null) {
-          return senderChainBuilder_.getMessageOrBuilder();
-        } else {
-          return senderChain_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-          getSenderChainFieldBuilder() {
-        if (senderChainBuilder_ == null) {
-          senderChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder>(
-                  senderChain_,
-                  getParentForChildren(),
-                  isClean());
-          senderChain_ = null;
-        }
-        return senderChainBuilder_;
-      }
 
-      // repeated .textsecure.SessionStructure.Chain receiverChains = 7;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> receiverChains_ =
         java.util.Collections.emptyList();
       private void ensureReceiverChainsIsMutable() {
@@ -5018,54 +4307,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> receiverChainsBuilder_;
-
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> getReceiverChainsList() {
-        if (receiverChainsBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(receiverChains_);
-        } else {
-          return receiverChainsBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(receiverChains_);
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public int getReceiverChainsCount() {
-        if (receiverChainsBuilder_ == null) {
-          return receiverChains_.size();
-        } else {
-          return receiverChainsBuilder_.getCount();
-        }
+        return receiverChains_.size();
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getReceiverChains(int index) {
-        if (receiverChainsBuilder_ == null) {
-          return receiverChains_.get(index);
-        } else {
-          return receiverChainsBuilder_.getMessage(index);
-        }
+        return receiverChains_.get(index);
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder setReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (receiverChainsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureReceiverChainsIsMutable();
-          receiverChains_.set(index, value);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.set(index, value);
+
         return this;
       }
       /**
@@ -5073,29 +4343,21 @@ public final class StorageProtos {
        */
       public Builder setReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          receiverChainsBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder addReceiverChains(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (receiverChainsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(value);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(value);
+
         return this;
       }
       /**
@@ -5103,16 +4365,12 @@ public final class StorageProtos {
        */
       public Builder addReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (receiverChainsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(index, value);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(index, value);
+
         return this;
       }
       /**
@@ -5120,13 +4378,9 @@ public final class StorageProtos {
        */
       public Builder addReceiverChains(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(builderForValue.build());
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(builderForValue.build());
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -5134,13 +4388,9 @@ public final class StorageProtos {
        */
       public Builder addReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -5148,110 +4398,32 @@ public final class StorageProtos {
        */
       public Builder addAllReceiverChains(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> values) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          super.addAll(values, receiverChains_);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addAllMessages(values);
-        }
+        ensureReceiverChainsIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, receiverChains_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder clearReceiverChains() {
-        if (receiverChainsBuilder_ == null) {
-          receiverChains_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000040);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.clear();
-        }
+        receiverChains_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000040);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder removeReceiverChains(int index) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.remove(index);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.remove(index);
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder getReceiverChainsBuilder(
-          int index) {
-        return getReceiverChainsFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getReceiverChainsOrBuilder(
-          int index) {
-        if (receiverChainsBuilder_ == null) {
-          return receiverChains_.get(index);  } else {
-          return receiverChainsBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-           getReceiverChainsOrBuilderList() {
-        if (receiverChainsBuilder_ != null) {
-          return receiverChainsBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(receiverChains_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder addReceiverChainsBuilder() {
-        return getReceiverChainsFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder addReceiverChainsBuilder(
-          int index) {
-        return getReceiverChainsFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder> 
-           getReceiverChainsBuilderList() {
-        return getReceiverChainsFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-          getReceiverChainsFieldBuilder() {
-        if (receiverChainsBuilder_ == null) {
-          receiverChainsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder>(
-                  receiverChains_,
-                  ((bitField0_ & 0x00000040) == 0x00000040),
-                  getParentForChildren(),
-                  isClean());
-          receiverChains_ = null;
-        }
-        return receiverChainsBuilder_;
-      }
 
-      // optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder> pendingKeyExchangeBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
@@ -5262,25 +4434,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getPendingKeyExchange() {
-        if (pendingKeyExchangeBuilder_ == null) {
-          return pendingKeyExchange_;
-        } else {
-          return pendingKeyExchangeBuilder_.getMessage();
-        }
+        return pendingKeyExchange_;
       }
       /**
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public Builder setPendingKeyExchange(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange value) {
-        if (pendingKeyExchangeBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          pendingKeyExchange_ = value;
-          onChanged();
-        } else {
-          pendingKeyExchangeBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        pendingKeyExchange_ = value;
+
         bitField0_ |= 0x00000080;
         return this;
       }
@@ -5289,12 +4453,8 @@ public final class StorageProtos {
        */
       public Builder setPendingKeyExchange(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder builderForValue) {
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchange_ = builderForValue.build();
-          onChanged();
-        } else {
-          pendingKeyExchangeBuilder_.setMessage(builderForValue.build());
-        }
+        pendingKeyExchange_ = builderForValue.build();
+
         bitField0_ |= 0x00000080;
         return this;
       }
@@ -5302,18 +4462,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public Builder mergePendingKeyExchange(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange value) {
-        if (pendingKeyExchangeBuilder_ == null) {
-          if (((bitField0_ & 0x00000080) == 0x00000080) &&
-              pendingKeyExchange_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance()) {
-            pendingKeyExchange_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.newBuilder(pendingKeyExchange_).mergeFrom(value).buildPartial();
-          } else {
-            pendingKeyExchange_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000080) == 0x00000080) &&
+            pendingKeyExchange_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance()) {
+          pendingKeyExchange_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.newBuilder(pendingKeyExchange_).mergeFrom(value).buildPartial();
         } else {
-          pendingKeyExchangeBuilder_.mergeFrom(value);
+          pendingKeyExchange_ = value;
         }
+
         bitField0_ |= 0x00000080;
         return this;
       }
@@ -5321,54 +4477,13 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public Builder clearPendingKeyExchange() {
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
-          onChanged();
-        } else {
-          pendingKeyExchangeBuilder_.clear();
-        }
+        pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000080);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder getPendingKeyExchangeBuilder() {
-        bitField0_ |= 0x00000080;
-        onChanged();
-        return getPendingKeyExchangeFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder getPendingKeyExchangeOrBuilder() {
-        if (pendingKeyExchangeBuilder_ != null) {
-          return pendingKeyExchangeBuilder_.getMessageOrBuilder();
-        } else {
-          return pendingKeyExchange_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder> 
-          getPendingKeyExchangeFieldBuilder() {
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder>(
-                  pendingKeyExchange_,
-                  getParentForChildren(),
-                  isClean());
-          pendingKeyExchange_ = null;
-        }
-        return pendingKeyExchangeBuilder_;
-      }
 
-      // optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder> pendingPreKeyBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
@@ -5379,25 +4494,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getPendingPreKey() {
-        if (pendingPreKeyBuilder_ == null) {
-          return pendingPreKey_;
-        } else {
-          return pendingPreKeyBuilder_.getMessage();
-        }
+        return pendingPreKey_;
       }
       /**
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public Builder setPendingPreKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey value) {
-        if (pendingPreKeyBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          pendingPreKey_ = value;
-          onChanged();
-        } else {
-          pendingPreKeyBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        pendingPreKey_ = value;
+
         bitField0_ |= 0x00000100;
         return this;
       }
@@ -5406,12 +4513,8 @@ public final class StorageProtos {
        */
       public Builder setPendingPreKey(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder builderForValue) {
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKey_ = builderForValue.build();
-          onChanged();
-        } else {
-          pendingPreKeyBuilder_.setMessage(builderForValue.build());
-        }
+        pendingPreKey_ = builderForValue.build();
+
         bitField0_ |= 0x00000100;
         return this;
       }
@@ -5419,18 +4522,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public Builder mergePendingPreKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey value) {
-        if (pendingPreKeyBuilder_ == null) {
-          if (((bitField0_ & 0x00000100) == 0x00000100) &&
-              pendingPreKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance()) {
-            pendingPreKey_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.newBuilder(pendingPreKey_).mergeFrom(value).buildPartial();
-          } else {
-            pendingPreKey_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000100) == 0x00000100) &&
+            pendingPreKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance()) {
+          pendingPreKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.newBuilder(pendingPreKey_).mergeFrom(value).buildPartial();
         } else {
-          pendingPreKeyBuilder_.mergeFrom(value);
+          pendingPreKey_ = value;
         }
+
         bitField0_ |= 0x00000100;
         return this;
       }
@@ -5438,51 +4537,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public Builder clearPendingPreKey() {
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
-          onChanged();
-        } else {
-          pendingPreKeyBuilder_.clear();
-        }
+        pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000100);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder getPendingPreKeyBuilder() {
-        bitField0_ |= 0x00000100;
-        onChanged();
-        return getPendingPreKeyFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder getPendingPreKeyOrBuilder() {
-        if (pendingPreKeyBuilder_ != null) {
-          return pendingPreKeyBuilder_.getMessageOrBuilder();
-        } else {
-          return pendingPreKey_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder> 
-          getPendingPreKeyFieldBuilder() {
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder>(
-                  pendingPreKey_,
-                  getParentForChildren(),
-                  isClean());
-          pendingPreKey_ = null;
-        }
-        return pendingPreKeyBuilder_;
-      }
 
-      // optional uint32 remoteRegistrationId = 10;
       private int remoteRegistrationId_ ;
       /**
        * <code>optional uint32 remoteRegistrationId = 10;</code>
@@ -5502,7 +4562,7 @@ public final class StorageProtos {
       public Builder setRemoteRegistrationId(int value) {
         bitField0_ |= 0x00000200;
         remoteRegistrationId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5511,11 +4571,10 @@ public final class StorageProtos {
       public Builder clearRemoteRegistrationId() {
         bitField0_ = (bitField0_ & ~0x00000200);
         remoteRegistrationId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 localRegistrationId = 11;
       private int localRegistrationId_ ;
       /**
        * <code>optional uint32 localRegistrationId = 11;</code>
@@ -5535,7 +4594,7 @@ public final class StorageProtos {
       public Builder setLocalRegistrationId(int value) {
         bitField0_ |= 0x00000400;
         localRegistrationId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5544,11 +4603,10 @@ public final class StorageProtos {
       public Builder clearLocalRegistrationId() {
         bitField0_ = (bitField0_ & ~0x00000400);
         localRegistrationId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bool needsRefresh = 12;
       private boolean needsRefresh_ ;
       /**
        * <code>optional bool needsRefresh = 12;</code>
@@ -5568,7 +4626,7 @@ public final class StorageProtos {
       public Builder setNeedsRefresh(boolean value) {
         bitField0_ |= 0x00000800;
         needsRefresh_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5577,11 +4635,10 @@ public final class StorageProtos {
       public Builder clearNeedsRefresh() {
         bitField0_ = (bitField0_ & ~0x00000800);
         needsRefresh_ = false;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes aliceBaseKey = 13;
       private com.google.protobuf.ByteString aliceBaseKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes aliceBaseKey = 13;</code>
@@ -5604,7 +4661,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00001000;
         aliceBaseKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5613,7 +4670,7 @@ public final class StorageProtos {
       public Builder clearAliceBaseKey() {
         bitField0_ = (bitField0_ & ~0x00001000);
         aliceBaseKey_ = getDefaultInstance().getAliceBaseKey();
-        onChanged();
+        
         return this;
       }
 
@@ -5628,10 +4685,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SessionStructure)
   }
 
-  public interface RecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface RecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.RecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional .textsecure.SessionStructure currentSession = 1;
     /**
      * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
      */
@@ -5640,12 +4697,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure getCurrentSession();
-    /**
-     * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getCurrentSessionOrBuilder();
 
-    // repeated .textsecure.SessionStructure previousSessions = 2;
     /**
      * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
      */
@@ -5659,29 +4711,20 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
      */
     int getPreviousSessionsCount();
-    /**
-     * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-        getPreviousSessionsOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getPreviousSessionsOrBuilder(
-        int index);
   }
   /**
    * Protobuf type {@code textsecure.RecordStructure}
    */
   public static final class RecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements RecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.RecordStructure)
+      RecordStructureOrBuilder {
     // Use RecordStructure.newBuilder() to construct.
-    private RecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private RecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private RecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private RecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final RecordStructure defaultInstance;
     public static RecordStructure getDefaultInstance() {
@@ -5692,20 +4735,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private RecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -5715,7 +4756,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -5753,22 +4794,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
           previousSessions_ = java.util.Collections.unmodifiableList(previousSessions_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.RecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.RecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<RecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<RecordStructure>() {
       public RecordStructure parsePartialFrom(
@@ -5785,7 +4820,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional .textsecure.SessionStructure currentSession = 1;
     public static final int CURRENTSESSION_FIELD_NUMBER = 1;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure currentSession_;
     /**
@@ -5800,14 +4834,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getCurrentSession() {
       return currentSession_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getCurrentSessionOrBuilder() {
-      return currentSession_;
-    }
 
-    // repeated .textsecure.SessionStructure previousSessions = 2;
     public static final int PREVIOUSSESSIONS_FIELD_NUMBER = 2;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure> previousSessions_;
     /**
@@ -5850,7 +4877,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -5865,7 +4893,7 @@ public final class StorageProtos {
       for (int i = 0; i < previousSessions_.size(); i++) {
         output.writeMessage(2, previousSessions_.get(i));
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -5882,7 +4910,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(2, previousSessions_.get(i));
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -5954,45 +4982,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.RecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.RecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.RecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.RecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.RecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.RecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.RecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.RecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getCurrentSessionFieldBuilder();
-          getPreviousSessionsFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -6000,18 +5004,10 @@ public final class StorageProtos {
 
       public Builder clear() {
         super.clear();
-        if (currentSessionBuilder_ == null) {
-          currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
-        } else {
-          currentSessionBuilder_.clear();
-        }
+        currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000001);
-        if (previousSessionsBuilder_ == null) {
-          previousSessions_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000002);
-        } else {
-          previousSessionsBuilder_.clear();
-        }
+        previousSessions_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
         return this;
       }
 
@@ -6019,11 +5015,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.RecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.RecordStructure.getDefaultInstance();
       }
@@ -6043,66 +5034,33 @@ public final class StorageProtos {
         if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
           to_bitField0_ |= 0x00000001;
         }
-        if (currentSessionBuilder_ == null) {
-          result.currentSession_ = currentSession_;
-        } else {
-          result.currentSession_ = currentSessionBuilder_.build();
-        }
-        if (previousSessionsBuilder_ == null) {
-          if (((bitField0_ & 0x00000002) == 0x00000002)) {
-            previousSessions_ = java.util.Collections.unmodifiableList(previousSessions_);
-            bitField0_ = (bitField0_ & ~0x00000002);
-          }
-          result.previousSessions_ = previousSessions_;
-        } else {
-          result.previousSessions_ = previousSessionsBuilder_.build();
+        result.currentSession_ = currentSession_;
+        if (((bitField0_ & 0x00000002) == 0x00000002)) {
+          previousSessions_ = java.util.Collections.unmodifiableList(previousSessions_);
+          bitField0_ = (bitField0_ & ~0x00000002);
         }
+        result.previousSessions_ = previousSessions_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.RecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.RecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.RecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.RecordStructure.getDefaultInstance()) return this;
         if (other.hasCurrentSession()) {
           mergeCurrentSession(other.getCurrentSession());
         }
-        if (previousSessionsBuilder_ == null) {
-          if (!other.previousSessions_.isEmpty()) {
-            if (previousSessions_.isEmpty()) {
-              previousSessions_ = other.previousSessions_;
-              bitField0_ = (bitField0_ & ~0x00000002);
-            } else {
-              ensurePreviousSessionsIsMutable();
-              previousSessions_.addAll(other.previousSessions_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.previousSessions_.isEmpty()) {
-            if (previousSessionsBuilder_.isEmpty()) {
-              previousSessionsBuilder_.dispose();
-              previousSessionsBuilder_ = null;
-              previousSessions_ = other.previousSessions_;
-              bitField0_ = (bitField0_ & ~0x00000002);
-              previousSessionsBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getPreviousSessionsFieldBuilder() : null;
-            } else {
-              previousSessionsBuilder_.addAllMessages(other.previousSessions_);
-            }
+        if (!other.previousSessions_.isEmpty()) {
+          if (previousSessions_.isEmpty()) {
+            previousSessions_ = other.previousSessions_;
+            bitField0_ = (bitField0_ & ~0x00000002);
+          } else {
+            ensurePreviousSessionsIsMutable();
+            previousSessions_.addAll(other.previousSessions_);
           }
+          
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -6129,10 +5087,7 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional .textsecure.SessionStructure currentSession = 1;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> currentSessionBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
@@ -6143,25 +5098,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getCurrentSession() {
-        if (currentSessionBuilder_ == null) {
-          return currentSession_;
-        } else {
-          return currentSessionBuilder_.getMessage();
-        }
+        return currentSession_;
       }
       /**
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public Builder setCurrentSession(org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (currentSessionBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          currentSession_ = value;
-          onChanged();
-        } else {
-          currentSessionBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        currentSession_ = value;
+
         bitField0_ |= 0x00000001;
         return this;
       }
@@ -6170,12 +5117,8 @@ public final class StorageProtos {
        */
       public Builder setCurrentSession(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (currentSessionBuilder_ == null) {
-          currentSession_ = builderForValue.build();
-          onChanged();
-        } else {
-          currentSessionBuilder_.setMessage(builderForValue.build());
-        }
+        currentSession_ = builderForValue.build();
+
         bitField0_ |= 0x00000001;
         return this;
       }
@@ -6183,18 +5126,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public Builder mergeCurrentSession(org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (currentSessionBuilder_ == null) {
-          if (((bitField0_ & 0x00000001) == 0x00000001) &&
-              currentSession_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance()) {
-            currentSession_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.newBuilder(currentSession_).mergeFrom(value).buildPartial();
-          } else {
-            currentSession_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000001) == 0x00000001) &&
+            currentSession_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance()) {
+          currentSession_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.newBuilder(currentSession_).mergeFrom(value).buildPartial();
         } else {
-          currentSessionBuilder_.mergeFrom(value);
+          currentSession_ = value;
         }
+
         bitField0_ |= 0x00000001;
         return this;
       }
@@ -6202,51 +5141,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public Builder clearCurrentSession() {
-        if (currentSessionBuilder_ == null) {
-          currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
-          onChanged();
-        } else {
-          currentSessionBuilder_.clear();
-        }
+        currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000001);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder getCurrentSessionBuilder() {
-        bitField0_ |= 0x00000001;
-        onChanged();
-        return getCurrentSessionFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getCurrentSessionOrBuilder() {
-        if (currentSessionBuilder_ != null) {
-          return currentSessionBuilder_.getMessageOrBuilder();
-        } else {
-          return currentSession_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-          getCurrentSessionFieldBuilder() {
-        if (currentSessionBuilder_ == null) {
-          currentSessionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder>(
-                  currentSession_,
-                  getParentForChildren(),
-                  isClean());
-          currentSession_ = null;
-        }
-        return currentSessionBuilder_;
-      }
 
-      // repeated .textsecure.SessionStructure previousSessions = 2;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure> previousSessions_ =
         java.util.Collections.emptyList();
       private void ensurePreviousSessionsIsMutable() {
@@ -6256,54 +5156,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> previousSessionsBuilder_;
-
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure> getPreviousSessionsList() {
-        if (previousSessionsBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(previousSessions_);
-        } else {
-          return previousSessionsBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(previousSessions_);
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public int getPreviousSessionsCount() {
-        if (previousSessionsBuilder_ == null) {
-          return previousSessions_.size();
-        } else {
-          return previousSessionsBuilder_.getCount();
-        }
+        return previousSessions_.size();
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getPreviousSessions(int index) {
-        if (previousSessionsBuilder_ == null) {
-          return previousSessions_.get(index);
-        } else {
-          return previousSessionsBuilder_.getMessage(index);
-        }
+        return previousSessions_.get(index);
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder setPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (previousSessionsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.set(index, value);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.set(index, value);
+
         return this;
       }
       /**
@@ -6311,29 +5192,21 @@ public final class StorageProtos {
        */
       public Builder setPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          previousSessionsBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder addPreviousSessions(org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (previousSessionsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(value);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(value);
+
         return this;
       }
       /**
@@ -6341,16 +5214,12 @@ public final class StorageProtos {
        */
       public Builder addPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (previousSessionsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(index, value);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(index, value);
+
         return this;
       }
       /**
@@ -6358,13 +5227,9 @@ public final class StorageProtos {
        */
       public Builder addPreviousSessions(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(builderForValue.build());
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(builderForValue.build());
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -6372,13 +5237,9 @@ public final class StorageProtos {
        */
       public Builder addPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -6386,105 +5247,30 @@ public final class StorageProtos {
        */
       public Builder addAllPreviousSessions(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure> values) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          super.addAll(values, previousSessions_);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addAllMessages(values);
-        }
+        ensurePreviousSessionsIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, previousSessions_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder clearPreviousSessions() {
-        if (previousSessionsBuilder_ == null) {
-          previousSessions_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000002);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.clear();
-        }
+        previousSessions_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder removePreviousSessions(int index) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.remove(index);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.remove(index);
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder getPreviousSessionsBuilder(
-          int index) {
-        return getPreviousSessionsFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getPreviousSessionsOrBuilder(
-          int index) {
-        if (previousSessionsBuilder_ == null) {
-          return previousSessions_.get(index);  } else {
-          return previousSessionsBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-           getPreviousSessionsOrBuilderList() {
-        if (previousSessionsBuilder_ != null) {
-          return previousSessionsBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(previousSessions_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder addPreviousSessionsBuilder() {
-        return getPreviousSessionsFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder addPreviousSessionsBuilder(
-          int index) {
-        return getPreviousSessionsFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder> 
-           getPreviousSessionsBuilderList() {
-        return getPreviousSessionsFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-          getPreviousSessionsFieldBuilder() {
-        if (previousSessionsBuilder_ == null) {
-          previousSessionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder>(
-                  previousSessions_,
-                  ((bitField0_ & 0x00000002) == 0x00000002),
-                  getParentForChildren(),
-                  isClean());
-          previousSessions_ = null;
-        }
-        return previousSessionsBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.RecordStructure)
     }
@@ -6497,10 +5283,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.RecordStructure)
   }
 
-  public interface PreKeyRecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface PreKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.PreKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -6510,7 +5296,6 @@ public final class StorageProtos {
      */
     int getId();
 
-    // optional bytes publicKey = 2;
     /**
      * <code>optional bytes publicKey = 2;</code>
      */
@@ -6520,7 +5305,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes privateKey = 3;
     /**
      * <code>optional bytes privateKey = 3;</code>
      */
@@ -6534,14 +5318,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.PreKeyRecordStructure}
    */
   public static final class PreKeyRecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements PreKeyRecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.PreKeyRecordStructure)
+      PreKeyRecordStructureOrBuilder {
     // Use PreKeyRecordStructure.newBuilder() to construct.
-    private PreKeyRecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private PreKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private PreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private PreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final PreKeyRecordStructure defaultInstance;
     public static PreKeyRecordStructure getDefaultInstance() {
@@ -6552,20 +5337,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private PreKeyRecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -6575,7 +5358,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -6604,22 +5387,16 @@ public final class StorageProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<PreKeyRecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<PreKeyRecordStructure>() {
       public PreKeyRecordStructure parsePartialFrom(
@@ -6636,7 +5413,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -6652,7 +5428,6 @@ public final class StorageProtos {
       return id_;
     }
 
-    // optional bytes publicKey = 2;
     public static final int PUBLICKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -6668,7 +5443,6 @@ public final class StorageProtos {
       return publicKey_;
     }
 
-    // optional bytes privateKey = 3;
     public static final int PRIVATEKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString privateKey_;
     /**
@@ -6692,7 +5466,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -6710,7 +5485,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeBytes(3, privateKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -6731,7 +5506,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(3, privateKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -6803,43 +5578,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.PreKeyRecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.PreKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -6860,11 +5613,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.getDefaultInstance();
       }
@@ -6894,19 +5642,9 @@ public final class StorageProtos {
         }
         result.privateKey_ = privateKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -6918,7 +5656,8 @@ public final class StorageProtos {
         if (other.hasPrivateKey()) {
           setPrivateKey(other.getPrivateKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -6945,7 +5684,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -6965,7 +5703,7 @@ public final class StorageProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -6974,11 +5712,10 @@ public final class StorageProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes publicKey = 2;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 2;</code>
@@ -7001,7 +5738,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7010,11 +5747,10 @@ public final class StorageProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes privateKey = 3;
       private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes privateKey = 3;</code>
@@ -7037,7 +5773,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
         privateKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7046,7 +5782,7 @@ public final class StorageProtos {
       public Builder clearPrivateKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         privateKey_ = getDefaultInstance().getPrivateKey();
-        onChanged();
+        
         return this;
       }
 
@@ -7061,10 +5797,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.PreKeyRecordStructure)
   }
 
-  public interface SignedPreKeyRecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SignedPreKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SignedPreKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -7074,7 +5810,6 @@ public final class StorageProtos {
      */
     int getId();
 
-    // optional bytes publicKey = 2;
     /**
      * <code>optional bytes publicKey = 2;</code>
      */
@@ -7084,7 +5819,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes privateKey = 3;
     /**
      * <code>optional bytes privateKey = 3;</code>
      */
@@ -7094,7 +5828,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPrivateKey();
 
-    // optional bytes signature = 4;
     /**
      * <code>optional bytes signature = 4;</code>
      */
@@ -7104,7 +5837,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getSignature();
 
-    // optional fixed64 timestamp = 5;
     /**
      * <code>optional fixed64 timestamp = 5;</code>
      */
@@ -7118,14 +5850,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.SignedPreKeyRecordStructure}
    */
   public static final class SignedPreKeyRecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SignedPreKeyRecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SignedPreKeyRecordStructure)
+      SignedPreKeyRecordStructureOrBuilder {
     // Use SignedPreKeyRecordStructure.newBuilder() to construct.
-    private SignedPreKeyRecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SignedPreKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SignedPreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SignedPreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SignedPreKeyRecordStructure defaultInstance;
     public static SignedPreKeyRecordStructure getDefaultInstance() {
@@ -7136,20 +5869,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SignedPreKeyRecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -7159,7 +5890,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -7198,22 +5929,16 @@ public final class StorageProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SignedPreKeyRecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<SignedPreKeyRecordStructure>() {
       public SignedPreKeyRecordStructure parsePartialFrom(
@@ -7230,7 +5955,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -7246,7 +5970,6 @@ public final class StorageProtos {
       return id_;
     }
 
-    // optional bytes publicKey = 2;
     public static final int PUBLICKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -7262,7 +5985,6 @@ public final class StorageProtos {
       return publicKey_;
     }
 
-    // optional bytes privateKey = 3;
     public static final int PRIVATEKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString privateKey_;
     /**
@@ -7278,7 +6000,6 @@ public final class StorageProtos {
       return privateKey_;
     }
 
-    // optional bytes signature = 4;
     public static final int SIGNATURE_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString signature_;
     /**
@@ -7294,7 +6015,6 @@ public final class StorageProtos {
       return signature_;
     }
 
-    // optional fixed64 timestamp = 5;
     public static final int TIMESTAMP_FIELD_NUMBER = 5;
     private long timestamp_;
     /**
@@ -7320,7 +6040,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -7344,7 +6065,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000010) == 0x00000010)) {
         output.writeFixed64(5, timestamp_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -7373,7 +6094,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeFixed64Size(5, timestamp_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -7445,43 +6166,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SignedPreKeyRecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SignedPreKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -7506,11 +6205,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.getDefaultInstance();
       }
@@ -7548,19 +6242,9 @@ public final class StorageProtos {
         }
         result.timestamp_ = timestamp_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -7578,7 +6262,8 @@ public final class StorageProtos {
         if (other.hasTimestamp()) {
           setTimestamp(other.getTimestamp());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -7605,7 +6290,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -7625,7 +6309,7 @@ public final class StorageProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7634,11 +6318,10 @@ public final class StorageProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes publicKey = 2;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 2;</code>
@@ -7661,7 +6344,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7670,11 +6353,10 @@ public final class StorageProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes privateKey = 3;
       private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes privateKey = 3;</code>
@@ -7697,7 +6379,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
         privateKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7706,11 +6388,10 @@ public final class StorageProtos {
       public Builder clearPrivateKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         privateKey_ = getDefaultInstance().getPrivateKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes signature = 4;
       private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes signature = 4;</code>
@@ -7733,7 +6414,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
         signature_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7742,11 +6423,10 @@ public final class StorageProtos {
       public Builder clearSignature() {
         bitField0_ = (bitField0_ & ~0x00000008);
         signature_ = getDefaultInstance().getSignature();
-        onChanged();
+        
         return this;
       }
 
-      // optional fixed64 timestamp = 5;
       private long timestamp_ ;
       /**
        * <code>optional fixed64 timestamp = 5;</code>
@@ -7766,7 +6446,7 @@ public final class StorageProtos {
       public Builder setTimestamp(long value) {
         bitField0_ |= 0x00000010;
         timestamp_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7775,7 +6455,7 @@ public final class StorageProtos {
       public Builder clearTimestamp() {
         bitField0_ = (bitField0_ & ~0x00000010);
         timestamp_ = 0L;
-        onChanged();
+        
         return this;
       }
 
@@ -7790,10 +6470,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SignedPreKeyRecordStructure)
   }
 
-  public interface IdentityKeyPairStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface IdentityKeyPairStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.IdentityKeyPairStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional bytes publicKey = 1;
     /**
      * <code>optional bytes publicKey = 1;</code>
      */
@@ -7803,7 +6483,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes privateKey = 2;
     /**
      * <code>optional bytes privateKey = 2;</code>
      */
@@ -7817,14 +6496,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.IdentityKeyPairStructure}
    */
   public static final class IdentityKeyPairStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements IdentityKeyPairStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.IdentityKeyPairStructure)
+      IdentityKeyPairStructureOrBuilder {
     // Use IdentityKeyPairStructure.newBuilder() to construct.
-    private IdentityKeyPairStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private IdentityKeyPairStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private IdentityKeyPairStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private IdentityKeyPairStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final IdentityKeyPairStructure defaultInstance;
     public static IdentityKeyPairStructure getDefaultInstance() {
@@ -7835,20 +6515,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private IdentityKeyPairStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -7858,7 +6536,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -7882,22 +6560,16 @@ public final class StorageProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
-        makeExtensionsImmutable();
-      }
-    }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.class, org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.Builder.class);
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
     }
-
     public static com.google.protobuf.Parser<IdentityKeyPairStructure> PARSER =
         new com.google.protobuf.AbstractParser<IdentityKeyPairStructure>() {
       public IdentityKeyPairStructure parsePartialFrom(
@@ -7914,7 +6586,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional bytes publicKey = 1;
     public static final int PUBLICKEY_FIELD_NUMBER = 1;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -7930,7 +6601,6 @@ public final class StorageProtos {
       return publicKey_;
     }
 
-    // optional bytes privateKey = 2;
     public static final int PRIVATEKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString privateKey_;
     /**
@@ -7953,7 +6623,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -7968,7 +6639,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
         output.writeBytes(2, privateKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -7985,7 +6656,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(2, privateKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -8057,43 +6728,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.IdentityKeyPairStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.class, org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.IdentityKeyPairStructure)
+        org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -8112,11 +6761,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.getDefaultInstance();
       }
@@ -8142,19 +6786,9 @@ public final class StorageProtos {
         }
         result.privateKey_ = privateKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.getDefaultInstance()) return this;
         if (other.hasPublicKey()) {
@@ -8163,7 +6797,8 @@ public final class StorageProtos {
         if (other.hasPrivateKey()) {
           setPrivateKey(other.getPrivateKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -8190,7 +6825,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional bytes publicKey = 1;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 1;</code>
@@ -8213,7 +6847,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000001;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -8222,11 +6856,10 @@ public final class StorageProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000001);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes privateKey = 2;
       private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes privateKey = 2;</code>
@@ -8249,7 +6882,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         privateKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -8258,7 +6891,7 @@ public final class StorageProtos {
       public Builder clearPrivateKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         privateKey_ = getDefaultInstance().getPrivateKey();
-        onChanged();
+        
         return this;
       }
 
@@ -8273,10 +6906,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.IdentityKeyPairStructure)
   }
 
-  public interface SenderKeyStateStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyStateStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 senderKeyId = 1;
     /**
      * <code>optional uint32 senderKeyId = 1;</code>
      */
@@ -8286,7 +6919,6 @@ public final class StorageProtos {
      */
     int getSenderKeyId();
 
-    // optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;
     /**
      * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
      */
@@ -8295,12 +6927,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKey();
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeyOrBuilder();
 
-    // optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;
     /**
      * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
      */
@@ -8309,12 +6936,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey();
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder getSenderSigningKeyOrBuilder();
 
-    // repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;
     /**
      * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
      */
@@ -8328,29 +6950,20 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
      */
     int getSenderMessageKeysCount();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> 
-        getSenderMessageKeysOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder getSenderMessageKeysOrBuilder(
-        int index);
   }
   /**
    * Protobuf type {@code textsecure.SenderKeyStateStructure}
    */
   public static final class SenderKeyStateStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyStateStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure)
+      SenderKeyStateStructureOrBuilder {
     // Use SenderKeyStateStructure.newBuilder() to construct.
-    private SenderKeyStateStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyStateStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyStateStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyStateStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyStateStructure defaultInstance;
     public static SenderKeyStateStructure getDefaultInstance() {
@@ -8361,20 +6974,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyStateStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -8384,7 +6995,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -8440,22 +7051,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
           senderMessageKeys_ = java.util.Collections.unmodifiableList(senderMessageKeys_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyStateStructure> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyStateStructure>() {
       public SenderKeyStateStructure parsePartialFrom(
@@ -8471,10 +7076,10 @@ public final class StorageProtos {
       return PARSER;
     }
 
-    public interface SenderChainKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface SenderChainKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure.SenderChainKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 iteration = 1;
       /**
        * <code>optional uint32 iteration = 1;</code>
        */
@@ -8484,7 +7089,6 @@ public final class StorageProtos {
        */
       int getIteration();
 
-      // optional bytes seed = 2;
       /**
        * <code>optional bytes seed = 2;</code>
        */
@@ -8498,14 +7102,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderChainKey}
      */
     public static final class SenderChainKey extends
-        com.google.protobuf.GeneratedMessage
-        implements SenderChainKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure.SenderChainKey)
+        SenderChainKeyOrBuilder {
       // Use SenderChainKey.newBuilder() to construct.
-      private SenderChainKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private SenderChainKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private SenderChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private SenderChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final SenderChainKey defaultInstance;
       public static SenderChainKey getDefaultInstance() {
@@ -8516,20 +7121,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private SenderChainKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -8539,7 +7142,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -8563,22 +7166,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<SenderChainKey> PARSER =
           new com.google.protobuf.AbstractParser<SenderChainKey>() {
         public SenderChainKey parsePartialFrom(
@@ -8595,7 +7192,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 iteration = 1;
       public static final int ITERATION_FIELD_NUMBER = 1;
       private int iteration_;
       /**
@@ -8611,7 +7207,6 @@ public final class StorageProtos {
         return iteration_;
       }
 
-      // optional bytes seed = 2;
       public static final int SEED_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString seed_;
       /**
@@ -8634,7 +7229,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -8649,7 +7245,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeBytes(2, seed_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -8666,7 +7262,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(2, seed_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -8738,43 +7334,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderChainKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure.SenderChainKey)
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -8793,11 +7367,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
         }
@@ -8823,19 +7392,9 @@ public final class StorageProtos {
           }
           result.seed_ = seed_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance()) return this;
           if (other.hasIteration()) {
@@ -8844,7 +7403,8 @@ public final class StorageProtos {
           if (other.hasSeed()) {
             setSeed(other.getSeed());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -8871,7 +7431,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 iteration = 1;
         private int iteration_ ;
         /**
          * <code>optional uint32 iteration = 1;</code>
@@ -8891,7 +7450,7 @@ public final class StorageProtos {
         public Builder setIteration(int value) {
           bitField0_ |= 0x00000001;
           iteration_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -8900,11 +7459,10 @@ public final class StorageProtos {
         public Builder clearIteration() {
           bitField0_ = (bitField0_ & ~0x00000001);
           iteration_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes seed = 2;
         private com.google.protobuf.ByteString seed_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes seed = 2;</code>
@@ -8927,7 +7485,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           seed_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -8936,7 +7494,7 @@ public final class StorageProtos {
         public Builder clearSeed() {
           bitField0_ = (bitField0_ & ~0x00000002);
           seed_ = getDefaultInstance().getSeed();
-          onChanged();
+          
           return this;
         }
 
@@ -8951,10 +7509,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SenderKeyStateStructure.SenderChainKey)
     }
 
-    public interface SenderMessageKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface SenderMessageKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure.SenderMessageKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 iteration = 1;
       /**
        * <code>optional uint32 iteration = 1;</code>
        */
@@ -8964,7 +7522,6 @@ public final class StorageProtos {
        */
       int getIteration();
 
-      // optional bytes seed = 2;
       /**
        * <code>optional bytes seed = 2;</code>
        */
@@ -8978,14 +7535,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderMessageKey}
      */
     public static final class SenderMessageKey extends
-        com.google.protobuf.GeneratedMessage
-        implements SenderMessageKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure.SenderMessageKey)
+        SenderMessageKeyOrBuilder {
       // Use SenderMessageKey.newBuilder() to construct.
-      private SenderMessageKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private SenderMessageKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private SenderMessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private SenderMessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final SenderMessageKey defaultInstance;
       public static SenderMessageKey getDefaultInstance() {
@@ -8996,20 +7554,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private SenderMessageKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -9019,7 +7575,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -9043,22 +7599,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<SenderMessageKey> PARSER =
           new com.google.protobuf.AbstractParser<SenderMessageKey>() {
         public SenderMessageKey parsePartialFrom(
@@ -9075,7 +7625,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 iteration = 1;
       public static final int ITERATION_FIELD_NUMBER = 1;
       private int iteration_;
       /**
@@ -9091,7 +7640,6 @@ public final class StorageProtos {
         return iteration_;
       }
 
-      // optional bytes seed = 2;
       public static final int SEED_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString seed_;
       /**
@@ -9114,7 +7662,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -9129,7 +7678,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeBytes(2, seed_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -9146,7 +7695,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(2, seed_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -9218,43 +7767,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderMessageKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure.SenderMessageKey)
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -9273,11 +7800,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance();
         }
@@ -9303,19 +7825,9 @@ public final class StorageProtos {
           }
           result.seed_ = seed_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance()) return this;
           if (other.hasIteration()) {
@@ -9324,7 +7836,8 @@ public final class StorageProtos {
           if (other.hasSeed()) {
             setSeed(other.getSeed());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -9351,7 +7864,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 iteration = 1;
         private int iteration_ ;
         /**
          * <code>optional uint32 iteration = 1;</code>
@@ -9371,7 +7883,7 @@ public final class StorageProtos {
         public Builder setIteration(int value) {
           bitField0_ |= 0x00000001;
           iteration_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9380,11 +7892,10 @@ public final class StorageProtos {
         public Builder clearIteration() {
           bitField0_ = (bitField0_ & ~0x00000001);
           iteration_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes seed = 2;
         private com.google.protobuf.ByteString seed_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes seed = 2;</code>
@@ -9407,7 +7918,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           seed_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9416,7 +7927,7 @@ public final class StorageProtos {
         public Builder clearSeed() {
           bitField0_ = (bitField0_ & ~0x00000002);
           seed_ = getDefaultInstance().getSeed();
-          onChanged();
+          
           return this;
         }
 
@@ -9431,10 +7942,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SenderKeyStateStructure.SenderMessageKey)
     }
 
-    public interface SenderSigningKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface SenderSigningKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure.SenderSigningKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional bytes public = 1;
       /**
        * <code>optional bytes public = 1;</code>
        */
@@ -9444,7 +7955,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getPublic();
 
-      // optional bytes private = 2;
       /**
        * <code>optional bytes private = 2;</code>
        */
@@ -9458,14 +7968,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderSigningKey}
      */
     public static final class SenderSigningKey extends
-        com.google.protobuf.GeneratedMessage
-        implements SenderSigningKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure.SenderSigningKey)
+        SenderSigningKeyOrBuilder {
       // Use SenderSigningKey.newBuilder() to construct.
-      private SenderSigningKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private SenderSigningKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private SenderSigningKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private SenderSigningKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final SenderSigningKey defaultInstance;
       public static SenderSigningKey getDefaultInstance() {
@@ -9476,20 +7987,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private SenderSigningKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -9499,7 +8008,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -9523,22 +8032,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<SenderSigningKey> PARSER =
           new com.google.protobuf.AbstractParser<SenderSigningKey>() {
         public SenderSigningKey parsePartialFrom(
@@ -9555,7 +8058,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional bytes public = 1;
       public static final int PUBLIC_FIELD_NUMBER = 1;
       private com.google.protobuf.ByteString public_;
       /**
@@ -9571,7 +8073,6 @@ public final class StorageProtos {
         return public_;
       }
 
-      // optional bytes private = 2;
       public static final int PRIVATE_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString private_;
       /**
@@ -9594,7 +8095,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -9609,7 +8111,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeBytes(2, private_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -9626,7 +8128,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(2, private_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -9698,43 +8200,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderSigningKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure.SenderSigningKey)
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -9753,11 +8233,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
         }
@@ -9783,19 +8258,9 @@ public final class StorageProtos {
           }
           result.private_ = private_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) return this;
           if (other.hasPublic()) {
@@ -9804,7 +8269,8 @@ public final class StorageProtos {
           if (other.hasPrivate()) {
             setPrivate(other.getPrivate());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -9831,7 +8297,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional bytes public = 1;
         private com.google.protobuf.ByteString public_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes public = 1;</code>
@@ -9854,7 +8319,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000001;
           public_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9863,11 +8328,10 @@ public final class StorageProtos {
         public Builder clearPublic() {
           bitField0_ = (bitField0_ & ~0x00000001);
           public_ = getDefaultInstance().getPublic();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes private = 2;
         private com.google.protobuf.ByteString private_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes private = 2;</code>
@@ -9890,7 +8354,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           private_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9899,7 +8363,7 @@ public final class StorageProtos {
         public Builder clearPrivate() {
           bitField0_ = (bitField0_ & ~0x00000002);
           private_ = getDefaultInstance().getPrivate();
-          onChanged();
+          
           return this;
         }
 
@@ -9915,7 +8379,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 senderKeyId = 1;
     public static final int SENDERKEYID_FIELD_NUMBER = 1;
     private int senderKeyId_;
     /**
@@ -9931,7 +8394,6 @@ public final class StorageProtos {
       return senderKeyId_;
     }
 
-    // optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;
     public static final int SENDERCHAINKEY_FIELD_NUMBER = 2;
     private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey senderChainKey_;
     /**
@@ -9946,14 +8408,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKey() {
       return senderChainKey_;
     }
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeyOrBuilder() {
-      return senderChainKey_;
-    }
 
-    // optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;
     public static final int SENDERSIGNINGKEY_FIELD_NUMBER = 3;
     private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_;
     /**
@@ -9968,14 +8423,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
       return senderSigningKey_;
     }
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder getSenderSigningKeyOrBuilder() {
-      return senderSigningKey_;
-    }
 
-    // repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;
     public static final int SENDERMESSAGEKEYS_FIELD_NUMBER = 4;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> senderMessageKeys_;
     /**
@@ -10020,7 +8468,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -10041,7 +8490,7 @@ public final class StorageProtos {
       for (int i = 0; i < senderMessageKeys_.size(); i++) {
         output.writeMessage(4, senderMessageKeys_.get(i));
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -10066,7 +8515,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(4, senderMessageKeys_.get(i));
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -10138,46 +8587,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyStateStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getSenderChainKeyFieldBuilder();
-          getSenderSigningKeyFieldBuilder();
-          getSenderMessageKeysFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -10187,24 +8611,12 @@ public final class StorageProtos {
         super.clear();
         senderKeyId_ = 0;
         bitField0_ = (bitField0_ & ~0x00000001);
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
-        } else {
-          senderChainKeyBuilder_.clear();
-        }
+        senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000002);
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
-        } else {
-          senderSigningKeyBuilder_.clear();
-        }
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000004);
-        if (senderMessageKeysBuilder_ == null) {
-          senderMessageKeys_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000008);
-        } else {
-          senderMessageKeysBuilder_.clear();
-        }
+        senderMessageKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000008);
         return this;
       }
 
@@ -10212,11 +8624,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance();
       }
@@ -10240,42 +8647,20 @@ public final class StorageProtos {
         if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
           to_bitField0_ |= 0x00000002;
         }
-        if (senderChainKeyBuilder_ == null) {
-          result.senderChainKey_ = senderChainKey_;
-        } else {
-          result.senderChainKey_ = senderChainKeyBuilder_.build();
-        }
+        result.senderChainKey_ = senderChainKey_;
         if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
           to_bitField0_ |= 0x00000004;
         }
-        if (senderSigningKeyBuilder_ == null) {
-          result.senderSigningKey_ = senderSigningKey_;
-        } else {
-          result.senderSigningKey_ = senderSigningKeyBuilder_.build();
-        }
-        if (senderMessageKeysBuilder_ == null) {
-          if (((bitField0_ & 0x00000008) == 0x00000008)) {
-            senderMessageKeys_ = java.util.Collections.unmodifiableList(senderMessageKeys_);
-            bitField0_ = (bitField0_ & ~0x00000008);
-          }
-          result.senderMessageKeys_ = senderMessageKeys_;
-        } else {
-          result.senderMessageKeys_ = senderMessageKeysBuilder_.build();
+        result.senderSigningKey_ = senderSigningKey_;
+        if (((bitField0_ & 0x00000008) == 0x00000008)) {
+          senderMessageKeys_ = java.util.Collections.unmodifiableList(senderMessageKeys_);
+          bitField0_ = (bitField0_ & ~0x00000008);
         }
+        result.senderMessageKeys_ = senderMessageKeys_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance()) return this;
         if (other.hasSenderKeyId()) {
@@ -10287,33 +8672,18 @@ public final class StorageProtos {
         if (other.hasSenderSigningKey()) {
           mergeSenderSigningKey(other.getSenderSigningKey());
         }
-        if (senderMessageKeysBuilder_ == null) {
-          if (!other.senderMessageKeys_.isEmpty()) {
-            if (senderMessageKeys_.isEmpty()) {
-              senderMessageKeys_ = other.senderMessageKeys_;
-              bitField0_ = (bitField0_ & ~0x00000008);
-            } else {
-              ensureSenderMessageKeysIsMutable();
-              senderMessageKeys_.addAll(other.senderMessageKeys_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.senderMessageKeys_.isEmpty()) {
-            if (senderMessageKeysBuilder_.isEmpty()) {
-              senderMessageKeysBuilder_.dispose();
-              senderMessageKeysBuilder_ = null;
-              senderMessageKeys_ = other.senderMessageKeys_;
-              bitField0_ = (bitField0_ & ~0x00000008);
-              senderMessageKeysBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getSenderMessageKeysFieldBuilder() : null;
-            } else {
-              senderMessageKeysBuilder_.addAllMessages(other.senderMessageKeys_);
-            }
+        if (!other.senderMessageKeys_.isEmpty()) {
+          if (senderMessageKeys_.isEmpty()) {
+            senderMessageKeys_ = other.senderMessageKeys_;
+            bitField0_ = (bitField0_ & ~0x00000008);
+          } else {
+            ensureSenderMessageKeysIsMutable();
+            senderMessageKeys_.addAll(other.senderMessageKeys_);
           }
+          
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -10340,7 +8710,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 senderKeyId = 1;
       private int senderKeyId_ ;
       /**
        * <code>optional uint32 senderKeyId = 1;</code>
@@ -10360,7 +8729,7 @@ public final class StorageProtos {
       public Builder setSenderKeyId(int value) {
         bitField0_ |= 0x00000001;
         senderKeyId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -10369,14 +8738,11 @@ public final class StorageProtos {
       public Builder clearSenderKeyId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         senderKeyId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;
       private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder> senderChainKeyBuilder_;
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
@@ -10387,25 +8753,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKey() {
-        if (senderChainKeyBuilder_ == null) {
-          return senderChainKey_;
-        } else {
-          return senderChainKeyBuilder_.getMessage();
-        }
+        return senderChainKey_;
       }
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public Builder setSenderChainKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
-        if (senderChainKeyBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          senderChainKey_ = value;
-          onChanged();
-        } else {
-          senderChainKeyBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        senderChainKey_ = value;
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -10414,12 +8772,8 @@ public final class StorageProtos {
        */
       public Builder setSenderChainKey(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKey_ = builderForValue.build();
-          onChanged();
-        } else {
-          senderChainKeyBuilder_.setMessage(builderForValue.build());
-        }
+        senderChainKey_ = builderForValue.build();
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -10427,18 +8781,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public Builder mergeSenderChainKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
-        if (senderChainKeyBuilder_ == null) {
-          if (((bitField0_ & 0x00000002) == 0x00000002) &&
-              senderChainKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance()) {
-            senderChainKey_ =
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.newBuilder(senderChainKey_).mergeFrom(value).buildPartial();
-          } else {
-            senderChainKey_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000002) == 0x00000002) &&
+            senderChainKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance()) {
+          senderChainKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.newBuilder(senderChainKey_).mergeFrom(value).buildPartial();
         } else {
-          senderChainKeyBuilder_.mergeFrom(value);
+          senderChainKey_ = value;
         }
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -10446,54 +8796,13 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public Builder clearSenderChainKey() {
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
-          onChanged();
-        } else {
-          senderChainKeyBuilder_.clear();
-        }
+        senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000002);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder getSenderChainKeyBuilder() {
-        bitField0_ |= 0x00000002;
-        onChanged();
-        return getSenderChainKeyFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeyOrBuilder() {
-        if (senderChainKeyBuilder_ != null) {
-          return senderChainKeyBuilder_.getMessageOrBuilder();
-        } else {
-          return senderChainKey_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder> 
-          getSenderChainKeyFieldBuilder() {
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder>(
-                  senderChainKey_,
-                  getParentForChildren(),
-                  isClean());
-          senderChainKey_ = null;
-        }
-        return senderChainKeyBuilder_;
-      }
 
-      // optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;
       private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder> senderSigningKeyBuilder_;
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
@@ -10504,25 +8813,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
-        if (senderSigningKeyBuilder_ == null) {
-          return senderSigningKey_;
-        } else {
-          return senderSigningKeyBuilder_.getMessage();
-        }
+        return senderSigningKey_;
       }
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public Builder setSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
-        if (senderSigningKeyBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          senderSigningKey_ = value;
-          onChanged();
-        } else {
-          senderSigningKeyBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        senderSigningKey_ = value;
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -10531,12 +8832,8 @@ public final class StorageProtos {
        */
       public Builder setSenderSigningKey(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder builderForValue) {
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKey_ = builderForValue.build();
-          onChanged();
-        } else {
-          senderSigningKeyBuilder_.setMessage(builderForValue.build());
-        }
+        senderSigningKey_ = builderForValue.build();
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -10544,18 +8841,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public Builder mergeSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
-        if (senderSigningKeyBuilder_ == null) {
-          if (((bitField0_ & 0x00000004) == 0x00000004) &&
-              senderSigningKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) {
-            senderSigningKey_ =
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder(senderSigningKey_).mergeFrom(value).buildPartial();
-          } else {
-            senderSigningKey_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000004) == 0x00000004) &&
+            senderSigningKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) {
+          senderSigningKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder(senderSigningKey_).mergeFrom(value).buildPartial();
         } else {
-          senderSigningKeyBuilder_.mergeFrom(value);
+          senderSigningKey_ = value;
         }
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -10563,51 +8856,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public Builder clearSenderSigningKey() {
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
-          onChanged();
-        } else {
-          senderSigningKeyBuilder_.clear();
-        }
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000004);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder getSenderSigningKeyBuilder() {
-        bitField0_ |= 0x00000004;
-        onChanged();
-        return getSenderSigningKeyFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder getSenderSigningKeyOrBuilder() {
-        if (senderSigningKeyBuilder_ != null) {
-          return senderSigningKeyBuilder_.getMessageOrBuilder();
-        } else {
-          return senderSigningKey_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder> 
-          getSenderSigningKeyFieldBuilder() {
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder>(
-                  senderSigningKey_,
-                  getParentForChildren(),
-                  isClean());
-          senderSigningKey_ = null;
-        }
-        return senderSigningKeyBuilder_;
-      }
 
-      // repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> senderMessageKeys_ =
         java.util.Collections.emptyList();
       private void ensureSenderMessageKeysIsMutable() {
@@ -10617,54 +8871,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> senderMessageKeysBuilder_;
-
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> getSenderMessageKeysList() {
-        if (senderMessageKeysBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(senderMessageKeys_);
-        } else {
-          return senderMessageKeysBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(senderMessageKeys_);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public int getSenderMessageKeysCount() {
-        if (senderMessageKeysBuilder_ == null) {
-          return senderMessageKeys_.size();
-        } else {
-          return senderMessageKeysBuilder_.getCount();
-        }
+        return senderMessageKeys_.size();
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey getSenderMessageKeys(int index) {
-        if (senderMessageKeysBuilder_ == null) {
-          return senderMessageKeys_.get(index);
-        } else {
-          return senderMessageKeysBuilder_.getMessage(index);
-        }
+        return senderMessageKeys_.get(index);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder setSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey value) {
-        if (senderMessageKeysBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.set(index, value);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.set(index, value);
+
         return this;
       }
       /**
@@ -10672,29 +8907,21 @@ public final class StorageProtos {
        */
       public Builder setSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder builderForValue) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder addSenderMessageKeys(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey value) {
-        if (senderMessageKeysBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(value);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(value);
+
         return this;
       }
       /**
@@ -10702,16 +8929,12 @@ public final class StorageProtos {
        */
       public Builder addSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey value) {
-        if (senderMessageKeysBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(index, value);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(index, value);
+
         return this;
       }
       /**
@@ -10719,13 +8942,9 @@ public final class StorageProtos {
        */
       public Builder addSenderMessageKeys(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder builderForValue) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(builderForValue.build());
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(builderForValue.build());
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -10733,13 +8952,9 @@ public final class StorageProtos {
        */
       public Builder addSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder builderForValue) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -10747,105 +8962,30 @@ public final class StorageProtos {
        */
       public Builder addAllSenderMessageKeys(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> values) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          super.addAll(values, senderMessageKeys_);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addAllMessages(values);
-        }
+        ensureSenderMessageKeysIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderMessageKeys_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder clearSenderMessageKeys() {
-        if (senderMessageKeysBuilder_ == null) {
-          senderMessageKeys_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000008);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.clear();
-        }
+        senderMessageKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000008);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder removeSenderMessageKeys(int index) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.remove(index);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.remove(index);
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder getSenderMessageKeysBuilder(
-          int index) {
-        return getSenderMessageKeysFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder getSenderMessageKeysOrBuilder(
-          int index) {
-        if (senderMessageKeysBuilder_ == null) {
-          return senderMessageKeys_.get(index);  } else {
-          return senderMessageKeysBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> 
-           getSenderMessageKeysOrBuilderList() {
-        if (senderMessageKeysBuilder_ != null) {
-          return senderMessageKeysBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(senderMessageKeys_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder addSenderMessageKeysBuilder() {
-        return getSenderMessageKeysFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder addSenderMessageKeysBuilder(
-          int index) {
-        return getSenderMessageKeysFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder> 
-           getSenderMessageKeysBuilderList() {
-        return getSenderMessageKeysFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> 
-          getSenderMessageKeysFieldBuilder() {
-        if (senderMessageKeysBuilder_ == null) {
-          senderMessageKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder>(
-                  senderMessageKeys_,
-                  ((bitField0_ & 0x00000008) == 0x00000008),
-                  getParentForChildren(),
-                  isClean());
-          senderMessageKeys_ = null;
-        }
-        return senderMessageKeysBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.SenderKeyStateStructure)
     }
@@ -10858,10 +8998,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyStateStructure)
   }
 
-  public interface SenderKeyRecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;
     /**
      * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
      */
@@ -10875,29 +9015,20 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
      */
     int getSenderKeyStatesCount();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> 
-        getSenderKeyStatesOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder getSenderKeyStatesOrBuilder(
-        int index);
   }
   /**
    * Protobuf type {@code textsecure.SenderKeyRecordStructure}
    */
   public static final class SenderKeyRecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyRecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyRecordStructure)
+      SenderKeyRecordStructureOrBuilder {
     // Use SenderKeyRecordStructure.newBuilder() to construct.
-    private SenderKeyRecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyRecordStructure defaultInstance;
     public static SenderKeyRecordStructure getDefaultInstance() {
@@ -10908,20 +9039,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyRecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -10931,7 +9060,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -10956,22 +9085,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
           senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyRecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyRecordStructure>() {
       public SenderKeyRecordStructure parsePartialFrom(
@@ -10987,7 +9110,6 @@ public final class StorageProtos {
       return PARSER;
     }
 
-    // repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;
     public static final int SENDERKEYSTATES_FIELD_NUMBER = 1;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> senderKeyStates_;
     /**
@@ -11029,7 +9151,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -11041,7 +9164,7 @@ public final class StorageProtos {
       for (int i = 0; i < senderKeyStates_.size(); i++) {
         output.writeMessage(1, senderKeyStates_.get(i));
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -11054,7 +9177,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(1, senderKeyStates_.get(i));
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -11126,44 +9249,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyRecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getSenderKeyStatesFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -11171,12 +9271,8 @@ public final class StorageProtos {
 
       public Builder clear() {
         super.clear();
-        if (senderKeyStatesBuilder_ == null) {
-          senderKeyStates_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000001);
-        } else {
-          senderKeyStatesBuilder_.clear();
-        }
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
         return this;
       }
 
@@ -11184,11 +9280,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.getDefaultInstance();
       }
@@ -11204,57 +9295,28 @@ public final class StorageProtos {
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure buildPartial() {
         org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure result = new org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure(this);
         int from_bitField0_ = bitField0_;
-        if (senderKeyStatesBuilder_ == null) {
-          if (((bitField0_ & 0x00000001) == 0x00000001)) {
-            senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
-            bitField0_ = (bitField0_ & ~0x00000001);
-          }
-          result.senderKeyStates_ = senderKeyStates_;
-        } else {
-          result.senderKeyStates_ = senderKeyStatesBuilder_.build();
+        if (((bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
+          bitField0_ = (bitField0_ & ~0x00000001);
         }
-        onBuilt();
+        result.senderKeyStates_ = senderKeyStates_;
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.getDefaultInstance()) return this;
-        if (senderKeyStatesBuilder_ == null) {
-          if (!other.senderKeyStates_.isEmpty()) {
-            if (senderKeyStates_.isEmpty()) {
-              senderKeyStates_ = other.senderKeyStates_;
-              bitField0_ = (bitField0_ & ~0x00000001);
-            } else {
-              ensureSenderKeyStatesIsMutable();
-              senderKeyStates_.addAll(other.senderKeyStates_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.senderKeyStates_.isEmpty()) {
-            if (senderKeyStatesBuilder_.isEmpty()) {
-              senderKeyStatesBuilder_.dispose();
-              senderKeyStatesBuilder_ = null;
-              senderKeyStates_ = other.senderKeyStates_;
-              bitField0_ = (bitField0_ & ~0x00000001);
-              senderKeyStatesBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getSenderKeyStatesFieldBuilder() : null;
-            } else {
-              senderKeyStatesBuilder_.addAllMessages(other.senderKeyStates_);
-            }
+        if (!other.senderKeyStates_.isEmpty()) {
+          if (senderKeyStates_.isEmpty()) {
+            senderKeyStates_ = other.senderKeyStates_;
+            bitField0_ = (bitField0_ & ~0x00000001);
+          } else {
+            ensureSenderKeyStatesIsMutable();
+            senderKeyStates_.addAll(other.senderKeyStates_);
           }
+          
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -11281,7 +9343,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> senderKeyStates_ =
         java.util.Collections.emptyList();
       private void ensureSenderKeyStatesIsMutable() {
@@ -11291,54 +9352,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> senderKeyStatesBuilder_;
-
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> getSenderKeyStatesList() {
-        if (senderKeyStatesBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(senderKeyStates_);
-        } else {
-          return senderKeyStatesBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(senderKeyStates_);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public int getSenderKeyStatesCount() {
-        if (senderKeyStatesBuilder_ == null) {
-          return senderKeyStates_.size();
-        } else {
-          return senderKeyStatesBuilder_.getCount();
-        }
+        return senderKeyStates_.size();
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure getSenderKeyStates(int index) {
-        if (senderKeyStatesBuilder_ == null) {
-          return senderKeyStates_.get(index);
-        } else {
-          return senderKeyStatesBuilder_.getMessage(index);
-        }
+        return senderKeyStates_.get(index);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder setSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure value) {
-        if (senderKeyStatesBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.set(index, value);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, value);
+
         return this;
       }
       /**
@@ -11346,29 +9388,21 @@ public final class StorageProtos {
        */
       public Builder setSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder builderForValue) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder addSenderKeyStates(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure value) {
-        if (senderKeyStatesBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(value);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(value);
+
         return this;
       }
       /**
@@ -11376,16 +9410,12 @@ public final class StorageProtos {
        */
       public Builder addSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure value) {
-        if (senderKeyStatesBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(index, value);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, value);
+
         return this;
       }
       /**
@@ -11393,13 +9423,9 @@ public final class StorageProtos {
        */
       public Builder addSenderKeyStates(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder builderForValue) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(builderForValue.build());
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(builderForValue.build());
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -11407,13 +9433,9 @@ public final class StorageProtos {
        */
       public Builder addSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder builderForValue) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -11421,105 +9443,30 @@ public final class StorageProtos {
        */
       public Builder addAllSenderKeyStates(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> values) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          super.addAll(values, senderKeyStates_);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addAllMessages(values);
-        }
+        ensureSenderKeyStatesIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderKeyStates_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder clearSenderKeyStates() {
-        if (senderKeyStatesBuilder_ == null) {
-          senderKeyStates_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000001);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.clear();
-        }
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder removeSenderKeyStates(int index) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.remove(index);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.remove(index);
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder getSenderKeyStatesBuilder(
-          int index) {
-        return getSenderKeyStatesFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder getSenderKeyStatesOrBuilder(
-          int index) {
-        if (senderKeyStatesBuilder_ == null) {
-          return senderKeyStates_.get(index);  } else {
-          return senderKeyStatesBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> 
-           getSenderKeyStatesOrBuilderList() {
-        if (senderKeyStatesBuilder_ != null) {
-          return senderKeyStatesBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(senderKeyStates_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder addSenderKeyStatesBuilder() {
-        return getSenderKeyStatesFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder addSenderKeyStatesBuilder(
-          int index) {
-        return getSenderKeyStatesFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder> 
-           getSenderKeyStatesBuilderList() {
-        return getSenderKeyStatesFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> 
-          getSenderKeyStatesFieldBuilder() {
-        if (senderKeyStatesBuilder_ == null) {
-          senderKeyStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder>(
-                  senderKeyStates_,
-                  ((bitField0_ & 0x00000001) == 0x00000001),
-                  getParentForChildren(),
-                  isClean());
-          senderKeyStates_ = null;
-        }
-        return senderKeyStatesBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.SenderKeyRecordStructure)
     }
@@ -11532,247 +9479,1165 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyRecordStructure)
   }
 
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_Chain_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_RecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_RecordStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_PreKeyRecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable;
-
-  public static com.google.protobuf.Descriptors.FileDescriptor
-      getDescriptor() {
-    return descriptor;
+  public interface FastRatchetSenderKeyStateStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FastRatchetSenderKeyStateStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
+
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    boolean hasSenderKeyId();
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    int getSenderKeyId();
+
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> 
+        getSenderChainKeysList();
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKeys(int index);
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    int getSenderChainKeysCount();
+
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    boolean hasSenderSigningKey();
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey();
   }
-  private static com.google.protobuf.Descriptors.FileDescriptor
-      descriptor;
-  static {
-    java.lang.String[] descriptorData = {
-      "\n\032LocalStorageProtocol.proto\022\ntextsecure" +
-      "\"\323\010\n\020SessionStructure\022\026\n\016sessionVersion\030" +
-      "\001 \001(\r\022\033\n\023localIdentityPublic\030\002 \001(\014\022\034\n\024re" +
-      "moteIdentityPublic\030\003 \001(\014\022\017\n\007rootKey\030\004 \001(" +
-      "\014\022\027\n\017previousCounter\030\005 \001(\r\0227\n\013senderChai" +
-      "n\030\006 \001(\0132\".textsecure.SessionStructure.Ch" +
-      "ain\022:\n\016receiverChains\030\007 \003(\0132\".textsecure" +
-      ".SessionStructure.Chain\022K\n\022pendingKeyExc" +
-      "hange\030\010 \001(\0132/.textsecure.SessionStructur" +
-      "e.PendingKeyExchange\022A\n\rpendingPreKey\030\t ",
-      "\001(\0132*.textsecure.SessionStructure.Pendin" +
-      "gPreKey\022\034\n\024remoteRegistrationId\030\n \001(\r\022\033\n" +
-      "\023localRegistrationId\030\013 \001(\r\022\024\n\014needsRefre" +
-      "sh\030\014 \001(\010\022\024\n\014aliceBaseKey\030\r \001(\014\032\271\002\n\005Chain" +
-      "\022\030\n\020senderRatchetKey\030\001 \001(\014\022\037\n\027senderRatc" +
-      "hetKeyPrivate\030\002 \001(\014\022=\n\010chainKey\030\003 \001(\0132+." +
-      "textsecure.SessionStructure.Chain.ChainK" +
-      "ey\022B\n\013messageKeys\030\004 \003(\0132-.textsecure.Ses" +
-      "sionStructure.Chain.MessageKey\032&\n\010ChainK" +
-      "ey\022\r\n\005index\030\001 \001(\r\022\013\n\003key\030\002 \001(\014\032J\n\nMessag",
-      "eKey\022\r\n\005index\030\001 \001(\r\022\021\n\tcipherKey\030\002 \001(\014\022\016" +
-      "\n\006macKey\030\003 \001(\014\022\n\n\002iv\030\004 \001(\014\032\315\001\n\022PendingKe" +
-      "yExchange\022\020\n\010sequence\030\001 \001(\r\022\024\n\014localBase" +
-      "Key\030\002 \001(\014\022\033\n\023localBaseKeyPrivate\030\003 \001(\014\022\027" +
-      "\n\017localRatchetKey\030\004 \001(\014\022\036\n\026localRatchetK" +
-      "eyPrivate\030\005 \001(\014\022\030\n\020localIdentityKey\030\007 \001(" +
-      "\014\022\037\n\027localIdentityKeyPrivate\030\010 \001(\014\032J\n\rPe" +
-      "ndingPreKey\022\020\n\010preKeyId\030\001 \001(\r\022\026\n\016signedP" +
-      "reKeyId\030\003 \001(\005\022\017\n\007baseKey\030\002 \001(\014\"\177\n\017Record" +
-      "Structure\0224\n\016currentSession\030\001 \001(\0132\034.text",
-      "secure.SessionStructure\0226\n\020previousSessi" +
-      "ons\030\002 \003(\0132\034.textsecure.SessionStructure\"" +
-      "J\n\025PreKeyRecordStructure\022\n\n\002id\030\001 \001(\r\022\021\n\t" +
-      "publicKey\030\002 \001(\014\022\022\n\nprivateKey\030\003 \001(\014\"v\n\033S" +
-      "ignedPreKeyRecordStructure\022\n\n\002id\030\001 \001(\r\022\021" +
-      "\n\tpublicKey\030\002 \001(\014\022\022\n\nprivateKey\030\003 \001(\014\022\021\n" +
-      "\tsignature\030\004 \001(\014\022\021\n\ttimestamp\030\005 \001(\006\"A\n\030I" +
-      "dentityKeyPairStructure\022\021\n\tpublicKey\030\001 \001" +
-      "(\014\022\022\n\nprivateKey\030\002 \001(\014\"\270\003\n\027SenderKeyStat" +
-      "eStructure\022\023\n\013senderKeyId\030\001 \001(\r\022J\n\016sende",
-      "rChainKey\030\002 \001(\01322.textsecure.SenderKeySt" +
-      "ateStructure.SenderChainKey\022N\n\020senderSig" +
-      "ningKey\030\003 \001(\01324.textsecure.SenderKeyStat" +
-      "eStructure.SenderSigningKey\022O\n\021senderMes" +
-      "sageKeys\030\004 \003(\01324.textsecure.SenderKeySta" +
-      "teStructure.SenderMessageKey\0321\n\016SenderCh" +
-      "ainKey\022\021\n\titeration\030\001 \001(\r\022\014\n\004seed\030\002 \001(\014\032" +
-      "3\n\020SenderMessageKey\022\021\n\titeration\030\001 \001(\r\022\014" +
-      "\n\004seed\030\002 \001(\014\0323\n\020SenderSigningKey\022\016\n\006publ" +
-      "ic\030\001 \001(\014\022\017\n\007private\030\002 \001(\014\"X\n\030SenderKeyRe",
-      "cordStructure\022<\n\017senderKeyStates\030\001 \003(\0132#" +
-      ".textsecure.SenderKeyStateStructureB3\n\"o" +
-      "rg.whispersystems.libsignal.stateB\rStora" +
-      "geProtos"
-    };
-    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
-      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
-        public com.google.protobuf.ExtensionRegistry assignDescriptors(
-            com.google.protobuf.Descriptors.FileDescriptor root) {
-          descriptor = root;
-          internal_static_textsecure_SessionStructure_descriptor =
-            getDescriptor().getMessageTypes().get(0);
-          internal_static_textsecure_SessionStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_descriptor,
-              new java.lang.String[] { "SessionVersion", "LocalIdentityPublic", "RemoteIdentityPublic", "RootKey", "PreviousCounter", "SenderChain", "ReceiverChains", "PendingKeyExchange", "PendingPreKey", "RemoteRegistrationId", "LocalRegistrationId", "NeedsRefresh", "AliceBaseKey", });
-          internal_static_textsecure_SessionStructure_Chain_descriptor =
-            internal_static_textsecure_SessionStructure_descriptor.getNestedTypes().get(0);
-          internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_Chain_descriptor,
-              new java.lang.String[] { "SenderRatchetKey", "SenderRatchetKeyPrivate", "ChainKey", "MessageKeys", });
-          internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor =
-            internal_static_textsecure_SessionStructure_Chain_descriptor.getNestedTypes().get(0);
-          internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor,
-              new java.lang.String[] { "Index", "Key", });
-          internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor =
-            internal_static_textsecure_SessionStructure_Chain_descriptor.getNestedTypes().get(1);
-          internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor,
-              new java.lang.String[] { "Index", "CipherKey", "MacKey", "Iv", });
-          internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor =
-            internal_static_textsecure_SessionStructure_descriptor.getNestedTypes().get(1);
-          internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor,
-              new java.lang.String[] { "Sequence", "LocalBaseKey", "LocalBaseKeyPrivate", "LocalRatchetKey", "LocalRatchetKeyPrivate", "LocalIdentityKey", "LocalIdentityKeyPrivate", });
-          internal_static_textsecure_SessionStructure_PendingPreKey_descriptor =
-            internal_static_textsecure_SessionStructure_descriptor.getNestedTypes().get(2);
-          internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_PendingPreKey_descriptor,
-              new java.lang.String[] { "PreKeyId", "SignedPreKeyId", "BaseKey", });
-          internal_static_textsecure_RecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(1);
-          internal_static_textsecure_RecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_RecordStructure_descriptor,
-              new java.lang.String[] { "CurrentSession", "PreviousSessions", });
-          internal_static_textsecure_PreKeyRecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(2);
-          internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_PreKeyRecordStructure_descriptor,
-              new java.lang.String[] { "Id", "PublicKey", "PrivateKey", });
-          internal_static_textsecure_SignedPreKeyRecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(3);
-          internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SignedPreKeyRecordStructure_descriptor,
-              new java.lang.String[] { "Id", "PublicKey", "PrivateKey", "Signature", "Timestamp", });
-          internal_static_textsecure_IdentityKeyPairStructure_descriptor =
-            getDescriptor().getMessageTypes().get(4);
-          internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_IdentityKeyPairStructure_descriptor,
-              new java.lang.String[] { "PublicKey", "PrivateKey", });
-          internal_static_textsecure_SenderKeyStateStructure_descriptor =
-            getDescriptor().getMessageTypes().get(5);
-          internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_descriptor,
-              new java.lang.String[] { "SenderKeyId", "SenderChainKey", "SenderSigningKey", "SenderMessageKeys", });
-          internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor =
-            internal_static_textsecure_SenderKeyStateStructure_descriptor.getNestedTypes().get(0);
-          internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor,
-              new java.lang.String[] { "Iteration", "Seed", });
-          internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor =
-            internal_static_textsecure_SenderKeyStateStructure_descriptor.getNestedTypes().get(1);
-          internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor,
-              new java.lang.String[] { "Iteration", "Seed", });
-          internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor =
-            internal_static_textsecure_SenderKeyStateStructure_descriptor.getNestedTypes().get(2);
-          internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor,
-              new java.lang.String[] { "Public", "Private", });
-          internal_static_textsecure_SenderKeyRecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(6);
-          internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyRecordStructure_descriptor,
-              new java.lang.String[] { "SenderKeyStates", });
-          return null;
-        }
-      };
-    com.google.protobuf.Descriptors.FileDescriptor
-      .internalBuildGeneratedFileFrom(descriptorData,
-        new com.google.protobuf.Descriptors.FileDescriptor[] {
-        }, assigner);
+  /**
+   * Protobuf type {@code textsecure.FastRatchetSenderKeyStateStructure}
+   */
+  public static final class FastRatchetSenderKeyStateStructure extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FastRatchetSenderKeyStateStructure)
+      FastRatchetSenderKeyStateStructureOrBuilder {
+    // Use FastRatchetSenderKeyStateStructure.newBuilder() to construct.
+    private FastRatchetSenderKeyStateStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
+      super(builder);
+      this.unknownFields = builder.getUnknownFields();
+    }
+    private FastRatchetSenderKeyStateStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
+
+    private static final FastRatchetSenderKeyStateStructure defaultInstance;
+    public static FastRatchetSenderKeyStateStructure getDefaultInstance() {
+      return defaultInstance;
+    }
+
+    public FastRatchetSenderKeyStateStructure getDefaultInstanceForType() {
+      return defaultInstance;
+    }
+
+    private final com.google.protobuf.ByteString unknownFields;
+    private FastRatchetSenderKeyStateStructure(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      initFields();
+      int mutable_bitField0_ = 0;
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
+      try {
+        boolean done = false;
+        while (!done) {
+          int tag = input.readTag();
+          switch (tag) {
+            case 0:
+              done = true;
+              break;
+            default: {
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
+                                     extensionRegistry, tag)) {
+                done = true;
+              }
+              break;
+            }
+            case 8: {
+              bitField0_ |= 0x00000001;
+              senderKeyId_ = input.readUInt32();
+              break;
+            }
+            case 18: {
+              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
+                senderChainKeys_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey>();
+                mutable_bitField0_ |= 0x00000002;
+              }
+              senderChainKeys_.add(input.readMessage(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.PARSER, extensionRegistry));
+              break;
+            }
+            case 26: {
+              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder subBuilder = null;
+              if (((bitField0_ & 0x00000002) == 0x00000002)) {
+                subBuilder = senderSigningKey_.toBuilder();
+              }
+              senderSigningKey_ = input.readMessage(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.PARSER, extensionRegistry);
+              if (subBuilder != null) {
+                subBuilder.mergeFrom(senderSigningKey_);
+                senderSigningKey_ = subBuilder.buildPartial();
+              }
+              bitField0_ |= 0x00000002;
+              break;
+            }
+          }
+        }
+      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+        throw e.setUnfinishedMessage(this);
+      } catch (java.io.IOException e) {
+        throw new com.google.protobuf.InvalidProtocolBufferException(
+            e.getMessage()).setUnfinishedMessage(this);
+      } finally {
+        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
+          senderChainKeys_ = java.util.Collections.unmodifiableList(senderChainKeys_);
+        }
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
+    }
+    public static com.google.protobuf.Parser<FastRatchetSenderKeyStateStructure> PARSER =
+        new com.google.protobuf.AbstractParser<FastRatchetSenderKeyStateStructure>() {
+      public FastRatchetSenderKeyStateStructure parsePartialFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return new FastRatchetSenderKeyStateStructure(input, extensionRegistry);
+      }
+    };
+
+    @java.lang.Override
+    public com.google.protobuf.Parser<FastRatchetSenderKeyStateStructure> getParserForType() {
+      return PARSER;
+    }
+
+    private int bitField0_;
+    public static final int SENDERKEYID_FIELD_NUMBER = 1;
+    private int senderKeyId_;
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    public boolean hasSenderKeyId() {
+      return ((bitField0_ & 0x00000001) == 0x00000001);
+    }
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    public int getSenderKeyId() {
+      return senderKeyId_;
+    }
+
+    public static final int SENDERCHAINKEYS_FIELD_NUMBER = 2;
+    private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> senderChainKeys_;
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> getSenderChainKeysList() {
+      return senderChainKeys_;
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder> 
+        getSenderChainKeysOrBuilderList() {
+      return senderChainKeys_;
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public int getSenderChainKeysCount() {
+      return senderChainKeys_.size();
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKeys(int index) {
+      return senderChainKeys_.get(index);
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeysOrBuilder(
+        int index) {
+      return senderChainKeys_.get(index);
+    }
+
+    public static final int SENDERSIGNINGKEY_FIELD_NUMBER = 3;
+    private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_;
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    public boolean hasSenderSigningKey() {
+      return ((bitField0_ & 0x00000002) == 0x00000002);
+    }
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
+      return senderSigningKey_;
+    }
+
+    private void initFields() {
+      senderKeyId_ = 0;
+      senderChainKeys_ = java.util.Collections.emptyList();
+      senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+    }
+    private byte memoizedIsInitialized = -1;
+    public final boolean isInitialized() {
+      byte isInitialized = memoizedIsInitialized;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
+
+      memoizedIsInitialized = 1;
+      return true;
+    }
+
+    public void writeTo(com.google.protobuf.CodedOutputStream output)
+                        throws java.io.IOException {
+      getSerializedSize();
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        output.writeUInt32(1, senderKeyId_);
+      }
+      for (int i = 0; i < senderChainKeys_.size(); i++) {
+        output.writeMessage(2, senderChainKeys_.get(i));
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        output.writeMessage(3, senderSigningKey_);
+      }
+      output.writeRawBytes(unknownFields);
+    }
+
+    private int memoizedSerializedSize = -1;
+    public int getSerializedSize() {
+      int size = memoizedSerializedSize;
+      if (size != -1) return size;
+
+      size = 0;
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeUInt32Size(1, senderKeyId_);
+      }
+      for (int i = 0; i < senderChainKeys_.size(); i++) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeMessageSize(2, senderChainKeys_.get(i));
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeMessageSize(3, senderSigningKey_);
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
+    }
+
+    private static final long serialVersionUID = 0L;
+    @java.lang.Override
+    protected java.lang.Object writeReplace()
+        throws java.io.ObjectStreamException {
+      return super.writeReplace();
+    }
+
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.ByteString data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.ByteString data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(byte[] data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        byte[] data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseDelimitedFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseDelimitedFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.CodedInputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+
+    public static Builder newBuilder() { return Builder.create(); }
+    public Builder newBuilderForType() { return newBuilder(); }
+    public static Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure prototype) {
+      return newBuilder().mergeFrom(prototype);
+    }
+    public Builder toBuilder() { return newBuilder(this); }
+
+    /**
+     * Protobuf type {@code textsecure.FastRatchetSenderKeyStateStructure}
+     */
+    public static final class Builder extends
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FastRatchetSenderKeyStateStructure)
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructureOrBuilder {
+      // Construct using org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.newBuilder()
+      private Builder() {
+        maybeForceBuilderInitialization();
+      }
+
+      private void maybeForceBuilderInitialization() {
+      }
+      private static Builder create() {
+        return new Builder();
+      }
+
+      public Builder clear() {
+        super.clear();
+        senderKeyId_ = 0;
+        bitField0_ = (bitField0_ & ~0x00000001);
+        senderChainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+        bitField0_ = (bitField0_ & ~0x00000004);
+        return this;
+      }
+
+      public Builder clone() {
+        return create().mergeFrom(buildPartial());
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getDefaultInstanceForType() {
+        return org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.getDefaultInstance();
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure build() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure result = buildPartial();
+        if (!result.isInitialized()) {
+          throw newUninitializedMessageException(result);
+        }
+        return result;
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure buildPartial() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure result = new org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure(this);
+        int from_bitField0_ = bitField0_;
+        int to_bitField0_ = 0;
+        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
+          to_bitField0_ |= 0x00000001;
+        }
+        result.senderKeyId_ = senderKeyId_;
+        if (((bitField0_ & 0x00000002) == 0x00000002)) {
+          senderChainKeys_ = java.util.Collections.unmodifiableList(senderChainKeys_);
+          bitField0_ = (bitField0_ & ~0x00000002);
+        }
+        result.senderChainKeys_ = senderChainKeys_;
+        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
+          to_bitField0_ |= 0x00000002;
+        }
+        result.senderSigningKey_ = senderSigningKey_;
+        result.bitField0_ = to_bitField0_;
+        return result;
+      }
+
+      public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure other) {
+        if (other == org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.getDefaultInstance()) return this;
+        if (other.hasSenderKeyId()) {
+          setSenderKeyId(other.getSenderKeyId());
+        }
+        if (!other.senderChainKeys_.isEmpty()) {
+          if (senderChainKeys_.isEmpty()) {
+            senderChainKeys_ = other.senderChainKeys_;
+            bitField0_ = (bitField0_ & ~0x00000002);
+          } else {
+            ensureSenderChainKeysIsMutable();
+            senderChainKeys_.addAll(other.senderChainKeys_);
+          }
+          
+        }
+        if (other.hasSenderSigningKey()) {
+          mergeSenderSigningKey(other.getSenderSigningKey());
+        }
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
+        return this;
+      }
+
+      public final boolean isInitialized() {
+        return true;
+      }
+
+      public Builder mergeFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parsedMessage = null;
+        try {
+          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          parsedMessage = (org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure) e.getUnfinishedMessage();
+          throw e;
+        } finally {
+          if (parsedMessage != null) {
+            mergeFrom(parsedMessage);
+          }
+        }
+        return this;
+      }
+      private int bitField0_;
+
+      private int senderKeyId_ ;
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public boolean hasSenderKeyId() {
+        return ((bitField0_ & 0x00000001) == 0x00000001);
+      }
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public int getSenderKeyId() {
+        return senderKeyId_;
+      }
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public Builder setSenderKeyId(int value) {
+        bitField0_ |= 0x00000001;
+        senderKeyId_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public Builder clearSenderKeyId() {
+        bitField0_ = (bitField0_ & ~0x00000001);
+        senderKeyId_ = 0;
+        
+        return this;
+      }
+
+      private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> senderChainKeys_ =
+        java.util.Collections.emptyList();
+      private void ensureSenderChainKeysIsMutable() {
+        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
+          senderChainKeys_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey>(senderChainKeys_);
+          bitField0_ |= 0x00000002;
+         }
+      }
+
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> getSenderChainKeysList() {
+        return java.util.Collections.unmodifiableList(senderChainKeys_);
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public int getSenderChainKeysCount() {
+        return senderChainKeys_.size();
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKeys(int index) {
+        return senderChainKeys_.get(index);
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder setSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.set(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder setSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.set(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addAllSenderChainKeys(
+          java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> values) {
+        ensureSenderChainKeysIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderChainKeys_);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder clearSenderChainKeys() {
+        senderChainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder removeSenderChainKeys(int index) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.remove(index);
+
+        return this;
+      }
+
+      private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public boolean hasSenderSigningKey() {
+        return ((bitField0_ & 0x00000004) == 0x00000004);
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
+        return senderSigningKey_;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder setSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        senderSigningKey_ = value;
+
+        bitField0_ |= 0x00000004;
+        return this;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder setSenderSigningKey(
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder builderForValue) {
+        senderSigningKey_ = builderForValue.build();
+
+        bitField0_ |= 0x00000004;
+        return this;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder mergeSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
+        if (((bitField0_ & 0x00000004) == 0x00000004) &&
+            senderSigningKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) {
+          senderSigningKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder(senderSigningKey_).mergeFrom(value).buildPartial();
+        } else {
+          senderSigningKey_ = value;
+        }
+
+        bitField0_ |= 0x00000004;
+        return this;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder clearSenderSigningKey() {
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+
+        bitField0_ = (bitField0_ & ~0x00000004);
+        return this;
+      }
+
+      // @@protoc_insertion_point(builder_scope:textsecure.FastRatchetSenderKeyStateStructure)
+    }
+
+    static {
+      defaultInstance = new FastRatchetSenderKeyStateStructure(true);
+      defaultInstance.initFields();
+    }
+
+    // @@protoc_insertion_point(class_scope:textsecure.FastRatchetSenderKeyStateStructure)
+  }
+
+  public interface FastRatchetSenderKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FastRatchetSenderKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
+
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> 
+        getSenderKeyStatesList();
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getSenderKeyStates(int index);
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    int getSenderKeyStatesCount();
+  }
+  /**
+   * Protobuf type {@code textsecure.FastRatchetSenderKeyRecordStructure}
+   */
+  public static final class FastRatchetSenderKeyRecordStructure extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FastRatchetSenderKeyRecordStructure)
+      FastRatchetSenderKeyRecordStructureOrBuilder {
+    // Use FastRatchetSenderKeyRecordStructure.newBuilder() to construct.
+    private FastRatchetSenderKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
+      super(builder);
+      this.unknownFields = builder.getUnknownFields();
+    }
+    private FastRatchetSenderKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
+
+    private static final FastRatchetSenderKeyRecordStructure defaultInstance;
+    public static FastRatchetSenderKeyRecordStructure getDefaultInstance() {
+      return defaultInstance;
+    }
+
+    public FastRatchetSenderKeyRecordStructure getDefaultInstanceForType() {
+      return defaultInstance;
+    }
+
+    private final com.google.protobuf.ByteString unknownFields;
+    private FastRatchetSenderKeyRecordStructure(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      initFields();
+      int mutable_bitField0_ = 0;
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
+      try {
+        boolean done = false;
+        while (!done) {
+          int tag = input.readTag();
+          switch (tag) {
+            case 0:
+              done = true;
+              break;
+            default: {
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
+                                     extensionRegistry, tag)) {
+                done = true;
+              }
+              break;
+            }
+            case 10: {
+              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
+                senderKeyStates_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure>();
+                mutable_bitField0_ |= 0x00000001;
+              }
+              senderKeyStates_.add(input.readMessage(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.PARSER, extensionRegistry));
+              break;
+            }
+          }
+        }
+      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+        throw e.setUnfinishedMessage(this);
+      } catch (java.io.IOException e) {
+        throw new com.google.protobuf.InvalidProtocolBufferException(
+            e.getMessage()).setUnfinishedMessage(this);
+      } finally {
+        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
+        }
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
+    }
+    public static com.google.protobuf.Parser<FastRatchetSenderKeyRecordStructure> PARSER =
+        new com.google.protobuf.AbstractParser<FastRatchetSenderKeyRecordStructure>() {
+      public FastRatchetSenderKeyRecordStructure parsePartialFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return new FastRatchetSenderKeyRecordStructure(input, extensionRegistry);
+      }
+    };
+
+    @java.lang.Override
+    public com.google.protobuf.Parser<FastRatchetSenderKeyRecordStructure> getParserForType() {
+      return PARSER;
+    }
+
+    public static final int SENDERKEYSTATES_FIELD_NUMBER = 1;
+    private java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> senderKeyStates_;
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> getSenderKeyStatesList() {
+      return senderKeyStates_;
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructureOrBuilder> 
+        getSenderKeyStatesOrBuilderList() {
+      return senderKeyStates_;
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public int getSenderKeyStatesCount() {
+      return senderKeyStates_.size();
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getSenderKeyStates(int index) {
+      return senderKeyStates_.get(index);
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructureOrBuilder getSenderKeyStatesOrBuilder(
+        int index) {
+      return senderKeyStates_.get(index);
+    }
+
+    private void initFields() {
+      senderKeyStates_ = java.util.Collections.emptyList();
+    }
+    private byte memoizedIsInitialized = -1;
+    public final boolean isInitialized() {
+      byte isInitialized = memoizedIsInitialized;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
+
+      memoizedIsInitialized = 1;
+      return true;
+    }
+
+    public void writeTo(com.google.protobuf.CodedOutputStream output)
+                        throws java.io.IOException {
+      getSerializedSize();
+      for (int i = 0; i < senderKeyStates_.size(); i++) {
+        output.writeMessage(1, senderKeyStates_.get(i));
+      }
+      output.writeRawBytes(unknownFields);
+    }
+
+    private int memoizedSerializedSize = -1;
+    public int getSerializedSize() {
+      int size = memoizedSerializedSize;
+      if (size != -1) return size;
+
+      size = 0;
+      for (int i = 0; i < senderKeyStates_.size(); i++) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeMessageSize(1, senderKeyStates_.get(i));
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
+    }
+
+    private static final long serialVersionUID = 0L;
+    @java.lang.Override
+    protected java.lang.Object writeReplace()
+        throws java.io.ObjectStreamException {
+      return super.writeReplace();
+    }
+
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.ByteString data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.ByteString data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(byte[] data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        byte[] data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseDelimitedFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseDelimitedFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.CodedInputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+
+    public static Builder newBuilder() { return Builder.create(); }
+    public Builder newBuilderForType() { return newBuilder(); }
+    public static Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure prototype) {
+      return newBuilder().mergeFrom(prototype);
+    }
+    public Builder toBuilder() { return newBuilder(this); }
+
+    /**
+     * Protobuf type {@code textsecure.FastRatchetSenderKeyRecordStructure}
+     */
+    public static final class Builder extends
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FastRatchetSenderKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructureOrBuilder {
+      // Construct using org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure.newBuilder()
+      private Builder() {
+        maybeForceBuilderInitialization();
+      }
+
+      private void maybeForceBuilderInitialization() {
+      }
+      private static Builder create() {
+        return new Builder();
+      }
+
+      public Builder clear() {
+        super.clear();
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
+        return this;
+      }
+
+      public Builder clone() {
+        return create().mergeFrom(buildPartial());
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure getDefaultInstanceForType() {
+        return org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure.getDefaultInstance();
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure build() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure result = buildPartial();
+        if (!result.isInitialized()) {
+          throw newUninitializedMessageException(result);
+        }
+        return result;
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure buildPartial() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure result = new org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure(this);
+        int from_bitField0_ = bitField0_;
+        if (((bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
+          bitField0_ = (bitField0_ & ~0x00000001);
+        }
+        result.senderKeyStates_ = senderKeyStates_;
+        return result;
+      }
+
+      public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure other) {
+        if (other == org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure.getDefaultInstance()) return this;
+        if (!other.senderKeyStates_.isEmpty()) {
+          if (senderKeyStates_.isEmpty()) {
+            senderKeyStates_ = other.senderKeyStates_;
+            bitField0_ = (bitField0_ & ~0x00000001);
+          } else {
+            ensureSenderKeyStatesIsMutable();
+            senderKeyStates_.addAll(other.senderKeyStates_);
+          }
+          
+        }
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
+        return this;
+      }
+
+      public final boolean isInitialized() {
+        return true;
+      }
+
+      public Builder mergeFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parsedMessage = null;
+        try {
+          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          parsedMessage = (org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure) e.getUnfinishedMessage();
+          throw e;
+        } finally {
+          if (parsedMessage != null) {
+            mergeFrom(parsedMessage);
+          }
+        }
+        return this;
+      }
+      private int bitField0_;
+
+      private java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> senderKeyStates_ =
+        java.util.Collections.emptyList();
+      private void ensureSenderKeyStatesIsMutable() {
+        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure>(senderKeyStates_);
+          bitField0_ |= 0x00000001;
+         }
+      }
+
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> getSenderKeyStatesList() {
+        return java.util.Collections.unmodifiableList(senderKeyStates_);
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public int getSenderKeyStatesCount() {
+        return senderKeyStates_.size();
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getSenderKeyStates(int index) {
+        return senderKeyStates_.get(index);
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder setSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder setSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.Builder builderForValue) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(
+          org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.Builder builderForValue) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.Builder builderForValue) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addAllSenderKeyStates(
+          java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> values) {
+        ensureSenderKeyStatesIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderKeyStates_);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder clearSenderKeyStates() {
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder removeSenderKeyStates(int index) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.remove(index);
+
+        return this;
+      }
+
+      // @@protoc_insertion_point(builder_scope:textsecure.FastRatchetSenderKeyRecordStructure)
+    }
+
+    static {
+      defaultInstance = new FastRatchetSenderKeyRecordStructure(true);
+      defaultInstance.initFields();
+    }
+
+    // @@protoc_insertion_point(class_scope:textsecure.FastRatchetSenderKeyRecordStructure)
+  }
+
+
+  static {
   }
 
   // @@protoc_insertion_point(outer_class_scope)
diff --git a/java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java b/java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java
new file mode 100644
index 0000000..098cf24
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java
@@ -0,0 +1,79 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.util;
+
+/**
+ * Helper class for various conversion operations needed by the fast ratchet
+ * group cipher.
+ */
+public class FastRatchetUtil {
+  private FastRatchetUtil() {}
+
+  /**
+   * Convert the "scale" parameter value into the number of actual key chains
+   * it should represent.
+   */
+  public static int scaleToDimensions(int scale) {
+    return 1 << scale;
+  }
+
+  static int composeIterations(int[] components) {
+    int dimensions = components.length;
+    int bits = 32 / dimensions;
+    int mask = (int)((1L << bits) - 1);
+    int result = 0;
+
+    for (int i = 0; i < dimensions; i++) {
+      result += (components[dimensions - i - 1] & mask) << (bits * i);
+    }
+    return result;
+  }
+
+  /**
+   * Compose individual chain key iterations into the corresponding message
+   * iteration.
+   *
+   * @param chainIterations Individual chain key iterations
+   * @return Message iteration
+   */
+  public static int composeChainIterations(int[] chainIterations) {
+    int[] result = new int[chainIterations.length];
+    for (int i = 0; i < chainIterations.length - 1; i++) {
+      result[i] = chainIterations[i] - 1;
+    }
+    result[chainIterations.length - 1] = chainIterations[chainIterations.length - 1];
+
+    return composeIterations(result);
+  }
+
+  static int[] decomposeIteration(int iteration, int count) {
+    int dimensions = count;
+    int bits = 32 / dimensions;
+    int mask = (int)((1L << bits) - 1);
+    int[] result = new int[count];
+
+    for (int i = 0; i < dimensions; i++) {
+      result[dimensions - i - 1] = (iteration >> bits * i) & mask;
+    }
+
+    return result;
+  }
+
+  /**
+   * Decompose a message iteration into the individual chain key iterations.
+   *
+   * @param iteration The iteration to decompose
+   * @param chainCount The number of chains in the cipher
+   * @return Individual chain key iterations
+   */
+  public static int[] decomposeChainIterations(int iteration, int chainCount) {
+    int[] result = decomposeIteration(iteration, chainCount);
+    for (int i = 0; i < result.length - 1; i++) {
+      result[i]++;
+    }
+    return result;
+  }
+}
diff --git a/protobuf/FingerprintProtocol.proto b/protobuf/FingerprintProtocol.proto
index 8aeacd8..b2f1571 100644
--- a/protobuf/FingerprintProtocol.proto
+++ b/protobuf/FingerprintProtocol.proto
@@ -2,6 +2,7 @@ package textsecure;
 
 option java_package = "org.whispersystems.libsignal.fingerprint";
 option java_outer_classname = "FingerprintProtos";
+option optimize_for = LITE_RUNTIME;
 
 message FingerprintData {
   optional bytes publicKey  = 1;
diff --git a/protobuf/LocalStorageProtocol.proto b/protobuf/LocalStorageProtocol.proto
index 7de2f19..49fb7d3 100644
--- a/protobuf/LocalStorageProtocol.proto
+++ b/protobuf/LocalStorageProtocol.proto
@@ -2,6 +2,7 @@ package textsecure;
 
 option java_package = "org.whispersystems.libsignal.state";
 option java_outer_classname = "StorageProtos";
+option optimize_for = LITE_RUNTIME;
 
 message SessionStructure {
     message Chain {
@@ -109,4 +110,14 @@ message SenderKeyStateStructure {
 
 message SenderKeyRecordStructure {
     repeated SenderKeyStateStructure senderKeyStates = 1;
+}
+
+message FastRatchetSenderKeyStateStructure {
+    optional uint32                                   senderKeyId       = 1;
+    repeated SenderKeyStateStructure.SenderChainKey   senderChainKeys   = 2;
+    optional SenderKeyStateStructure.SenderSigningKey senderSigningKey  = 3;
+}
+
+message FastRatchetSenderKeyRecordStructure {
+    repeated FastRatchetSenderKeyStateStructure senderKeyStates = 1;
 }
\ No newline at end of file
diff --git a/protobuf/WhisperTextProtocol.proto b/protobuf/WhisperTextProtocol.proto
index f6a3c95..7f5ef4b 100644
--- a/protobuf/WhisperTextProtocol.proto
+++ b/protobuf/WhisperTextProtocol.proto
@@ -2,6 +2,7 @@ package textsecure;
 
 option java_package = "org.whispersystems.libsignal.protocol";
 option java_outer_classname = "SignalProtos";
+option optimize_for = LITE_RUNTIME;
 
 message SignalMessage {
   optional bytes  ratchetKey      = 1;
@@ -40,6 +41,13 @@ message SenderKeyDistributionMessage {
   optional bytes  signingKey = 4;
 }
 
+message FastRatchetSenderKeyDistributionMessage {
+  optional uint32 id         = 1;
+  optional uint32 iteration  = 2;
+  repeated bytes  chainKeys  = 3;
+  optional bytes  signingKey = 4;
+}
+
 message DeviceConsistencyCodeMessage {
   optional uint32 generation = 1;
   optional bytes  signature  = 2;
diff --git a/tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java b/tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java
new file mode 100644
index 0000000..76af303
--- /dev/null
+++ b/tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java
@@ -0,0 +1,587 @@
+package org.whispersystems.libsignal.groups;
+
+import android.test.MoreAsserts;
+
+import junit.framework.TestCase;
+
+import org.whispersystems.libsignal.DuplicateMessageException;
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.InvalidMessageException;
+import org.whispersystems.libsignal.LegacyMessageException;
+import org.whispersystems.libsignal.NoSessionException;
+import org.whispersystems.libsignal.SignalProtocolAddress;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyState;
+import org.whispersystems.libsignal.protocol.FastRatchetSenderKeyDistributionMessage;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+import org.whispersystems.libsignal.util.KeyHelper;
+
+import java.security.InvalidKeyException;
+import java.security.NoSuchAlgorithmException;
+import java.util.Arrays;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+
+public class FastRatchetGroupCipherTest extends TestCase {
+
+  private static final SignalProtocolAddress SENDER_ADDRESS = new SignalProtocolAddress("+14150001111", 1);
+  private static final SenderKeyName         GROUP_SENDER   = new SenderKeyName("nihilist history broadcast group", SENDER_ADDRESS);
+
+
+  public void testBasicEncryptDecrypt()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, GROUP_SENDER);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, GROUP_SENDER);
+
+    FastRatchetSenderKeyDistributionMessage sentAliceDistributionMessage     = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    FastRatchetSenderKeyDistributionMessage receivedAliceDistributionMessage = new FastRatchetSenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+    bobSessionBuilder.process(GROUP_SENDER, receivedAliceDistributionMessage);
+
+    byte[] ciphertextFromAlice = aliceGroupCipher.encrypt("smert ze smert".getBytes());
+    byte[] plaintextFromAlice  = bobGroupCipher.decrypt(ciphertextFromAlice);
+
+    assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
+  }
+
+  public void testBasicRatchet()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    SenderKeyName aliceName = GROUP_SENDER;
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, aliceName);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, aliceName);
+
+    FastRatchetSenderKeyDistributionMessage sentAliceDistributionMessage =
+        aliceSessionBuilder.create(aliceName, 2);
+    FastRatchetSenderKeyDistributionMessage receivedAliceDistributionMessage =
+        new FastRatchetSenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+
+    bobSessionBuilder.process(aliceName, receivedAliceDistributionMessage);
+
+    byte[] ciphertextFromAlice  = aliceGroupCipher.encrypt("smert ze smert".getBytes());
+    byte[] ciphertextFromAlice2 = aliceGroupCipher.encrypt("smert ze smert2".getBytes());
+    byte[] ciphertextFromAlice3 = aliceGroupCipher.encrypt("smert ze smert3".getBytes());
+
+    byte[] plaintextFromAlice = bobGroupCipher.decrypt(ciphertextFromAlice);
+
+    try {
+      bobGroupCipher.decrypt(ciphertextFromAlice);
+      throw new AssertionError("Should have ratcheted forward!");
+    } catch (DuplicateMessageException dme) {
+      // good
+    }
+
+    byte[] plaintextFromAlice2 = bobGroupCipher.decrypt(ciphertextFromAlice2);
+    byte[] plaintextFromAlice3 = bobGroupCipher.decrypt(ciphertextFromAlice3);
+
+    assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
+    assertTrue(new String(plaintextFromAlice2).equals("smert ze smert2"));
+    assertTrue(new String(plaintextFromAlice3).equals("smert ze smert3"));
+  }
+
+  public void testLateJoin() throws NoSessionException, InvalidMessageException, LegacyMessageException, DuplicateMessageException {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+
+
+    SenderKeyName aliceName = GROUP_SENDER;
+    int           scale     = 3;
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, aliceName);
+
+    FastRatchetSenderKeyDistributionMessage aliceDistributionMessage = aliceSessionBuilder.create(aliceName, scale);
+    // Send off to some people.
+
+    for (int i = 0; i < 100; i++) {
+      aliceGroupCipher.encrypt("up the punks up the punks up the punks".getBytes());
+    }
+
+    // Now Bob Joins.
+    FastRatchetGroupSessionBuilder bobSessionBuilder = new FastRatchetGroupSessionBuilder(bobStore);
+    FastRatchetGroupCipher         bobGroupCipher    = new FastRatchetGroupCipher(bobStore, aliceName);
+
+
+    FastRatchetSenderKeyDistributionMessage distributionMessageToBob = aliceSessionBuilder.create(aliceName, scale);
+    bobSessionBuilder.process(aliceName, new FastRatchetSenderKeyDistributionMessage(distributionMessageToBob.serialize()));
+
+    byte[] ciphertext = aliceGroupCipher.encrypt("welcome to the group".getBytes());
+    byte[] plaintext  = bobGroupCipher.decrypt(ciphertext);
+
+    assertEquals(new String(plaintext), "welcome to the group");
+  }
+
+  public void testOutOfOrderUnsupported()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    SenderKeyName aliceName = GROUP_SENDER;
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, aliceName);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, aliceName);
+
+    FastRatchetSenderKeyDistributionMessage aliceDistributionMessage =
+        aliceSessionBuilder.create(aliceName, 3);
+
+    bobSessionBuilder.process(aliceName, aliceDistributionMessage);
+
+    byte[] ciphertext1 = aliceGroupCipher.encrypt("up the punks1".getBytes());
+    byte[] ciphertext2 = aliceGroupCipher.encrypt("up the punks2".getBytes());
+    byte[] ciphertext3 = aliceGroupCipher.encrypt("up the punks3".getBytes());
+    byte[] ciphertext4 = aliceGroupCipher.encrypt("up the punks4".getBytes());
+
+    byte[] plaintextFromAlice2 = bobGroupCipher.decrypt(ciphertext2);
+
+    try {
+      bobGroupCipher.decrypt(ciphertext1);
+      throw new AssertionError("Should have failed!");
+    } catch (DuplicateMessageException e) {
+      // good
+    }
+
+    byte[] plaintextFromAlice4 = bobGroupCipher.decrypt(ciphertext4);
+
+    try {
+      bobGroupCipher.decrypt(ciphertext3);
+      throw new AssertionError("Should have failed!");
+    } catch (DuplicateMessageException e) {
+      // good
+    }
+
+    assertTrue(new String(plaintextFromAlice2).equals("up the punks2"));
+    assertTrue(new String(plaintextFromAlice4).equals("up the punks4"));
+
+  }
+
+  public void testEncryptWithLossyDecrypt()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyIdException
+  {
+    runEncryptWithLossyDecrypt(0, 1, 2, 10);
+    runEncryptWithLossyDecrypt(1, 10, 20, 30);
+    runEncryptWithLossyDecrypt(2, 100, 100, 100);
+    runEncryptWithLossyDecrypt(3, 16, 48, 18);
+    runEncryptWithLossyDecrypt(4, 99, 14, 6);
+    runEncryptWithLossyDecrypt(5, 126, 1, 1);
+  }
+
+  private void runEncryptWithLossyDecrypt(int scale, int skip1, int skip2, int skip3) throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException, InvalidKeyIdException {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, GROUP_SENDER);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, GROUP_SENDER);
+
+    FastRatchetSenderKeyDistributionMessage sentAliceDistributionMessage     = aliceSessionBuilder.create(GROUP_SENDER, scale);
+    FastRatchetSenderKeyDistributionMessage receivedAliceDistributionMessage = new FastRatchetSenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+    bobSessionBuilder.process(GROUP_SENDER, receivedAliceDistributionMessage);
+
+    int expectedIteration = 0;
+
+    // Encrypt a series of messages, only retaining a few of them
+    for (int i = 0; i < skip1; i++) {
+      aliceGroupCipher.encrypt("missed smert ze smert".getBytes());
+    }
+
+    byte[] ciphertextFromAlice = aliceGroupCipher.encrypt("smert ze smert".getBytes());
+    expectedIteration += skip1 + 1;
+
+    for (int i = 0; i < skip2; i++) {
+      aliceGroupCipher.encrypt("missed smert ze smert".getBytes());
+    }
+
+    byte[] ciphertextFromAlice2 = aliceGroupCipher.encrypt("smert ze smert2".getBytes());
+    expectedIteration += skip2 + 1;
+
+    for (int i = 0; i < skip3; i++) {
+      aliceGroupCipher.encrypt("missed smert ze smert".getBytes());
+    }
+
+    byte[] ciphertextFromAlice3 = aliceGroupCipher.encrypt("smert ze smert3".getBytes());
+    expectedIteration += skip3 + 1;
+
+    // Verify that the sender is on the expected iteration
+    FastRatchetSenderKeyRecord aliceRecord = aliceStore.loadFastRatchetSenderKey(GROUP_SENDER);
+    FastRatchetSenderKeyState  aliceState  = aliceRecord.getSenderKeyState();
+    assertEquals(expectedIteration, aliceState.getSenderChainKey().getIteration());
+
+    // Decrypt the few messages we retained
+    byte[] plaintextFromAlice  = bobGroupCipher.decrypt(ciphertextFromAlice);
+    byte[] plaintextFromAlice2 = bobGroupCipher.decrypt(ciphertextFromAlice2);
+    byte[] plaintextFromAlice3 = bobGroupCipher.decrypt(ciphertextFromAlice3);
+
+    assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
+    assertTrue(new String(plaintextFromAlice2).equals("smert ze smert2"));
+    assertTrue(new String(plaintextFromAlice3).equals("smert ze smert3"));
+
+    // Verify that receiver is also on the expected iteration
+    FastRatchetSenderKeyRecord bobRecord = bobStore.loadFastRatchetSenderKey(GROUP_SENDER);
+    FastRatchetSenderKeyState  bobState  = bobRecord.getSenderKeyState();
+    assertEquals(expectedIteration, bobState.getSenderChainKey().getIteration());
+  }
+
+  public void testInitialSingleChainState() {
+    byte[]                    initialSeed = KeyHelper.generateSenderKey();
+    FastRatchetSenderChainKey chainKey    = new FastRatchetSenderChainKey(initialSeed, 0);
+
+    assertEquals(0, chainKey.getIteration());
+
+    byte[][] seeds = chainKey.getSeeds();
+    assertEquals(1, seeds.length);
+    assertTrue(Arrays.equals(initialSeed, seeds[0]));
+  }
+
+  public void testInitialMultiChainState() {
+    byte[] initialSeed = KeyHelper.generateSenderKey();
+
+    for (int i = 1; i <= 5; i++) {
+      FastRatchetSenderChainKey chainKey       = new FastRatchetSenderChainKey(initialSeed, i);
+      int                       expectedChains = FastRatchetUtil.scaleToDimensions(i);
+
+      assertEquals(0, chainKey.getIteration());
+
+      byte[][] chainSeeds = chainKey.getDerivedSeeds();
+
+      assertEquals(expectedChains, chainSeeds.length);
+
+      for (int j = 0; j < expectedChains; j++) {
+        assertFalse(Arrays.equals(initialSeed, chainSeeds[j]));
+      }
+    }
+  }
+
+  public void testInitialChainState() {
+    byte[] initialSeed = KeyHelper.generateSenderKey();
+
+    // Create the expected chains
+    byte[] CK1 = initialSeed;
+    byte[] CK2;
+    byte[] CK3;
+    byte[] CK4;
+
+    CK2 = HmacSHA256(new byte[] {0x03}, CK1);
+    CK1 = HmacSHA256(new byte[] {0x02}, CK1);
+
+    CK3 = HmacSHA256(new byte[] {0x04}, CK2);
+    CK2 = HmacSHA256(new byte[] {0x03}, CK2);
+
+    CK4 = HmacSHA256(new byte[] {0x05}, CK3);
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+
+    // Compute and verify the actual chains
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(initialSeed, 2);
+
+    assertEquals(0, chainKey.getIteration());
+
+    byte[][] seeds = chainKey.getDerivedSeeds();
+    assertEquals(4, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+  }
+
+  public void testIntermediateRatchet() {
+    byte[] CK1 = KeyHelper.generateSenderKey();
+    byte[] CK2 = KeyHelper.generateSenderKey();
+    byte[] CK3 = KeyHelper.generateSenderKey();
+    byte[] CK4 = KeyHelper.generateSenderKey();
+
+    int initialIteration = 356;
+    int finalIteration   = 66306;
+
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(
+        initialIteration, new byte[][] {CK1, CK2, CK3, CK4});
+
+    // Create the expected chain operation results
+    // New CK3 from CK2
+    CK3 = HmacSHA256(new byte[] {0x04}, CK2);
+
+    // Ratchet CK2
+    CK2 = HmacSHA256(new byte[] {0x03}, CK2);
+
+    // Ratchet CK3
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+
+    // New CK4 from CK3
+    CK4 = HmacSHA256(new byte[] {0x05}, CK3);
+
+    // Ratchet CK3 one last time
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+
+    // Ratchet CK4
+    CK4 = HmacSHA256(new byte[] {0x05}, CK4);
+    CK4 = HmacSHA256(new byte[] {0x05}, CK4);
+
+    // Compare to the actual results
+    FastRatchetSenderChainKey finalKey = chainKey.getNext(finalIteration - initialIteration);
+
+    assertEquals(finalIteration, finalKey.getIteration());
+
+    byte[][] seeds = finalKey.getSeeds();
+    assertEquals(4, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+  }
+
+  public void testLargeScaleRatchet() {
+    byte[] CK1  = KeyHelper.generateSenderKey();
+    byte[] CK2  = KeyHelper.generateSenderKey();
+    byte[] CK3  = KeyHelper.generateSenderKey();
+    byte[] CK4  = KeyHelper.generateSenderKey();
+    byte[] CK5  = KeyHelper.generateSenderKey();
+    byte[] CK6  = KeyHelper.generateSenderKey();
+    byte[] CK7  = KeyHelper.generateSenderKey();
+    byte[] CK8  = KeyHelper.generateSenderKey();
+    byte[] CK9  = KeyHelper.generateSenderKey();
+    byte[] CK10 = KeyHelper.generateSenderKey();
+    byte[] CK11 = KeyHelper.generateSenderKey();
+    byte[] CK12 = KeyHelper.generateSenderKey();
+    byte[] CK13 = KeyHelper.generateSenderKey();
+    byte[] CK14 = KeyHelper.generateSenderKey();
+    byte[] CK15 = KeyHelper.generateSenderKey();
+    byte[] CK16 = KeyHelper.generateSenderKey();
+
+    int initialIteration = 0;
+    int finalIteration   = 85;
+
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(
+        initialIteration, new byte[][] {
+        CK1, CK2, CK3, CK4, CK5, CK6, CK7, CK8,
+        CK9, CK10, CK11, CK12, CK13, CK14, CK15, CK16});
+
+    // Create the expected chain operation results
+    // CK:    1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
+    // From: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
+    // To:   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1]
+
+    // New CK14 from CK13
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK13);
+
+    // Ratchet CK13
+    CK13 = HmacSHA256(new byte[] {0x0E}, CK13);
+
+    // Ratchet CK14
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // New CK15 from CK14
+    CK15 = HmacSHA256(new byte[] {0x10}, CK14);
+
+    // Ratchet CK14 one last time
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // Ratchet CK15
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // New CK16 from CK15
+    CK16 = HmacSHA256(new byte[] {0x11}, CK15);
+
+    // Ratchet CK15 one last time
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // Ratchet CK16
+    CK16 = HmacSHA256(new byte[] {0x11}, CK16);
+
+    // Compare to the actual results
+    FastRatchetSenderChainKey finalKey = chainKey.getNext(finalIteration - initialIteration);
+
+    assertEquals(finalIteration, finalKey.getIteration());
+
+    byte[][] seeds = finalKey.getSeeds();
+    assertEquals(16, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+    MoreAsserts.assertEquals(CK5, seeds[4]);
+    MoreAsserts.assertEquals(CK6, seeds[5]);
+    MoreAsserts.assertEquals(CK7, seeds[6]);
+    MoreAsserts.assertEquals(CK8, seeds[7]);
+    MoreAsserts.assertEquals(CK9, seeds[8]);
+    MoreAsserts.assertEquals(CK10, seeds[9]);
+    MoreAsserts.assertEquals(CK11, seeds[10]);
+    MoreAsserts.assertEquals(CK12, seeds[11]);
+    MoreAsserts.assertEquals(CK13, seeds[12]);
+    MoreAsserts.assertEquals(CK14, seeds[13]);
+    MoreAsserts.assertEquals(CK15, seeds[14]);
+    MoreAsserts.assertEquals(CK16, seeds[15]);
+  }
+
+  public void testLargeScaleRatchetWithRollover() {
+    byte[] CK1  = KeyHelper.generateSenderKey();
+    byte[] CK2  = KeyHelper.generateSenderKey();
+    byte[] CK3  = KeyHelper.generateSenderKey();
+    byte[] CK4  = KeyHelper.generateSenderKey();
+    byte[] CK5  = KeyHelper.generateSenderKey();
+    byte[] CK6  = KeyHelper.generateSenderKey();
+    byte[] CK7  = KeyHelper.generateSenderKey();
+    byte[] CK8  = KeyHelper.generateSenderKey();
+    byte[] CK9  = KeyHelper.generateSenderKey();
+    byte[] CK10 = KeyHelper.generateSenderKey();
+    byte[] CK11 = KeyHelper.generateSenderKey();
+    byte[] CK12 = KeyHelper.generateSenderKey();
+    byte[] CK13 = KeyHelper.generateSenderKey();
+    byte[] CK14 = KeyHelper.generateSenderKey();
+    byte[] CK15 = KeyHelper.generateSenderKey();
+    byte[] CK16 = KeyHelper.generateSenderKey();
+
+    int initialIteration = 0;
+    int finalIteration   = 174;
+
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(
+        initialIteration, new byte[][] {
+        CK1, CK2, CK3, CK4, CK5, CK6, CK7, CK8,
+        CK9, CK10, CK11, CK12, CK13, CK14, CK15, CK16});
+
+    // Create the expected chain operation results
+    // CK:    1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
+    // From: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
+    // To:   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 4, 2]
+
+    // Ratchet CK13
+    CK13 = HmacSHA256(new byte[] {0x0E}, CK13);
+
+    // New CK14 from CK13
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK13);
+
+    // Ratchet CK13
+    CK13 = HmacSHA256(new byte[] {0x0E}, CK13);
+
+    // Ratchet CK14 twice
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // New CK15 from CK14
+    CK15 = HmacSHA256(new byte[] {0x10}, CK14);
+
+    // Ratchet CK14
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // Ratchet CK15 three times
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // New CK16 from CK15
+    CK16 = HmacSHA256(new byte[] {0x11}, CK15);
+
+    // Ratchet CK15
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // Ratchet CK16 twice
+    CK16 = HmacSHA256(new byte[] {0x11}, CK16);
+    CK16 = HmacSHA256(new byte[] {0x11}, CK16);
+
+    // Compare to the actual results
+    FastRatchetSenderChainKey finalKey = chainKey.getNext(finalIteration - initialIteration);
+
+    assertEquals(finalIteration, finalKey.getIteration());
+
+    byte[][] seeds = finalKey.getSeeds();
+    assertEquals(16, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+    MoreAsserts.assertEquals(CK5, seeds[4]);
+    MoreAsserts.assertEquals(CK6, seeds[5]);
+    MoreAsserts.assertEquals(CK7, seeds[6]);
+    MoreAsserts.assertEquals(CK8, seeds[7]);
+    MoreAsserts.assertEquals(CK9, seeds[8]);
+    MoreAsserts.assertEquals(CK10, seeds[9]);
+    MoreAsserts.assertEquals(CK11, seeds[10]);
+    MoreAsserts.assertEquals(CK12, seeds[11]);
+    MoreAsserts.assertEquals(CK13, seeds[12]);
+    MoreAsserts.assertEquals(CK14, seeds[13]);
+    MoreAsserts.assertEquals(CK15, seeds[14]);
+    MoreAsserts.assertEquals(CK16, seeds[15]);
+  }
+
+  public void testDistributionMessageSizes()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, GROUP_SENDER);
+
+    FastRatchetSenderKeyDistributionMessage distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    byte[] distribution0 = distributionMessage.serialize();
+
+    aliceGroupCipher.encrypt("smert ze smert".getBytes());
+
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+
+    byte[] distribution1 = distributionMessage.serialize();
+
+    aliceGroupCipher.encrypt("smert ze smert".getBytes());
+
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+
+    byte[] distribution2 = distributionMessage.serialize();
+
+    assertTrue(distribution0.length < distribution1.length);
+    assertEquals(distribution1.length, distribution2.length);
+  }
+
+  public void testDistributionMessageScaleChange()
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+
+    FastRatchetSenderKeyDistributionMessage distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    byte[] distribution0 = distributionMessage.serialize();
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    byte[] distribution1 = distributionMessage.serialize();
+
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 3);
+    byte[] distribution2 = distributionMessage.serialize();
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 3);
+    byte[] distribution3 = distributionMessage.serialize();
+
+    MoreAsserts.assertEquals(distribution0, distribution1);
+
+    assertFalse(Arrays.equals(distribution1, distribution2));
+    assertTrue(distribution1.length < distribution2.length);
+
+    MoreAsserts.assertEquals(distribution2, distribution3);
+  }
+
+  private static byte[] HmacSHA256(byte[] seed, byte[] key) {
+    try {
+      Mac mac = Mac.getInstance("HmacSHA256");
+      mac.init(new SecretKeySpec(key, "HmacSHA256"));
+
+      return mac.doFinal(seed);
+    } catch (NoSuchAlgorithmException | InvalidKeyException e) {
+      throw new AssertionError(e);
+    }
+  }
+
+}
diff --git a/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java b/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java
index 41082cd..f96443a 100644
--- a/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java
+++ b/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java
@@ -2,6 +2,7 @@ package org.whispersystems.libsignal.groups;
 
 import junit.framework.TestCase;
 
+import org.whispersystems.libsignal.InvalidKeyException;
 import org.whispersystems.libsignal.SignalProtocolAddress;
 import org.whispersystems.libsignal.DuplicateMessageException;
 import org.whispersystems.libsignal.InvalidMessageException;
@@ -22,7 +23,7 @@ public class GroupCipherTest extends TestCase {
   private static final SignalProtocolAddress SENDER_ADDRESS = new SignalProtocolAddress("+14150001111", 1);
   private static final SenderKeyName  GROUP_SENDER   = new SenderKeyName("nihilist history reading group", SENDER_ADDRESS);
 
-  public void testNoSession() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException {
+  public void testNoSession() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -47,7 +48,7 @@ public class GroupCipherTest extends TestCase {
   }
 
   public void testBasicEncryptDecrypt()
-      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyException
   {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
@@ -68,7 +69,7 @@ public class GroupCipherTest extends TestCase {
     assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
   }
 
-  public void testLargeMessages() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException {
+  public void testLargeMessages() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -92,7 +93,7 @@ public class GroupCipherTest extends TestCase {
   }
 
   public void testBasicRatchet()
-      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyException
   {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
@@ -133,7 +134,7 @@ public class GroupCipherTest extends TestCase {
     assertTrue(new String(plaintextFromAlice3).equals("smert ze smert3"));
   }
 
-  public void testLateJoin() throws NoSessionException, InvalidMessageException, LegacyMessageException, DuplicateMessageException {
+  public void testLateJoin() throws NoSessionException, InvalidMessageException, LegacyMessageException, DuplicateMessageException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -168,7 +169,7 @@ public class GroupCipherTest extends TestCase {
 
 
   public void testOutOfOrder()
-      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyException
   {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
@@ -201,7 +202,7 @@ public class GroupCipherTest extends TestCase {
     }
   }
 
-  public void testEncryptNoSession() {
+  public void testEncryptNoSession() throws InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     GroupCipher aliceGroupCipher = new GroupCipher(aliceStore, new SenderKeyName("coolio groupio", new SignalProtocolAddress("+10002223333", 1)));
     try {
@@ -213,7 +214,7 @@ public class GroupCipherTest extends TestCase {
   }
 
 
-  public void testTooFarInFuture() throws DuplicateMessageException, InvalidMessageException, LegacyMessageException, NoSessionException {
+  public void testTooFarInFuture() throws DuplicateMessageException, InvalidMessageException, LegacyMessageException, NoSessionException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -275,6 +276,27 @@ public class GroupCipherTest extends TestCase {
     }
   }
 
+  public void testInvalidSignatureKey()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
+    InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
+
+    GroupSessionBuilder aliceSessionBuilder = new GroupSessionBuilder(aliceStore);
+    GroupSessionBuilder bobSessionBuilder   = new GroupSessionBuilder(bobStore);
+
+    GroupCipher bobGroupCipher   = new GroupCipher(bobStore, GROUP_SENDER);
+
+    SenderKeyDistributionMessage sentAliceDistributionMessage     = aliceSessionBuilder.create(GROUP_SENDER);
+    SenderKeyDistributionMessage receivedAliceDistributionMessage = new SenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+    bobSessionBuilder.process(GROUP_SENDER, receivedAliceDistributionMessage);
+
+    try {
+      bobGroupCipher.encrypt("smert ze smert".getBytes());
+    } catch (InvalidKeyException e) {
+      // good
+    }
+  }
 
   private int randomInt() {
     try {
diff --git a/tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java b/tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java
new file mode 100644
index 0000000..642ba02
--- /dev/null
+++ b/tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java
@@ -0,0 +1,33 @@
+package org.whispersystems.libsignal.groups;
+
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyStore;
+
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+
+public class InMemoryFastRatchetSenderKeyStore implements FastRatchetSenderKeyStore {
+
+  private final Map<SenderKeyName, FastRatchetSenderKeyRecord> store = new HashMap<>();
+
+  @Override
+  public void storeFastRatchetSenderKey(SenderKeyName senderKeyName, FastRatchetSenderKeyRecord record) {
+    store.put(senderKeyName, record);
+  }
+
+  @Override
+  public FastRatchetSenderKeyRecord loadFastRatchetSenderKey(SenderKeyName senderKeyName) {
+    try {
+      FastRatchetSenderKeyRecord record = store.get(senderKeyName);
+
+      if (record == null) {
+        return new FastRatchetSenderKeyRecord();
+      } else {
+        return new FastRatchetSenderKeyRecord(record.serialize());
+      }
+    } catch (IOException e) {
+      throw new AssertionError(e);
+    }
+  }
+}
diff --git a/tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java b/tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java
new file mode 100644
index 0000000..6ec4fd7
--- /dev/null
+++ b/tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java
@@ -0,0 +1,60 @@
+package org.whispersystems.libsignal.util;
+
+import android.test.MoreAsserts;
+
+import junit.framework.TestCase;
+
+public class FastRatchetUtilTest extends TestCase {
+
+  public void testComposeIterationScale0() {
+    assertEquals(0, FastRatchetUtil.composeIterations(new int[] {0x00}));
+    assertEquals(1, FastRatchetUtil.composeIterations(new int[] {0x01}));
+  }
+
+  public void testComposeIterationScale4() {
+    assertEquals(4, FastRatchetUtil.composeIterations(new int[] {0x00, 0x00, 0x00, 0x04}));
+    assertEquals(772, FastRatchetUtil.composeIterations(new int[] {0x00, 0x00, 0x03, 0x04}));
+    assertEquals(131844, FastRatchetUtil.composeIterations(new int[] {0x00, 0x02, 0x03, 0x04}));
+    assertEquals(16909060, FastRatchetUtil.composeIterations(new int[] {0x01, 0x02, 0x03, 0x04}));
+    assertEquals(65280, FastRatchetUtil.composeIterations(new int[] {0x00, 0x00, 0xFF, 0x00}));
+  }
+
+  public void testDecomposeIterationScale0() {
+    MoreAsserts.assertEquals(new int[] {0x00}, FastRatchetUtil.decomposeIteration(0, 1));
+    MoreAsserts.assertEquals(new int[] {0x01}, FastRatchetUtil.decomposeIteration(1, 1));
+  }
+
+  public void testDecomposeIterationScale4() {
+    MoreAsserts.assertEquals(new int[] {0x00, 0x00, 0x00, 0x04}, FastRatchetUtil.decomposeIteration(4, 4));
+    MoreAsserts.assertEquals(new int[] {0x00, 0x00, 0x03, 0x04}, FastRatchetUtil.decomposeIteration(772, 4));
+    MoreAsserts.assertEquals(new int[] {0x00, 0x02, 0x03, 0x04}, FastRatchetUtil.decomposeIteration(131844, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x02, 0x03, 0x04}, FastRatchetUtil.decomposeIteration(16909060, 4));
+    MoreAsserts.assertEquals(new int[] {0x00, 0x00, 0xFF, 0x00}, FastRatchetUtil.decomposeIteration(65280, 4));
+  }
+
+  public void testComposeChainIterationsScale0() {
+    assertEquals(0, FastRatchetUtil.composeChainIterations(new int[] {0x00}));
+    assertEquals(1, FastRatchetUtil.composeChainIterations(new int[] {0x01}));
+  }
+
+  public void testComposeChainIterationsScale4() {
+    assertEquals(4, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x01, 0x01, 0x04}));
+    assertEquals(772, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x01, 0x04, 0x04}));
+    assertEquals(131844, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x03, 0x04, 0x04}));
+    assertEquals(16909060, FastRatchetUtil.composeChainIterations(new int[] {0x02, 0x03, 0x04, 0x04}));
+    assertEquals(65280, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x01, 0x100, 0x00}));
+  }
+
+  public void testDecomposeChainIterationsScale0() {
+    MoreAsserts.assertEquals(new int[] {0x00}, FastRatchetUtil.decomposeChainIterations(0, 1));
+    MoreAsserts.assertEquals(new int[] {0x01}, FastRatchetUtil.decomposeChainIterations(1, 1));
+  }
+
+  public void testDecomposeChainIterationsScale4() {
+    MoreAsserts.assertEquals(new int[] {0x01, 0x01, 0x01, 0x04}, FastRatchetUtil.decomposeChainIterations(4, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x01, 0x04, 0x04}, FastRatchetUtil.decomposeChainIterations(772, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x03, 0x04, 0x04}, FastRatchetUtil.decomposeChainIterations(131844, 4));
+    MoreAsserts.assertEquals(new int[] {0x02, 0x03, 0x04, 0x04}, FastRatchetUtil.decomposeChainIterations(16909060, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x01, 0x100, 0x00}, FastRatchetUtil.decomposeChainIterations(65280, 4));
+  }
+}
-- 
2.7.4

